name: Microsoft CodeQL Pack Publish
description: Fetches the latest version of CodeQL

on:
  push:
    branches:
      - dilan/publish-opensource-packs

jobs:
  codeqlversion:
    runs-on: ubuntu-latest
    outputs:
      codeql_version: ${{ steps.set_codeql_version.outputs.codeql_version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 
      - name: Set CodeQL Version
        id: set_codeql_version
        run: |
            git fetch
            git fetch --tags
            CURRENT_COMMIT=$(git rev-list -1 HEAD)
            CURRENT_TAG=$(git describe --tags --abbrev=0 --match 'codeql-cli/v*' $CURRENT_COMMIT)
            CODEQL_VERSION="${CURRENT_TAG#codeql-cli/}"
            echo "CODEQL_VERSION=$CODEQL_VERSION" >> $GITHUB_OUTPUT
  publish:
    needs: codeqlversion
    runs-on: ubuntu-latest
    strategy:
      matrix:
        language: ['csharp', 'cpp', 'java', 'javascript', 'python', 'ruby', 'go', 'rust', 'swift', 'powershell']
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Install CodeQL
      shell: bash
      run: |
        gh extension install github/gh-codeql
        gh codeql download "${{ needs.codeqlversion.outputs.codeql_version }}"
        gh codeql set-version "${{ needs.codeqlversion.outputs.codeql_version }}"
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Prepare Publish
      shell: bash
      run: |
        # # Download latest qlpack
        # gh codeql pack download "microsoft/$LANGUAGE-queries"
        # PACK_DIR="$HOME/.codeql/packages/microsoft/$LANGUAGE"
        # VERSION_COUNT=$(ls -d "$PACK_DIR"/*/ | wc -l)
        # [[ "$VERSION_COUNT" -ne 1 ]] && { echo "Expected exactly one version in $PACK_DIR, but found $VERSION_COUNT. Exiting."; exit 1; }

        # # Increment version
        # CURRENT_VERSION=$(ls -v "$PACK_DIR" | tail -n 1)
        # MAJOR=$(echo "$CURRENT_VERSION" | cut -d. -f1)
        # MINOR=$(echo "$CURRENT_VERSION" | cut -d. -f2)
        # PATCH=$(echo "$CURRENT_VERSION" | cut -d. -f3)
        # NEXT_VERSION="$MAJOR.$MINOR.$((PATCH + 1))"

        # Extract dependencies from the existing qlpack.yml before deleting
        DEPENDENCIES=$(yq '{ dependencies: .dependencies }' "$LANGUAGE/ql/src/qlpack.yml" 2>/dev/null | yq eval '.dependencies' -)
        rm -f "$LANGUAGE/ql/src/qlpack.yml" "$LANGUAGE/ql/src/qlpack.lock"

        FIRST_VERSION="0.0.1"

        # # Create new qlpack.yml with modified content
        # cat <<EOF > "$LANGUAGE/ql/src/qlpack.yml"
        # name: microsoft/$LANGUAGE-queries
        # version: $FIRST_VERSION
        # extractor: $LANGUAGE
        # groups:
        #   - $LANGUAGE
        #   - queries
        # suites: microsoft-suites
        # defaultSuiteFile: microsoft-suites/sdl-required.qls
        # $DEPENDENCIES
        # EOF

        # echo "___________________________________________________________"
        # cat "$LANGUAGE/ql/src/qlpack.yml"
        # echo "___________________________________________________________"
        # gh codeql pack publish --dry-run "$LANGUAGE/ql/src"
      env:
        LANGUAGE: ${{ matrix.language }}
        GITHUB_TOKEN: ${{ secrets.PACKAGE_PUBLISH }}

