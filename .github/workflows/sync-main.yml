name: Sync Main

on:
  push:
    branches:
      - main
      - dilan/sync-main-bugs-6
    paths:
      - .github/workflows/sync-main.yml
  schedule:
    - cron: '55 * * * *'
  
jobs:

  sync-main:
  
    name: Sync-main
    runs-on: ubuntu-latest
    if: github.repository == 'microsoft/codeql'
    permissions:
      contents: write
      pull-requests: write
      
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Git config
        shell: bash
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
      - name: Add and fetch upstream
        run: |
          echo "::group::Fetch and set up remotes"
          git fetch
          git remote add upstream https://github.com/github/codeql.git
          git fetch upstream --tags --force
          echo "::endgroup::"

          echo "::group::Checkout and merge"
          set -x
          git fetch origin sync-main-pr || true
          git checkout -B sync-main-pr origin/main
          git merge codeql-cli/latest
          set +x
          echo "::endgroup::"
      - name: Push sync branch and ensure visibility
        run: |
          git push origin sync-main-pr --force

          BRANCH_NAME="sync-main-pr"
          COMMIT_SHA=$(git rev-parse HEAD)
          MAX_RETRIES=12
          SLEEP_SECONDS=5

          echo "üîÑ Waiting for commit $COMMIT_SHA to be visible on GitHub..."
          for (( i=1; i<=MAX_RETRIES; i++ )); do
            if gh api "repos/:owner/:repo/commits/$COMMIT_SHA" > /dev/null 2>&1; then
              echo "‚úÖ Commit is now visible on GitHub."
              break
            else
              echo "‚è≥ Attempt $i: Commit not visible yet ‚Äî sleeping ${SLEEP_SECONDS}s"
              sleep $SLEEP_SECONDS
            fi
          done
          if (( i > MAX_RETRIES )); then
            echo "‚ùå Commit $COMMIT_SHA never became visible after $((MAX_RETRIES * SLEEP_SECONDS)) seconds."
            exit 1
          fi
      
          echo "üîÑ Waiting for branch '$BRANCH_NAME' to be visible on GitHub..."
          for (( i=1; i<=MAX_RETRIES; i++ )); do
            if gh api "repos/:owner/:repo/branches/$BRANCH_NAME" > /dev/null 2>&1; then
              echo "‚úÖ Branch is now visible on GitHub."
              break
            else
              echo "‚è≥ Attempt $i: Branch not visible yet ‚Äî sleeping ${SLEEP_SECONDS}s"
              sleep $SLEEP_SECONDS
            fi
          done
          if (( i > MAX_RETRIES )); then
            echo "‚ùå Branch '$BRANCH_NAME' never became visible after $((MAX_RETRIES * SLEEP_SECONDS)) seconds."
            exit 1
          fi
        env:
          GH_TOKEN: ${{ secrets.WORKFLOW_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.WORKFLOW_TOKEN }}
      - name: Create or update PR
        run: |
          BRANCH_NAME="sync-main-pr"
          PR_URL=$(gh pr list --head "$BRANCH_NAME" --json url --jq '.[0].url')
          if [ -z "$PR_URL" ]; then
            echo "üì¶ Creating pull request..."
            gh pr create \
              --title "Automated sync from upstream" \
              --body "This PR syncs the latest changes from \`codeql-cli/latest\` into \`main\`." \
              --head "$BRANCH_NAME" \
              --base main
          else
            echo "‚úÖ PR already exists: $PR_URL"
          fi
        env:
          GH_TOKEN: ${{ secrets.WORKFLOW_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.WORKFLOW_TOKEN }}
