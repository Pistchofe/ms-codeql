extensions:
  - addsTo:
      pack: microsoft/powershell-all
      extensible: typeModel
    data:
    - ["system.data.metadata.edm.relationshipendmember", "system.data.common.commandtrees.dbrelationshipnavigationexpression", "Member[navigatefrom]"]
    - ["system.string", "system.data.common.commandtrees.dbsortclause", "Member[collation]"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.dbbinaryexpression", "Member[left]"]
    - ["system.collections.generic.ilist<system.data.common.commandtrees.dbexpression>", "system.data.common.commandtrees.defaultexpressionvisitor", "Method[visitexpressionlist].ReturnValue"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Member[greaterthanorequals]"]
    - ["system.string", "system.data.common.commandtrees.dbgroupexpressionbinding", "Member[groupvariablename]"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.dbjoinexpression", "Member[joincondition]"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.dbdeletecommandtree", "Member[predicate]"]
    - ["tresulttype", "system.data.common.commandtrees.dbexpression", "Method[Accept<tresulttype>].ReturnValue"]
    - ["tresulttype", "system.data.common.commandtrees.dbnullexpression", "Method[Accept<tresulttype>].ReturnValue"]
    - ["system.collections.generic.ienumerable<system.collections.generic.keyvaluepair<system.string,system.data.metadata.edm.typeusage>>", "system.data.common.commandtrees.dbcommandtree", "Member[parameters]"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Member[lambda]"]
    - ["system.data.common.commandtrees.dbgroupexpressionbinding", "system.data.common.commandtrees.defaultexpressionvisitor", "Method[visitgroupexpressionbinding].ReturnValue"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.dbgroupexpressionbinding", "Member[expression]"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Member[modulo]"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Member[case]"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Member[unaryminus]"]
    - ["system.data.metadata.edm.edmfunction", "system.data.common.commandtrees.dbfunctioncommandtree", "Member[edmfunction]"]
    - ["system.collections.generic.ilist<system.data.common.commandtrees.dbmodificationclause>", "system.data.common.commandtrees.dbinsertcommandtree", "Member[setclauses]"]
    - ["tresulttype", "system.data.common.commandtrees.dbcrossjoinexpression", "Method[Accept<tresulttype>].ReturnValue"]
    - ["system.string", "system.data.common.commandtrees.dbgroupexpressionbinding", "Member[variablename]"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.dbexpression!", "Method[fromsingle].ReturnValue"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.dbexpression!", "Method[fromdouble].ReturnValue"]
    - ["tresulttype", "system.data.common.commandtrees.dboftypeexpression", "Method[Accept<tresulttype>].ReturnValue"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Member[equals]"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Member[property]"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Member[groupby]"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Member[like]"]
    - ["system.data.common.commandtrees.dbexpressionbinding", "system.data.common.commandtrees.dbprojectexpression", "Member[input]"]
    - ["system.collections.generic.ilist<system.data.common.commandtrees.dbexpression>", "system.data.common.commandtrees.dbcaseexpression", "Member[then]"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.dbexpression!", "Method[fromboolean].ReturnValue"]
    - ["tresulttype", "system.data.common.commandtrees.dbisnullexpression", "Method[Accept<tresulttype>].ReturnValue"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Member[lessthan]"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpression", "Member[expressionkind]"]
    - ["tresulttype", "system.data.common.commandtrees.dbtreatexpression", "Method[Accept<tresulttype>].ReturnValue"]
    - ["tresulttype", "system.data.common.commandtrees.dbisemptyexpression", "Method[Accept<tresulttype>].ReturnValue"]
    - ["tresulttype", "system.data.common.commandtrees.dbcaseexpression", "Method[Accept<tresulttype>].ReturnValue"]
    - ["tresulttype", "system.data.common.commandtrees.dbdistinctexpression", "Method[Accept<tresulttype>].ReturnValue"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.dbrelationshipnavigationexpression", "Member[navigationsource]"]
    - ["system.collections.generic.ilist<system.data.common.commandtrees.dbexpression>", "system.data.common.commandtrees.dbfunctionexpression", "Member[arguments]"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.dbexpression!", "Method[fromdatetime].ReturnValue"]
    - ["tresulttype", "system.data.common.commandtrees.dbfilterexpression", "Method[Accept<tresulttype>].ReturnValue"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Member[deref]"]
    - ["tresulttype", "system.data.common.commandtrees.dbprojectexpression", "Method[Accept<tresulttype>].ReturnValue"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.dbsetclause", "Member[property]"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Member[relationshipnavigation]"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Member[plus]"]
    - ["tresulttype", "system.data.common.commandtrees.dborexpression", "Method[Accept<tresulttype>].ReturnValue"]
    - ["system.collections.generic.ilist<system.data.common.commandtrees.dbexpression>", "system.data.common.commandtrees.dbarithmeticexpression", "Member[arguments]"]
    - ["system.data.common.commandtrees.dbvariablereferenceexpression", "system.data.common.commandtrees.dbgroupexpressionbinding", "Member[groupvariable]"]
    - ["system.data.common.commandtrees.dbexpressionbinding", "system.data.common.commandtrees.dbapplyexpression", "Member[input]"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.dbexpression!", "Method[fromint16].ReturnValue"]
    - ["system.collections.generic.ilist<system.data.common.commandtrees.dbexpression>", "system.data.common.commandtrees.dbaggregate", "Member[arguments]"]
    - ["system.data.metadata.edm.typeusage", "system.data.common.commandtrees.dbisofexpression", "Member[oftype]"]
    - ["system.data.common.commandtrees.dbgroupexpressionbinding", "system.data.common.commandtrees.dbgroupbyexpression", "Member[input]"]
    - ["tresulttype", "system.data.common.commandtrees.dbnewinstanceexpression", "Method[Accept<tresulttype>].ReturnValue"]
    - ["tresulttype", "system.data.common.commandtrees.dbsortexpression", "Method[Accept<tresulttype>].ReturnValue"]
    - ["system.data.common.commandtrees.dblambda", "system.data.common.commandtrees.dblambdaExpression", "Member[lambda]"]
    - ["system.boolean", "system.data.common.commandtrees.dblimitexpression", "Member[withties]"]
    - ["tresulttype", "system.data.common.commandtrees.dbunionallexpression", "Method[Accept<tresulttype>].ReturnValue"]
    - ["tresulttype", "system.data.common.commandtrees.dblikeexpression", "Method[Accept<tresulttype>].ReturnValue"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Member[function]"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.dbunaryexpression", "Member[argument]"]
    - ["system.data.metadata.edm.typeusage", "system.data.common.commandtrees.dbexpressionbinding", "Member[variabletype]"]
    - ["system.data.common.commandtrees.dbvariablereferenceexpression", "system.data.common.commandtrees.dbgroupexpressionbinding", "Member[variable]"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Member[or]"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Member[sort]"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.dbexpression!", "Method[op_implicit].ReturnValue"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.dbexpression!", "Method[fromgeography].ReturnValue"]
    - ["system.data.metadata.edm.typeusage", "system.data.common.commandtrees.defaultexpressionvisitor", "Method[visittypeusage].ReturnValue"]
    - ["tresulttype", "system.data.common.commandtrees.dbparameterreferenceexpression", "Method[Accept<tresulttype>].ReturnValue"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Member[divide]"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.dbquerycommandtree", "Member[query]"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Member[project]"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.dblikeexpression", "Member[escape]"]
    - ["system.data.metadata.edm.edmfunction", "system.data.common.commandtrees.defaultexpressionvisitor", "Method[visitfunction].ReturnValue"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.dbexpression!", "Method[fromint64].ReturnValue"]
    - ["system.data.common.commandtrees.dbexpressionbinding", "system.data.common.commandtrees.dbjoinexpression", "Member[right]"]
    - ["system.data.common.commandtrees.dbexpressionbinding", "system.data.common.commandtrees.dbjoinexpression", "Member[left]"]
    - ["system.boolean", "system.data.common.commandtrees.dbexpression", "Method[equals].ReturnValue"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.dbexpression!", "Method[frombyte].ReturnValue"]
    - ["tresulttype", "system.data.common.commandtrees.dbapplyexpression", "Method[Accept<tresulttype>].ReturnValue"]
    - ["tresulttype", "system.data.common.commandtrees.dbexceptexpression", "Method[Accept<tresulttype>].ReturnValue"]
    - ["tresulttype", "system.data.common.commandtrees.dbrefkeyexpression", "Method[Accept<tresulttype>].ReturnValue"]
    - ["system.data.common.commandtrees.dbfunctionaggregate", "system.data.common.commandtrees.defaultexpressionvisitor", "Method[visitfunctionaggregate].ReturnValue"]
    - ["system.collections.generic.ilist<system.data.common.commandtrees.dbexpression>", "system.data.common.commandtrees.dbgroupbyexpression", "Member[keys]"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Member[skip]"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Member[oftypeonly]"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Member[intersect]"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Member[greaterthan]"]
    - ["system.data.common.commandtrees.dbexpressionbinding", "system.data.common.commandtrees.dbquantifierexpression", "Member[input]"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.dbquantifierexpression", "Member[predicate]"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Member[except]"]
    - ["tresulttype", "system.data.common.commandtrees.dbfunctionexpression", "Method[Accept<tresulttype>].ReturnValue"]
    - ["system.data.common.commandtrees.dbaggregate", "system.data.common.commandtrees.defaultexpressionvisitor", "Method[visitaggregate].ReturnValue"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Member[refkey]"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Member[newinstance]"]
    - ["system.collections.generic.ilist<system.data.common.commandtrees.dbsortclause>", "system.data.common.commandtrees.dbskipexpression", "Member[sortorder]"]
    - ["system.data.common.commandtrees.dbsortclause", "system.data.common.commandtrees.defaultexpressionvisitor", "Method[visitsortclause].ReturnValue"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.defaultexpressionvisitor", "Method[visit].ReturnValue"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Member[fullouterjoin]"]
    - ["system.data.common.commandtrees.dbexpressionbinding", "system.data.common.commandtrees.dbapplyexpression", "Member[apply]"]
    - ["system.data.metadata.edm.edmfunction", "system.data.common.commandtrees.dbfunctionaggregate", "Member[function]"]
    - ["tresulttype", "system.data.common.commandtrees.dbgroupbyexpression", "Method[Accept<tresulttype>].ReturnValue"]
    - ["tresulttype", "system.data.common.commandtrees.dbandexpression", "Method[Accept<tresulttype>].ReturnValue"]
    - ["system.data.common.commandtrees.dblambda", "system.data.common.commandtrees.dblambda!", "Method[create].ReturnValue"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.dbpropertyexpression", "Member[instance]"]
    - ["tresulttype", "system.data.common.commandtrees.dbcastexpression", "Method[Accept<tresulttype>].ReturnValue"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.dbupdatecommandtree", "Member[returning]"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Member[leftouterjoin]"]
    - ["tresulttype", "system.data.common.commandtrees.dbarithmeticexpression", "Method[Accept<tresulttype>].ReturnValue"]
    - ["system.data.metadata.edm.edmmember", "system.data.common.commandtrees.dbpropertyexpression", "Member[property]"]
    - ["tresulttype", "system.data.common.commandtrees.dbconstantexpression", "Method[Accept<tresulttype>].ReturnValue"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.dblikeexpression", "Member[pattern]"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Member[limit]"]
    - ["tresulttype", "system.data.common.commandtrees.dbelementexpression", "Method[Accept<tresulttype>].ReturnValue"]
    - ["system.data.metadata.edm.relationshiptype", "system.data.common.commandtrees.dbrelationshipnavigationexpression", "Member[relationship]"]
    - ["system.collections.generic.ilist<system.data.common.commandtrees.dbvariablereferenceexpression>", "system.data.common.commandtrees.dblambda", "Member[variables]"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.dbexpression!", "Method[frombinary].ReturnValue"]
    - ["system.collections.generic.ilist<system.data.common.commandtrees.dbexpression>", "system.data.common.commandtrees.dbnewinstanceexpression", "Member[arguments]"]
    - ["system.data.metadata.edm.typeusage", "system.data.common.commandtrees.dbaggregate", "Member[resulttype]"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.dbexpressionBinding", "Member[expression]"]
    - ["system.data.metadata.edm.typeusage", "system.data.common.commandtrees.dbexpression", "Member[resulttype]"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Member[constant]"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Member[variablereference]"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.dblimitexpression", "Member[argument]"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.dbbinaryexpression", "Member[right]"]
    - ["system.collections.generic.ilist<system.data.common.commandtrees.dbexpression>", "system.data.common.commandtrees.dblambdaexpression", "Member[arguments]"]
    - ["tresulttype", "system.data.common.commandtrees.dbisofexpression", "Method[Accept<tresulttype>].ReturnValue"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.dbfilterexpression", "Member[predicate]"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.dbsetclause", "Member[value]"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.dbexpression!", "Method[fromgeometry].ReturnValue"]
    - ["system.collections.generic.ilist<system.data.common.commandtrees.dbsortclause>", "system.data.common.commandtrees.dbsortexpression", "Member[sortorder]"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Member[any]"]
    - ["system.int32", "system.data.common.commandtrees.dbexpression", "Method[gethashcode].ReturnValue"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.dbprojectexpression", "Member[projection]"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Member[minus]"]
    - ["system.collections.generic.ilist<system.data.common.commandtrees.dbsortclause>", "system.data.common.commandtrees.defaultexpressionvisitor", "Method[visitsortorder].ReturnValue"]
    - ["system.boolean", "system.data.common.commandtrees.dbfunctionaggregate", "Member[distinct]"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Member[lessthanorequals]"]
    - ["tresulttype", "system.data.common.commandtrees.dbquantifierexpression", "Method[Accept<tresulttype>].ReturnValue"]
    - ["system.data.common.commandtrees.dblambda", "system.data.common.commandtrees.defaultexpressionvisitor", "Method[visitlambda].ReturnValue"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Member[oftype]"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.dblimitexpression", "Member[limit]"]
    - ["system.object", "system.data.common.commandtrees.dbconstantexpression", "Member[value]"]
    - ["tresulttype", "system.data.common.commandtrees.dbderefexpression", "Method[Accept<tresulttype>].ReturnValue"]
    - ["tresulttype", "system.data.common.commandtrees.dbintersectexpression", "Method[Accept<tresulttype>].ReturnValue"]
    - ["tresulttype", "system.data.common.commandtrees.dbscanexpression", "Method[Accept<tresulttype>].ReturnValue"]
    - ["tresulttype", "system.data.common.commandtrees.dbnotexpression", "Method[Accept<tresulttype>].ReturnValue"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.dbinsertcommandtree", "Member[returning]"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Member[null]"]
    - ["tresulttype", "system.data.common.commandtrees.dbskipexpression", "Method[Accept<tresulttype>].ReturnValue"]
    - ["system.collections.generic.ilist<system.data.common.commandtrees.dbexpression>", "system.data.common.commandtrees.dbcaseexpression", "Member[when]"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Member[filter]"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Member[treat]"]
    - ["tresulttype", "system.data.common.commandtrees.dbpropertyexpression", "Method[Accept<tresulttype>].ReturnValue"]
    - ["tresulttype", "system.data.common.commandtrees.dblimitexpression", "Method[Accept<tresulttype>].ReturnValue"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.dbexpression!", "Method[fromdatetimeoffset].ReturnValue"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.dbupdatecommandtree", "Member[predicate]"]
    - ["system.data.common.commandtrees.dbexpressionbinding", "system.data.common.commandtrees.dbmodificationcommandtree", "Member[target]"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Member[outerapply]"]
    - ["system.data.metadata.edm.edmfunction", "system.data.common.commandtrees.dbfunctionexpression", "Member[function]"]
    - ["system.data.common.commandtrees.dbexpressionbinding", "system.data.common.commandtrees.defaultexpressionvisitor", "Method[visitexpressionbinding].ReturnValue"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Member[cast]"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Member[isnull]"]
    - ["system.data.metadata.edm.edmtype", "system.data.common.commandtrees.defaultexpressionvisitor", "Method[visittype].ReturnValue"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Member[parameterreference]"]
    - ["system.data.common.commandtrees.dbexpressionbinding", "system.data.common.commandtrees.dbfilterexpression", "Member[input]"]
    - ["system.data.metadata.edm.entitysetbase", "system.data.common.commandtrees.defaultexpressionvisitor", "Method[visitentityset].ReturnValue"]
    - ["system.string", "system.data.common.commandtrees.dbexpressionbinding", "Member[variablename]"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.dblikeexpression", "Member[argument]"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.dbcaseexpression", "Member[else]"]
    - ["tresulttype", "system.data.common.commandtrees.dbrelationshipnavigationexpression", "Method[Accept<tresulttype>].ReturnValue"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Member[multiply]"]
    - ["system.data.metadata.edm.typeusage", "system.data.common.commandtrees.dbgroupexpressionbinding", "Member[variabletype]"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Member[distinct]"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.defaultexpressionvisitor", "Method[visitexpression].ReturnValue"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Member[and]"]
    - ["system.data.common.commandtrees.dbvariablereferenceexpression", "system.data.common.commandtrees.dbexpressionbinding", "Member[variable]"]
    - ["system.data.metadata.edm.relationshipendmember", "system.data.common.commandtrees.dbrelationshipnavigationexpression", "Member[navigateto]"]
    - ["tresulttype", "system.data.common.commandtrees.dbrefexpression", "Method[Accept<tresulttype>].ReturnValue"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Member[innerjoin]"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Member[isof]"]
    - ["system.data.metadata.edm.typeusage", "system.data.common.commandtrees.dboftypeexpression", "Member[oftype]"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.dbsortclause", "Member[expression]"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Member[isofonly]"]
    - ["system.collections.generic.keyvaluepair<system.string,system.data.common.commandtrees.dbexpression>", "system.data.common.commandtrees.dbpropertyexpression!", "Method[op_implicit].ReturnValue"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Member[isempty]"]
    - ["tresulttype", "system.data.common.commandtrees.dbjoinexpression", "Method[Accept<tresulttype>].ReturnValue"]
    - ["system.data.common.commandtrees.dbgroupaggregate", "system.data.common.commandtrees.dbgroupexpressionbinding", "Member[groupaggregate]"]
    - ["tresulttype", "system.data.common.commandtrees.dblambdaexpression", "Method[Accept<tresulttype>].ReturnValue"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Member[element]"]
    - ["system.string", "system.data.common.commandtrees.dbvariablereferenceexpression", "Member[variablename]"]
    - ["system.collections.generic.keyvaluepair<system.string,system.data.common.commandtrees.dbexpression>", "system.data.common.commandtrees.dbpropertyexpression", "Method[tokeyvaluepair].ReturnValue"]
    - ["system.data.metadata.edm.entityset", "system.data.common.commandtrees.dbrefexpression", "Member[entityset]"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Member[all]"]
    - ["system.data.metadata.edm.entitysetbase", "system.data.common.commandtrees.dbscanexpression", "Member[target]"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.dbexpression!", "Method[fromstring].ReturnValue"]
    - ["tresulttype", "system.data.common.commandtrees.dbcomparisonexpression", "Method[Accept<tresulttype>].ReturnValue"]
    - ["system.collections.generic.ilist<system.data.common.commandtrees.dbexpressionbinding>", "system.data.common.commandtrees.defaultexpressionvisitor", "Method[visitexpressionbindinglist].ReturnValue"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Member[ref]"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.dbexpression!", "Method[fromdecimal].ReturnValue"]
    - ["system.data.metadata.edm.typeusage", "system.data.common.commandtrees.dbgroupexpressionbinding", "Member[groupvariabletype]"]
    - ["tresulttype", "system.data.common.commandtrees.dbvariablereferenceexpression", "Method[Accept<tresulttype>].ReturnValue"]
    - ["system.boolean", "system.data.common.commandtrees.dbsortclause", "Member[ascending]"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Member[unionall]"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Member[notequals]"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.dbskipexpression", "Member[count]"]
    - ["system.data.metadata.edm.typeusage", "system.data.common.commandtrees.dbfunctioncommandtree", "Member[resulttype]"]
    - ["system.string", "system.data.common.commandtrees.dbparameterreferenceexpression", "Member[parametername]"]
    - ["system.data.common.commandtrees.dbexpressionbinding", "system.data.common.commandtrees.dbskipexpression", "Member[input]"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Member[crossapply]"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Member[scan]"]
    - ["system.collections.generic.ilist<system.data.common.commandtrees.dbexpressionbinding>", "system.data.common.commandtrees.dbcrossjoinexpression", "Member[inputs]"]
    - ["system.data.common.commandtrees.dbexpressionbinding", "system.data.common.commandtrees.dbsortexpression", "Member[input]"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.dblambda", "Member[body]"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.dbexpression!", "Method[fromint32].ReturnValue"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Member[crossjoin]"]
    - ["system.data.common.commandtrees.dbgroupaggregate", "system.data.common.commandtrees.defaultexpressionvisitor", "Method[visitgroupaggregate].ReturnValue"]
    - ["tresulttype", "system.data.common.commandtrees.dbentityrefexpression", "Method[Accept<tresulttype>].ReturnValue"]
    - ["system.collections.generic.ilist<system.data.common.commandtrees.dbmodificationclause>", "system.data.common.commandtrees.dbupdatecommandtree", "Member[setclauses]"]
    - ["system.collections.generic.ilist<system.data.common.commandtrees.dbaggregate>", "system.data.common.commandtrees.dbgroupbyexpression", "Member[aggregates]"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Member[not]"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Member[entityref]"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.dbexpression!", "Method[fromguid].ReturnValue"]
