extensions:
  - addsTo:
      pack: microsoft-sdl/powershell-all
      extensible: typeModel
    data:
    - ["system.data.metadata.edm.relationshipendmember", "system.data.common.commandtrees.dbrelationshipnavigationexpression", "Property[navigatefrom]"]
    - ["system.string", "system.data.common.commandtrees.dbsortclause", "Property[collation]"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.dbbinaryexpression", "Property[left]"]
    - ["system.collections.generic.ilist<system.data.common.commandtrees.dbexpression>", "system.data.common.commandtrees.defaultexpressionvisitor", "Method[visitexpressionlist].ReturnValue"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Field[greaterthanorequals]"]
    - ["system.string", "system.data.common.commandtrees.dbgroupexpressionbinding", "Property[groupvariablename]"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.dbjoinexpression", "Property[joincondition]"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.dbdeletecommandtree", "Property[predicate]"]
    - ["tresulttype", "system.data.common.commandtrees.dbexpression", "Method[Accept<tresulttype>].ReturnValue"]
    - ["tresulttype", "system.data.common.commandtrees.dbnullexpression", "Method[Accept<tresulttype>].ReturnValue"]
    - ["system.collections.generic.ienumerable<system.collections.generic.keyvaluepair<system.string,system.data.metadata.edm.typeusage>>", "system.data.common.commandtrees.dbcommandtree", "Property[parameters]"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Field[lambda]"]
    - ["system.data.common.commandtrees.dbgroupexpressionbinding", "system.data.common.commandtrees.defaultexpressionvisitor", "Method[visitgroupexpressionbinding].ReturnValue"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.dbgroupexpressionbinding", "Property[expression]"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Field[modulo]"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Field[case]"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Field[unaryminus]"]
    - ["system.data.metadata.edm.edmfunction", "system.data.common.commandtrees.dbfunctioncommandtree", "Property[edmfunction]"]
    - ["system.collections.generic.ilist<system.data.common.commandtrees.dbmodificationclause>", "system.data.common.commandtrees.dbinsertcommandtree", "Property[setclauses]"]
    - ["tresulttype", "system.data.common.commandtrees.dbcrossjoinexpression", "Method[Accept<tresulttype>].ReturnValue"]
    - ["system.string", "system.data.common.commandtrees.dbgroupexpressionbinding", "Property[variablename]"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.dbexpression!", "Method[fromsingle].ReturnValue"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.dbexpression!", "Method[fromdouble].ReturnValue"]
    - ["tresulttype", "system.data.common.commandtrees.dboftypeexpression", "Method[Accept<tresulttype>].ReturnValue"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Field[equals]"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Field[property]"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Field[groupby]"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Field[like]"]
    - ["system.data.common.commandtrees.dbexpressionbinding", "system.data.common.commandtrees.dbprojectexpression", "Property[input]"]
    - ["system.collections.generic.ilist<system.data.common.commandtrees.dbexpression>", "system.data.common.commandtrees.dbcaseexpression", "Property[then]"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.dbexpression!", "Method[fromboolean].ReturnValue"]
    - ["tresulttype", "system.data.common.commandtrees.dbisnullexpression", "Method[Accept<tresulttype>].ReturnValue"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Field[lessthan]"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpression", "Property[expressionkind]"]
    - ["tresulttype", "system.data.common.commandtrees.dbtreatexpression", "Method[Accept<tresulttype>].ReturnValue"]
    - ["tresulttype", "system.data.common.commandtrees.dbisemptyexpression", "Method[Accept<tresulttype>].ReturnValue"]
    - ["tresulttype", "system.data.common.commandtrees.dbcaseexpression", "Method[Accept<tresulttype>].ReturnValue"]
    - ["tresulttype", "system.data.common.commandtrees.dbdistinctexpression", "Method[Accept<tresulttype>].ReturnValue"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.dbrelationshipnavigationexpression", "Property[navigationsource]"]
    - ["system.collections.generic.ilist<system.data.common.commandtrees.dbexpression>", "system.data.common.commandtrees.dbfunctionexpression", "Property[arguments]"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.dbexpression!", "Method[fromdatetime].ReturnValue"]
    - ["tresulttype", "system.data.common.commandtrees.dbfilterexpression", "Method[Accept<tresulttype>].ReturnValue"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Field[deref]"]
    - ["tresulttype", "system.data.common.commandtrees.dbprojectexpression", "Method[Accept<tresulttype>].ReturnValue"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.dbsetclause", "property[property]"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Field[relationshipnavigation]"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Field[plus]"]
    - ["tresulttype", "system.data.common.commandtrees.dborexpression", "Method[Accept<tresulttype>].ReturnValue"]
    - ["system.collections.generic.ilist<system.data.common.commandtrees.dbexpression>", "system.data.common.commandtrees.dbarithmeticexpression", "Property[arguments]"]
    - ["system.data.common.commandtrees.dbvariablereferenceexpression", "system.data.common.commandtrees.dbgroupexpressionbinding", "Property[groupvariable]"]
    - ["system.data.common.commandtrees.dbexpressionbinding", "system.data.common.commandtrees.dbapplyexpression", "Property[input]"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.dbexpression!", "Method[fromint16].ReturnValue"]
    - ["system.collections.generic.ilist<system.data.common.commandtrees.dbexpression>", "system.data.common.commandtrees.dbaggregate", "Property[arguments]"]
    - ["system.data.metadata.edm.typeusage", "system.data.common.commandtrees.dbisofexpression", "Property[oftype]"]
    - ["system.data.common.commandtrees.dbgroupexpressionbinding", "system.data.common.commandtrees.dbgroupbyexpression", "Property[input]"]
    - ["tresulttype", "system.data.common.commandtrees.dbnewinstanceexpression", "Method[Accept<tresulttype>].ReturnValue"]
    - ["tresulttype", "system.data.common.commandtrees.dbsortexpression", "Method[Accept<tresulttype>].ReturnValue"]
    - ["system.data.common.commandtrees.dblambda", "system.data.common.commandtrees.dblambdaExpression", "Property[lambda]"]
    - ["system.boolean", "system.data.common.commandtrees.dblimitexpression", "Property[withties]"]
    - ["tresulttype", "system.data.common.commandtrees.dbunionallexpression", "Method[Accept<tresulttype>].ReturnValue"]
    - ["tresulttype", "system.data.common.commandtrees.dblikeexpression", "Method[Accept<tresulttype>].ReturnValue"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Field[function]"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.dbunaryexpression", "Property[argument]"]
    - ["system.data.metadata.edm.typeusage", "system.data.common.commandtrees.dbexpressionbinding", "Property[variabletype]"]
    - ["system.data.common.commandtrees.dbvariablereferenceexpression", "system.data.common.commandtrees.dbgroupexpressionbinding", "Property[variable]"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Field[or]"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Field[sort]"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.dbexpression!", "Method[op_implicit].ReturnValue"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.dbexpression!", "Method[fromgeography].ReturnValue"]
    - ["system.data.metadata.edm.typeusage", "system.data.common.commandtrees.defaultexpressionvisitor", "Method[visittypeusage].ReturnValue"]
    - ["tresulttype", "system.data.common.commandtrees.dbparameterreferenceexpression", "Method[Accept<tresulttype>].ReturnValue"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Field[divide]"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.dbquerycommandtree", "Property[query]"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Field[project]"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.dblikeexpression", "Property[escape]"]
    - ["system.data.metadata.edm.edmfunction", "system.data.common.commandtrees.defaultexpressionvisitor", "Method[visitfunction].ReturnValue"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.dbexpression!", "Method[fromint64].ReturnValue"]
    - ["system.data.common.commandtrees.dbexpressionbinding", "system.data.common.commandtrees.dbjoinexpression", "Property[right]"]
    - ["system.data.common.commandtrees.dbexpressionbinding", "system.data.common.commandtrees.dbjoinexpression", "Property[left]"]
    - ["system.boolean", "system.data.common.commandtrees.dbexpression", "Method[equals].ReturnValue"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.dbexpression!", "Method[frombyte].ReturnValue"]
    - ["tresulttype", "system.data.common.commandtrees.dbapplyexpression", "Method[Accept<tresulttype>].ReturnValue"]
    - ["tresulttype", "system.data.common.commandtrees.dbexceptexpression", "Method[Accept<tresulttype>].ReturnValue"]
    - ["tresulttype", "system.data.common.commandtrees.dbrefkeyexpression", "Method[Accept<tresulttype>].ReturnValue"]
    - ["system.data.common.commandtrees.dbfunctionaggregate", "system.data.common.commandtrees.defaultexpressionvisitor", "Method[visitfunctionaggregate].ReturnValue"]
    - ["system.collections.generic.ilist<system.data.common.commandtrees.dbexpression>", "system.data.common.commandtrees.dbgroupbyexpression", "Property[keys]"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Field[skip]"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Field[oftypeonly]"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Field[intersect]"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Field[greaterthan]"]
    - ["system.data.common.commandtrees.dbexpressionbinding", "system.data.common.commandtrees.dbquantifierexpression", "Property[input]"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.dbquantifierexpression", "Property[predicate]"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Field[except]"]
    - ["tresulttype", "system.data.common.commandtrees.dbfunctionexpression", "Method[Accept<tresulttype>].ReturnValue"]
    - ["system.data.common.commandtrees.dbaggregate", "system.data.common.commandtrees.defaultexpressionvisitor", "Method[visitaggregate].ReturnValue"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Field[refkey]"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Field[newinstance]"]
    - ["system.collections.generic.ilist<system.data.common.commandtrees.dbsortclause>", "system.data.common.commandtrees.dbskipexpression", "Property[sortorder]"]
    - ["system.data.common.commandtrees.dbsortclause", "system.data.common.commandtrees.defaultexpressionvisitor", "Method[visitsortclause].ReturnValue"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.defaultexpressionvisitor", "Method[visit].ReturnValue"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Field[fullouterjoin]"]
    - ["system.data.common.commandtrees.dbexpressionbinding", "system.data.common.commandtrees.dbapplyexpression", "Property[apply]"]
    - ["system.data.metadata.edm.edmfunction", "system.data.common.commandtrees.dbfunctionaggregate", "Property[function]"]
    - ["tresulttype", "system.data.common.commandtrees.dbgroupbyexpression", "Method[Accept<tresulttype>].ReturnValue"]
    - ["tresulttype", "system.data.common.commandtrees.dbandexpression", "Method[Accept<tresulttype>].ReturnValue"]
    - ["system.data.common.commandtrees.dblambda", "system.data.common.commandtrees.dblambda!", "Method[create].ReturnValue"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.dbpropertyexpression", "Property[instance]"]
    - ["tresulttype", "system.data.common.commandtrees.dbcastexpression", "Method[Accept<tresulttype>].ReturnValue"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.dbupdatecommandtree", "Property[returning]"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Field[leftouterjoin]"]
    - ["tresulttype", "system.data.common.commandtrees.dbarithmeticexpression", "Method[Accept<tresulttype>].ReturnValue"]
    - ["system.data.metadata.edm.edmmember", "system.data.common.commandtrees.dbpropertyexpression", "property[property]"]
    - ["tresulttype", "system.data.common.commandtrees.dbconstantexpression", "Method[Accept<tresulttype>].ReturnValue"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.dblikeexpression", "Property[pattern]"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Field[limit]"]
    - ["tresulttype", "system.data.common.commandtrees.dbelementexpression", "Method[Accept<tresulttype>].ReturnValue"]
    - ["system.data.metadata.edm.relationshiptype", "system.data.common.commandtrees.dbrelationshipnavigationexpression", "Property[relationship]"]
    - ["system.collections.generic.ilist<system.data.common.commandtrees.dbvariablereferenceexpression>", "system.data.common.commandtrees.dblambda", "Property[variables]"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.dbexpression!", "Method[frombinary].ReturnValue"]
    - ["system.collections.generic.ilist<system.data.common.commandtrees.dbexpression>", "system.data.common.commandtrees.dbnewinstanceexpression", "Property[arguments]"]
    - ["system.data.metadata.edm.typeusage", "system.data.common.commandtrees.dbaggregate", "Property[resulttype]"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.dbexpressionBinding", "Property[expression]"]
    - ["system.data.metadata.edm.typeusage", "system.data.common.commandtrees.dbexpression", "Property[resulttype]"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Field[constant]"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Field[variablereference]"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.dblimitexpression", "Property[argument]"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.dbbinaryexpression", "Property[right]"]
    - ["system.collections.generic.ilist<system.data.common.commandtrees.dbexpression>", "system.data.common.commandtrees.dblambdaexpression", "Property[arguments]"]
    - ["tresulttype", "system.data.common.commandtrees.dbisofexpression", "Method[Accept<tresulttype>].ReturnValue"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.dbfilterexpression", "Property[predicate]"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.dbsetclause", "Property[value]"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.dbexpression!", "Method[fromgeometry].ReturnValue"]
    - ["system.collections.generic.ilist<system.data.common.commandtrees.dbsortclause>", "system.data.common.commandtrees.dbsortexpression", "Property[sortorder]"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Field[any]"]
    - ["system.int32", "system.data.common.commandtrees.dbexpression", "Method[gethashcode].ReturnValue"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.dbprojectexpression", "Property[projection]"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Field[minus]"]
    - ["system.collections.generic.ilist<system.data.common.commandtrees.dbsortclause>", "system.data.common.commandtrees.defaultexpressionvisitor", "Method[visitsortorder].ReturnValue"]
    - ["system.boolean", "system.data.common.commandtrees.dbfunctionaggregate", "Property[distinct]"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Field[lessthanorequals]"]
    - ["tresulttype", "system.data.common.commandtrees.dbquantifierexpression", "Method[Accept<tresulttype>].ReturnValue"]
    - ["system.data.common.commandtrees.dblambda", "system.data.common.commandtrees.defaultexpressionvisitor", "Method[visitlambda].ReturnValue"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Field[oftype]"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.dblimitexpression", "Property[limit]"]
    - ["system.object", "system.data.common.commandtrees.dbconstantexpression", "Property[value]"]
    - ["tresulttype", "system.data.common.commandtrees.dbderefexpression", "Method[Accept<tresulttype>].ReturnValue"]
    - ["tresulttype", "system.data.common.commandtrees.dbintersectexpression", "Method[Accept<tresulttype>].ReturnValue"]
    - ["tresulttype", "system.data.common.commandtrees.dbscanexpression", "Method[Accept<tresulttype>].ReturnValue"]
    - ["tresulttype", "system.data.common.commandtrees.dbnotexpression", "Method[Accept<tresulttype>].ReturnValue"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.dbinsertcommandtree", "Property[returning]"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Field[null]"]
    - ["tresulttype", "system.data.common.commandtrees.dbskipexpression", "Method[Accept<tresulttype>].ReturnValue"]
    - ["system.collections.generic.ilist<system.data.common.commandtrees.dbexpression>", "system.data.common.commandtrees.dbcaseexpression", "Property[when]"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Field[filter]"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Field[treat]"]
    - ["tresulttype", "system.data.common.commandtrees.dbpropertyexpression", "Method[Accept<tresulttype>].ReturnValue"]
    - ["tresulttype", "system.data.common.commandtrees.dblimitexpression", "Method[Accept<tresulttype>].ReturnValue"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.dbexpression!", "Method[fromdatetimeoffset].ReturnValue"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.dbupdatecommandtree", "Property[predicate]"]
    - ["system.data.common.commandtrees.dbexpressionbinding", "system.data.common.commandtrees.dbmodificationcommandtree", "Property[target]"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Field[outerapply]"]
    - ["system.data.metadata.edm.edmfunction", "system.data.common.commandtrees.dbfunctionexpression", "Property[function]"]
    - ["system.data.common.commandtrees.dbexpressionbinding", "system.data.common.commandtrees.defaultexpressionvisitor", "Method[visitexpressionbinding].ReturnValue"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Field[cast]"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Field[isnull]"]
    - ["system.data.metadata.edm.edmtype", "system.data.common.commandtrees.defaultexpressionvisitor", "Method[visittype].ReturnValue"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Field[parameterreference]"]
    - ["system.data.common.commandtrees.dbexpressionbinding", "system.data.common.commandtrees.dbfilterexpression", "Property[input]"]
    - ["system.data.metadata.edm.entitysetbase", "system.data.common.commandtrees.defaultexpressionvisitor", "Method[visitentityset].ReturnValue"]
    - ["system.string", "system.data.common.commandtrees.dbexpressionbinding", "Property[variablename]"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.dblikeexpression", "Property[argument]"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.dbcaseexpression", "Property[else]"]
    - ["tresulttype", "system.data.common.commandtrees.dbrelationshipnavigationexpression", "Method[Accept<tresulttype>].ReturnValue"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Field[multiply]"]
    - ["system.data.metadata.edm.typeusage", "system.data.common.commandtrees.dbgroupexpressionbinding", "Property[variabletype]"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Field[distinct]"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.defaultexpressionvisitor", "Method[visitexpression].ReturnValue"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Field[and]"]
    - ["system.data.common.commandtrees.dbvariablereferenceexpression", "system.data.common.commandtrees.dbexpressionbinding", "Property[variable]"]
    - ["system.data.metadata.edm.relationshipendmember", "system.data.common.commandtrees.dbrelationshipnavigationexpression", "Property[navigateto]"]
    - ["tresulttype", "system.data.common.commandtrees.dbrefexpression", "Method[Accept<tresulttype>].ReturnValue"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Field[innerjoin]"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Field[isof]"]
    - ["system.data.metadata.edm.typeusage", "system.data.common.commandtrees.dboftypeexpression", "Property[oftype]"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.dbsortclause", "Property[expression]"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Field[isofonly]"]
    - ["system.collections.generic.keyvaluepair<system.string,system.data.common.commandtrees.dbexpression>", "system.data.common.commandtrees.dbpropertyexpression!", "Method[op_implicit].ReturnValue"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Field[isempty]"]
    - ["tresulttype", "system.data.common.commandtrees.dbjoinexpression", "Method[Accept<tresulttype>].ReturnValue"]
    - ["system.data.common.commandtrees.dbgroupaggregate", "system.data.common.commandtrees.dbgroupexpressionbinding", "Property[groupaggregate]"]
    - ["tresulttype", "system.data.common.commandtrees.dblambdaexpression", "Method[Accept<tresulttype>].ReturnValue"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Field[element]"]
    - ["system.string", "system.data.common.commandtrees.dbvariablereferenceexpression", "Property[variablename]"]
    - ["system.collections.generic.keyvaluepair<system.string,system.data.common.commandtrees.dbexpression>", "system.data.common.commandtrees.dbpropertyexpression", "Method[tokeyvaluepair].ReturnValue"]
    - ["system.data.metadata.edm.entityset", "system.data.common.commandtrees.dbrefexpression", "Property[entityset]"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Field[all]"]
    - ["system.data.metadata.edm.entitysetbase", "system.data.common.commandtrees.dbscanexpression", "Property[target]"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.dbexpression!", "Method[fromstring].ReturnValue"]
    - ["tresulttype", "system.data.common.commandtrees.dbcomparisonexpression", "Method[Accept<tresulttype>].ReturnValue"]
    - ["system.collections.generic.ilist<system.data.common.commandtrees.dbexpressionbinding>", "system.data.common.commandtrees.defaultexpressionvisitor", "Method[visitexpressionbindinglist].ReturnValue"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Field[ref]"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.dbexpression!", "Method[fromdecimal].ReturnValue"]
    - ["system.data.metadata.edm.typeusage", "system.data.common.commandtrees.dbgroupexpressionbinding", "Property[groupvariabletype]"]
    - ["tresulttype", "system.data.common.commandtrees.dbvariablereferenceexpression", "Method[Accept<tresulttype>].ReturnValue"]
    - ["system.boolean", "system.data.common.commandtrees.dbsortclause", "Property[ascending]"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Field[unionall]"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Field[notequals]"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.dbskipexpression", "Property[count]"]
    - ["system.data.metadata.edm.typeusage", "system.data.common.commandtrees.dbfunctioncommandtree", "Property[resulttype]"]
    - ["system.string", "system.data.common.commandtrees.dbparameterreferenceexpression", "Property[parametername]"]
    - ["system.data.common.commandtrees.dbexpressionbinding", "system.data.common.commandtrees.dbskipexpression", "Property[input]"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Field[crossapply]"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Field[scan]"]
    - ["system.collections.generic.ilist<system.data.common.commandtrees.dbexpressionbinding>", "system.data.common.commandtrees.dbcrossjoinexpression", "Property[inputs]"]
    - ["system.data.common.commandtrees.dbexpressionbinding", "system.data.common.commandtrees.dbsortexpression", "Property[input]"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.dblambda", "Property[body]"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.dbexpression!", "Method[fromint32].ReturnValue"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Field[crossjoin]"]
    - ["system.data.common.commandtrees.dbgroupaggregate", "system.data.common.commandtrees.defaultexpressionvisitor", "Method[visitgroupaggregate].ReturnValue"]
    - ["tresulttype", "system.data.common.commandtrees.dbentityrefexpression", "Method[Accept<tresulttype>].ReturnValue"]
    - ["system.collections.generic.ilist<system.data.common.commandtrees.dbmodificationclause>", "system.data.common.commandtrees.dbupdatecommandtree", "Property[setclauses]"]
    - ["system.collections.generic.ilist<system.data.common.commandtrees.dbaggregate>", "system.data.common.commandtrees.dbgroupbyexpression", "Property[aggregates]"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Field[not]"]
    - ["system.data.common.commandtrees.dbexpressionkind", "system.data.common.commandtrees.dbexpressionkind!", "Field[entityref]"]
    - ["system.data.common.commandtrees.dbexpression", "system.data.common.commandtrees.dbexpression!", "Method[fromguid].ReturnValue"]
