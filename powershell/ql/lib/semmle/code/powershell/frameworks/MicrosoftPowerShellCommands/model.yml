extensions:
  - addsTo:
      pack: microsoft-sdl/powershell-all
      extensible: typeModel
    data:
    - ["system.string", "microsoft.powershell.commands.enhancedkeyusagerepresentation", "Method[tostring].ReturnValue"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.setitemcommand", "Property[force]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.pssessionconfigurationcommandbase", "Property[showsecuritydescriptorui]"]
    - ["microsoft.powershell.commands.osproductsuite", "microsoft.powershell.commands.osproductsuite!", "Field[storageserveredition]"]
    - ["system.string", "microsoft.powershell.commands.teeobjectcommand", "Property[literalpath]"]
    - ["microsoft.powershell.commands.cpuavailability", "microsoft.powershell.commands.cpuavailability!", "Field[offline]"]
    - ["system.string[]", "microsoft.powershell.commands.getmodulecommand", "Property[name]"]
    - ["system.string", "microsoft.powershell.commands.psrunspacecmdlet!", "Field[vmidinstanceidparameterset]"]
    - ["system.version", "microsoft.powershell.commands.newmodulemanifestcommand", "Property[moduleversion]"]
    - ["system.guid", "microsoft.powershell.commands.enterpssessioncommand", "Property[vmid]"]
    - ["system.nullable<system.int32>", "microsoft.powershell.commands.computerinfo", "Property[windowsubr]"]
    - ["system.string[]", "microsoft.powershell.commands.connectpssessioncommand", "Property[vmname]"]
    - ["system.management.automation.runspaces.psthreadoptions", "microsoft.powershell.commands.pssessionconfigurationcommandbase", "Property[threadoptions]"]
    - ["system.string", "microsoft.powershell.commands.setvariablecommand", "Property[description]"]
    - ["system.string[]", "microsoft.powershell.commands.contentcommandbase", "Property[path]"]
    - ["system.string", "microsoft.powershell.commands.memberdefinition", "Property[typename]"]
    - ["system.nullable<microsoft.powershell.commands.powerplatformrole>", "microsoft.powershell.commands.computerinfo", "Property[powerplatformrole]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.newpssessionoptioncommand", "Property[nomachineprofile]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.addcomputercommand", "Property[unsecure]"]
    - ["microsoft.powershell.commands.joinoptions", "microsoft.powershell.commands.addcomputercommand", "Property[options]"]
    - ["system.collections.generic.hashset<system.string>", "microsoft.powershell.commands.modulecmdletbase!", "Field[builtinmodules]"]
    - ["system.int16", "microsoft.powershell.commands.restartcomputercommand", "Property[delay]"]
    - ["system.management.automation.containerparentjob", "microsoft.powershell.commands.importworkflowcommand!", "Method[startworkflowapplication].ReturnValue"]
    - ["system.management.automation.remoting.proxyaccesstype", "microsoft.powershell.commands.newpssessionoptioncommand", "Property[proxyaccesstype]"]
    - ["system.nullable<system.int32>", "microsoft.powershell.commands.textmeasureinfo", "Property[characters]"]
    - ["system.object", "microsoft.powershell.commands.sessionstateproviderbase", "Method[clearcontentdynamicparameters].ReturnValue"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.foreachobjectcommand", "Property[asjob]"]
    - ["system.string[]", "microsoft.powershell.commands.splitpathcommand", "Property[literalpath]"]
    - ["system.object[]", "microsoft.powershell.commands.newpsrolecapabilityfilecommand", "Property[visiblefunctions]"]
    - ["microsoft.powershell.commands.wakeuptype", "microsoft.powershell.commands.wakeuptype!", "Field[pcipme]"]
    - ["system.management.automation.commandtypes", "microsoft.powershell.commands.implicitremotingcommandbase", "Property[commandtype]"]
    - ["system.string[]", "microsoft.powershell.commands.clearitemcommand", "Property[path]"]
    - ["system.string", "microsoft.powershell.commands.computerinfo", "Property[csdomain]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.poplocationcommand", "Property[passthru]"]
    - ["system.string[]", "microsoft.powershell.commands.psremotingbasecmdlet", "Property[computername]"]
    - ["system.string", "microsoft.powershell.commands.whereobjectcommand", "property[property]"]
    - ["system.string", "microsoft.powershell.commands.computerinfo", "Property[csprimaryownercontact]"]
    - ["system.string", "microsoft.powershell.commands.receivepssessioncommand", "Property[certificatethumbprint]"]
    - ["system.management.automation.psobject", "microsoft.powershell.commands.converttoxmlcommand", "Property[inputobject]"]
    - ["system.object", "microsoft.powershell.commands.aliasprovider", "Method[setitemdynamicparameters].ReturnValue"]
    - ["system.uri[]", "microsoft.powershell.commands.psremotingbasecmdlet", "Property[connectionuri]"]
    - ["system.string[]", "microsoft.powershell.commands.addtypecommandbase", "Property[literalpath]"]
    - ["system.string", "microsoft.powershell.commands.newpssessionconfigurationfilecommand", "Property[author]"]
    - ["system.string[]", "microsoft.powershell.commands.removeitemcommand", "Property[exclude]"]
    - ["system.string", "microsoft.powershell.commands.enhancedkeyusagerepresentation", "Property[objectid]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.addtypecommandbase", "Property[passthru]"]
    - ["microsoft.powershell.commands.ostype", "microsoft.powershell.commands.ostype!", "Field[scoopenserver]"]
    - ["system.int32[]", "microsoft.powershell.commands.psbreakpointcreationbase", "Property[line]"]
    - ["system.string", "microsoft.powershell.commands.newmodulemanifestcommand", "Property[releasenotes]"]
    - ["system.string", "microsoft.powershell.commands.newservicecommand", "Property[displayname]"]
    - ["microsoft.powershell.commands.ostype", "microsoft.powershell.commands.ostype!", "Field[palmpilot]"]
    - ["system.management.automation.runspaces.pssession", "microsoft.powershell.commands.implicitremotingcommandbase", "Property[session]"]
    - ["system.string", "microsoft.powershell.commands.filesystemprovider", "Method[normalizerelativepath].ReturnValue"]
    - ["system.string[]", "microsoft.powershell.commands.newmodulemanifestcommand", "Property[filelist]"]
    - ["system.string", "microsoft.powershell.commands.webrequestpscmdlet", "Property[outfile]"]
    - ["system.string[]", "microsoft.powershell.commands.newpsrolecapabilityfilecommand", "Property[scriptstoprocess]"]
    - ["system.int32", "microsoft.powershell.commands.enterpshostprocesscommand", "Property[id]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.splitpathcommand", "Property[noqualifier]"]
    - ["microsoft.powershell.commands.deviceguardsmartstatus", "microsoft.powershell.commands.deviceguardsmartstatus!", "Field[running]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.exportcountercommand", "Property[force]"]
    - ["system.object", "microsoft.powershell.commands.newmodulemanifestcommand", "Property[privatedata]"]
    - ["system.nullable<microsoft.powershell.commands.processortype>", "microsoft.powershell.commands.processor", "Property[processortype]"]
    - ["system.string[]", "microsoft.powershell.commands.getvariablecommand", "Property[name]"]
    - ["system.string[]", "microsoft.powershell.commands.contentcommandbase", "Property[literalpath]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.addcomputercommand", "Property[force]"]
    - ["system.int32", "microsoft.powershell.commands.newtimespancommand", "Property[hours]"]
    - ["system.string", "microsoft.powershell.commands.exportpssessioncommand", "Property[encoding]"]
    - ["system.string", "microsoft.powershell.commands.sendmailmessage", "Property[subject]"]
    - ["system.string[]", "microsoft.powershell.commands.stopcomputercommand", "Property[computername]"]
    - ["microsoft.powershell.commands.webrequestsession", "microsoft.powershell.commands.webrequestpscmdlet", "Property[websession]"]
    - ["system.string[]", "microsoft.powershell.commands.convertfrommarkdowncommand", "Property[literalpath]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.whereobjectcommand", "Property[cmatch]"]
    - ["system.string[]", "microsoft.powershell.commands.neweventlogcommand", "Property[computername]"]
    - ["microsoft.powershell.commands.powerplatformrole", "microsoft.powershell.commands.powerplatformrole!", "Field[unspecified]"]
    - ["system.object", "microsoft.powershell.commands.registryprovider", "Method[removepropertydynamicparameters].ReturnValue"]
    - ["system.string", "microsoft.powershell.commands.updatetypedatacommand", "Property[typename]"]
    - ["microsoft.powershell.commands.producttype", "microsoft.powershell.commands.producttype!", "Field[unknown]"]
    - ["system.management.automation.psobject", "microsoft.powershell.commands.measurecommandcommand", "Property[inputobject]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.newpssessioncommand", "Property[usewindowspowershell]"]
    - ["system.string", "microsoft.powershell.commands.neweventlogcommand", "Property[categoryresourcefile]"]
    - ["system.diagnostics.process[]", "microsoft.powershell.commands.stopprocesscommand", "Property[inputobject]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.importmodulecommand", "Property[skipeditioncheck]"]
    - ["system.string[]", "microsoft.powershell.commands.newmodulemanifestcommand", "Property[tags]"]
    - ["system.string", "microsoft.powershell.commands.newmodulecommand", "Property[name]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.webrequestpscmdlet", "Property[noproxy]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.settracesourcecommand", "Property[force]"]
    - ["system.string", "microsoft.powershell.commands.securitydescriptorcommandsbase!", "Method[getsddl].ReturnValue"]
    - ["system.string[]", "microsoft.powershell.commands.removevariablecommand", "Property[include]"]
    - ["system.management.automation.runspaces.pssession[]", "microsoft.powershell.commands.receivejobcommand", "Property[session]"]
    - ["system.management.automation.runspaces.authenticationmechanism", "microsoft.powershell.commands.startjobcommand", "Property[authentication]"]
    - ["microsoft.powershell.commands.osproductsuite", "microsoft.powershell.commands.osproductsuite!", "Field[communicationsserver]"]
    - ["system.string", "microsoft.powershell.commands.utilityresources!", "Property[couldnotparseaspowershelldatafile]"]
    - ["system.int32", "microsoft.powershell.commands.testconnectioncommand", "Property[delay]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.getitemcommand", "Property[force]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.newpssessionoptioncommand", "Property[skipcacheck]"]
    - ["system.string", "microsoft.powershell.commands.getdatecommand", "Property[uformat]"]
    - ["system.string", "microsoft.powershell.commands.settracesourcecommand", "Property[filepath]"]
    - ["system.string", "microsoft.powershell.commands.stopcomputercommand", "Property[protocol]"]
    - ["system.string", "microsoft.powershell.commands.geteventpssnapin", "Property[name]"]
    - ["system.string", "microsoft.powershell.commands.webresponseobject", "Property[statusdescription]"]
    - ["system.string", "microsoft.powershell.commands.psuseragent!", "Property[internetexplorer]"]
    - ["system.string", "microsoft.powershell.commands.utilityresources!", "Property[formathextypenotsupported]"]
    - ["microsoft.powershell.commands.domainrole", "microsoft.powershell.commands.domainrole!", "Field[backupdomaincontroller]"]
    - ["system.nullable<system.boolean>", "microsoft.powershell.commands.computerinfo", "Property[csautomaticmanagedpagefile]"]
    - ["system.string", "microsoft.powershell.commands.commonrunspacecommandbase!", "Field[runspaceinstanceidparameterset]"]
    - ["system.string", "microsoft.powershell.commands.exportconsolecommand", "Property[path]"]
    - ["system.nullable<system.boolean>", "microsoft.powershell.commands.computerinfo", "Property[biosprimarybios]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.tracecommandcommand", "Property[debugger]"]
    - ["microsoft.powershell.commands.powerstate", "microsoft.powershell.commands.powerstate!", "Field[fullpower]"]
    - ["system.string[]", "microsoft.powershell.commands.resolvepathcommand", "Property[path]"]
    - ["system.string", "microsoft.powershell.commands.hotfix", "Property[hotfixid]"]
    - ["system.int32", "microsoft.powershell.commands.invokecommandcommand", "Property[port]"]
    - ["microsoft.powershell.commands.osproductsuite", "microsoft.powershell.commands.osproductsuite!", "Field[computeclusteredition]"]
    - ["microsoft.powershell.commands.powerstate", "microsoft.powershell.commands.powerstate!", "Field[powercycle]"]
    - ["system.char", "microsoft.powershell.commands.registryprovider", "Property[altitemseparator]"]
    - ["system.string[]", "microsoft.powershell.commands.importmodulecommand", "Property[function]"]
    - ["system.string[]", "microsoft.powershell.commands.newmodulemanifestcommand", "Property[typestoprocess]"]
    - ["microsoft.powershell.commands.deviceguardsmartstatus", "microsoft.powershell.commands.deviceguardsmartstatus!", "Field[configured]"]
    - ["microsoft.powershell.commands.pcsystemtypeex", "microsoft.powershell.commands.pcsystemtypeex!", "Field[unspecified]"]
    - ["system.string", "microsoft.powershell.commands.protectcmsmessagecommand", "Property[outfile]"]
    - ["system.string", "microsoft.powershell.commands.historyinfo", "Property[commandline]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.objectcmdletbase", "Property[casesensitive]"]
    - ["system.string", "microsoft.powershell.commands.matchinfo", "Method[toemphasizedstring].ReturnValue"]
    - ["system.int32", "microsoft.powershell.commands.newpsworkflowexecutionoptioncommand", "Property[activityprocessidletimeoutsec]"]
    - ["system.security.securestring", "microsoft.powershell.commands.getpfxcertificatecommand", "Property[password]"]
    - ["system.management.automation.pscredential", "microsoft.powershell.commands.removecomputercommand", "Property[localcredential]"]
    - ["system.string[]", "microsoft.powershell.commands.getitemcommand", "Property[exclude]"]
    - ["system.collections.arraylist", "microsoft.powershell.commands.groupinfo", "Property[values]"]
    - ["microsoft.powershell.commands.adminpasswordstatus", "microsoft.powershell.commands.adminpasswordstatus!", "Field[enabled]"]
    - ["microsoft.powershell.commands.foregroundapplicationboost", "microsoft.powershell.commands.foregroundapplicationboost!", "Field[none]"]
    - ["system.string", "microsoft.powershell.commands.exportcountercommand", "Property[fileformat]"]
    - ["microsoft.powershell.commands.webrequestmethod", "microsoft.powershell.commands.webrequestmethod!", "Field[merge]"]
    - ["system.string", "microsoft.powershell.commands.selectxmlinfo", "Property[path]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.testconnectioncommand", "Property[repeat]"]
    - ["system.string", "microsoft.powershell.commands.selectstringcommand", "Property[culture]"]
    - ["system.string[]", "microsoft.powershell.commands.implicitremotingcommandbase", "Property[commandname]"]
    - ["system.serviceprocess.servicestartmode", "microsoft.powershell.commands.setservicecommand", "Property[startuptype]"]
    - ["system.object", "microsoft.powershell.commands.webrequestpscmdlet", "Property[body]"]
    - ["system.management.automation.errorcategory", "microsoft.powershell.commands.writeorthrowerrorcommand", "Property[category]"]
    - ["system.nullable<system.int16>", "microsoft.powershell.commands.computerinfo", "Property[csresetcount]"]
    - ["system.nullable<microsoft.powershell.commands.resetcapability>", "microsoft.powershell.commands.computerinfo", "Property[csresetcapability]"]
    - ["system.string", "microsoft.powershell.commands.geteventsubscribercommand", "Property[sourceidentifier]"]
    - ["microsoft.powershell.commands.operatingsystemsku", "microsoft.powershell.commands.operatingsystemsku!", "Field[businessnedition]"]
    - ["system.object", "microsoft.powershell.commands.certificateprovider", "Method[removeitemdynamicparameters].ReturnValue"]
    - ["system.collections.generic.dictionary<system.string,system.string>", "microsoft.powershell.commands.webrequestsession", "Property[headers]"]
    - ["system.string[]", "microsoft.powershell.commands.getpssessionconfigurationcommand", "Property[name]"]
    - ["system.string", "microsoft.powershell.commands.selectxmlcommand", "Property[xpath]"]
    - ["microsoft.powershell.commands.processortype", "microsoft.powershell.commands.processortype!", "Field[centralprocessor]"]
    - ["system.collections.hashtable[]", "microsoft.powershell.commands.invokecommandcommand", "Property[sshconnection]"]
    - ["microsoft.powershell.commands.outputassemblytype", "microsoft.powershell.commands.addtypecommand", "Property[outputtype]"]
    - ["system.string[]", "microsoft.powershell.commands.addtypecommand", "Property[usingnamespace]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.waitprocesscommand", "Property[passthru]"]
    - ["system.collections.generic.ienumerable<system.management.automation.completionresult>", "microsoft.powershell.commands.nounargumentcompleter", "Method[completeargument].ReturnValue"]
    - ["microsoft.powershell.commands.pshostprocessinfo", "microsoft.powershell.commands.enterpshostprocesscommand", "Property[hostprocessinfo]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.getrandomcommandbase", "Property[shuffle]"]
    - ["system.string", "microsoft.powershell.commands.receivepssessioncommand", "Property[computername]"]
    - ["system.string[]", "microsoft.powershell.commands.getwineventcommand", "Property[listlog]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.writealiascommandbase", "Property[passthru]"]
    - ["system.string[]", "microsoft.powershell.commands.securitydescriptorcommandsbase", "Property[include]"]
    - ["system.string[]", "microsoft.powershell.commands.validateculturenamesgenerator", "Method[system.management.automation.ivalidatesetvaluesgenerator.getvalidvalues].ReturnValue"]
    - ["system.boolean", "microsoft.powershell.commands.corecommandbase", "Property[providersupportsshouldprocess]"]
    - ["system.string[]", "microsoft.powershell.commands.suspendjobcommand", "Property[command]"]
    - ["microsoft.powershell.commands.clipboardformat", "microsoft.powershell.commands.clipboardformat!", "Field[image]"]
    - ["system.string[]", "microsoft.powershell.commands.newpssessionconfigurationfilecommand", "Property[visibleexternalcommands]"]
    - ["microsoft.powershell.commands.websslprotocol", "microsoft.powershell.commands.websslprotocol!", "Field[tls11]"]
    - ["system.management.automation.psobject", "microsoft.powershell.commands.teeobjectcommand", "Property[inputobject]"]
    - ["system.string", "microsoft.powershell.commands.setwmiinstance", "Property[path]"]
    - ["system.timespan", "microsoft.powershell.commands.historyinfo", "Property[duration]"]
    - ["system.string[]", "microsoft.powershell.commands.converttohtmlcommand", "Property[precontent]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.splitpathcommand", "Property[isabsolute]"]
    - ["system.string", "microsoft.powershell.commands.getcmsmessagecommand", "Property[content]"]
    - ["system.consolecolor", "microsoft.powershell.commands.consolecolorcmdlet", "Property[foregroundcolor]"]
    - ["system.string", "microsoft.powershell.commands.receivepssessioncommand", "Property[name]"]
    - ["system.string[]", "microsoft.powershell.commands.setpsbreakpointcommand", "Property[script]"]
    - ["system.int32", "microsoft.powershell.commands.starttransactioncommand", "Property[timeout]"]
    - ["system.string[]", "microsoft.powershell.commands.selectstringcommand", "Property[include]"]
    - ["microsoft.powershell.commands.sessionfilterstate", "microsoft.powershell.commands.sessionfilterstate!", "Field[opened]"]
    - ["microsoft.powershell.commands.frontpanelresetstatus", "microsoft.powershell.commands.frontpanelresetstatus!", "Field[unknown]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.webrequestpscmdlet", "Property[usebasicparsing]"]
    - ["system.collections.idictionary", "microsoft.powershell.commands.webrequestpscmdlet", "Property[headers]"]
    - ["system.string", "microsoft.powershell.commands.getitemcommand", "Property[filter]"]
    - ["system.management.automation.pscredential", "microsoft.powershell.commands.registerwmieventcommand", "Property[credential]"]
    - ["system.string[]", "microsoft.powershell.commands.validatematchstringculturenamesgenerator", "Method[system.management.automation.ivalidatesetvaluesgenerator.getvalidvalues].ReturnValue"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.measureobjectcommand", "Property[standarddeviation]"]
    - ["system.object", "microsoft.powershell.commands.addmembercommand", "Property[secondvalue]"]
    - ["system.object[]", "microsoft.powershell.commands.newmodulemanifestcommand", "Property[modulelist]"]
    - ["system.nullable<system.datetime>", "microsoft.powershell.commands.computerinfo", "Property[windowsinstalldatefromregistry]"]
    - ["system.string[]", "microsoft.powershell.commands.newmodulemanifestcommand", "Property[aliasestoexport]"]
    - ["microsoft.powershell.commands.ostype", "microsoft.powershell.commands.ostype!", "Field[windows2000]"]
    - ["microsoft.powershell.commands.powermanagementcapabilities", "microsoft.powershell.commands.powermanagementcapabilities!", "Field[enabled]"]
    - ["system.management.automation.runspaces.runspace[]", "microsoft.powershell.commands.commonrunspacecommandbase", "Property[runspace]"]
    - ["system.management.automation.pscredential", "microsoft.powershell.commands.psremotingbasecmdlet", "Property[credential]"]
    - ["system.string", "microsoft.powershell.commands.converttohtmlcommand", "Property[as]"]
    - ["system.string[]", "microsoft.powershell.commands.newmodulemanifestcommand", "Property[variablestoexport]"]
    - ["system.string", "microsoft.powershell.commands.enablepssessionconfigurationcommand", "Property[securitydescriptorsddl]"]
    - ["system.diagnostics.process[]", "microsoft.powershell.commands.getpshostprocessinfocommand", "Property[process]"]
    - ["microsoft.powershell.commands.foregroundapplicationboost", "microsoft.powershell.commands.foregroundapplicationboost!", "Field[minimum]"]
    - ["system.int32", "microsoft.powershell.commands.writeeventlogcommand", "Property[eventid]"]
    - ["microsoft.powershell.commands.ostype", "microsoft.powershell.commands.ostype!", "Field[javavm]"]
    - ["system.int32", "microsoft.powershell.commands.sortobjectcommand", "Property[top]"]
    - ["microsoft.powershell.commands.operatingsystemsku", "microsoft.powershell.commands.operatingsystemsku!", "Field[storageworkgroupserveredition]"]
    - ["system.int32", "microsoft.powershell.commands.webrequestpscmdlet", "Property[maximumretrycount]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.receivepssessioncommand", "Property[usessl]"]
    - ["system.string", "microsoft.powershell.commands.newwebserviceproxy", "Property[class]"]
    - ["microsoft.powershell.commands.powerplatformrole", "microsoft.powershell.commands.powerplatformrole!", "Field[slate]"]
    - ["system.string[]", "microsoft.powershell.commands.getitempropertycommand", "Property[name]"]
    - ["system.collections.generic.list<microsoft.powershell.commands.dnsnamerepresentation>", "microsoft.powershell.commands.dnsnameproperty", "Property[dnsnamelist]"]
    - ["system.string[]", "microsoft.powershell.commands.getpsdrivecommand", "Property[name]"]
    - ["system.string[]", "microsoft.powershell.commands.setitemcommand", "Property[path]"]
    - ["system.nullable<system.int32>", "microsoft.powershell.commands.textmeasureinfo", "Property[lines]"]
    - ["system.string[]", "microsoft.powershell.commands.connectpssessioncommand", "Property[computername]"]
    - ["system.management.automation.pscredential", "microsoft.powershell.commands.testcomputersecurechannelcommand", "Property[credential]"]
    - ["system.string", "microsoft.powershell.commands.writeorthrowerrorcommand", "Property[recommendedaction]"]
    - ["microsoft.powershell.commands.filesystemcmdletproviderencoding", "microsoft.powershell.commands.filesystemcmdletproviderencoding!", "Field[unicode]"]
    - ["system.string[]", "microsoft.powershell.commands.getcommandcommand", "Property[verb]"]
    - ["system.string[]", "microsoft.powershell.commands.cleareventlogcommand", "Property[computername]"]
    - ["system.int32", "microsoft.powershell.commands.getjobcommand", "Property[newest]"]
    - ["microsoft.powershell.commands.servicestartuptype", "microsoft.powershell.commands.servicestartuptype!", "Field[automaticdelayedstart]"]
    - ["microsoft.powershell.commands.processortype", "microsoft.powershell.commands.processortype!", "Field[dspprocessor]"]
    - ["system.string", "microsoft.powershell.commands.controlpanelitem", "Property[description]"]
    - ["system.int32", "microsoft.powershell.commands.psworkflowexecutionoption", "Property[remotenodesessionidletimeoutsec]"]
    - ["system.object[]", "microsoft.powershell.commands.writecontentcommandbase", "Property[value]"]
    - ["system.string[]", "microsoft.powershell.commands.computerinfo", "Property[osmuilanguages]"]
    - ["microsoft.powershell.commands.powermanagementcapabilities", "microsoft.powershell.commands.powermanagementcapabilities!", "Field[powerstatesettable]"]
    - ["system.string", "microsoft.powershell.commands.registerwmieventcommand", "Method[getsourceobjecteventname].ReturnValue"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.outfilecommand", "Property[nonewline]"]
    - ["system.management.automation.psobject", "microsoft.powershell.commands.converttohtmlcommand", "Property[inputobject]"]
    - ["system.int32", "microsoft.powershell.commands.testconnectioncommand", "Property[buffersize]"]
    - ["microsoft.powershell.commands.filesystemcmdletproviderencoding", "microsoft.powershell.commands.filesystemcmdletproviderencoding!", "Field[unknown]"]
    - ["system.int32", "microsoft.powershell.commands.wmibasecmdlet", "Property[throttlelimit]"]
    - ["system.string[]", "microsoft.powershell.commands.updatedata", "Property[appendpath]"]
    - ["system.collections.idictionary[]", "microsoft.powershell.commands.newpsrolecapabilityfilecommand", "Property[aliasdefinitions]"]
    - ["system.management.automation.scriptblock", "microsoft.powershell.commands.whereobjectcommand", "Property[filterscript]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.formathex", "Property[raw]"]
    - ["system.collections.hashtable", "microsoft.powershell.commands.enterpssessioncommand", "Property[options]"]
    - ["microsoft.powershell.commands.deviceguardsoftwaresecure[]", "microsoft.powershell.commands.computerinfo", "Property[deviceguardsecurityservicesconfigured]"]
    - ["system.serviceprocess.servicestartmode", "microsoft.powershell.commands.newservicecommand", "Property[startuptype]"]
    - ["system.guid[]", "microsoft.powershell.commands.psrunspacecmdlet", "Property[vmid]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.measureobjectcommand", "Property[average]"]
    - ["system.int32", "microsoft.powershell.commands.testconnectioncommand", "Property[tcpport]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.exportaliascommand", "Property[passthru]"]
    - ["system.string[]", "microsoft.powershell.commands.addcomputercommand", "Property[computername]"]
    - ["system.string[]", "microsoft.powershell.commands.removepssessioncommand", "Property[vmname]"]
    - ["system.nullable<system.boolean>", "microsoft.powershell.commands.computerinfo", "Property[csinfraredsupported]"]
    - ["system.string", "microsoft.powershell.commands.psexecutioncmdlet", "Property[configurationname]"]
    - ["microsoft.powershell.commands.operatingsystemsku", "microsoft.powershell.commands.operatingsystemsku!", "Field[windowsiotcore]"]
    - ["system.string[]", "microsoft.powershell.commands.gettimezonecommand", "Property[name]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.invokecommandcommand", "Property[nonewscope]"]
    - ["microsoft.powershell.commands.getcounter.performancecountersampleset[]", "microsoft.powershell.commands.exportcountercommand", "Property[inputobject]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.getchilditemcommand", "Property[recurse]"]
    - ["microsoft.powershell.commands.processortype", "microsoft.powershell.commands.processortype!", "Field[videoprocessor]"]
    - ["microsoft.powershell.commands.dataexecutionpreventionsupportpolicy", "microsoft.powershell.commands.dataexecutionpreventionsupportpolicy!", "Field[optin]"]
    - ["system.string", "microsoft.powershell.commands.computerinfo", "Property[biosversion]"]
    - ["microsoft.powershell.commands.deviceguardconfigcodeintegritystatus", "microsoft.powershell.commands.deviceguardconfigcodeintegritystatus!", "Field[auditmode]"]
    - ["system.string", "microsoft.powershell.commands.internalsymboliclinklinkcodemethods!", "Method[resolvedtarget].ReturnValue"]
    - ["system.string", "microsoft.powershell.commands.bytecollection", "Property[path]"]
    - ["system.object[]", "microsoft.powershell.commands.modulecmdletbase", "Property[baseargumentlist]"]
    - ["system.guid[]", "microsoft.powershell.commands.startjobcommand", "Property[vmid]"]
    - ["system.string[]", "microsoft.powershell.commands.psremotingbasecmdlet", "Property[vmname]"]
    - ["system.object", "microsoft.powershell.commands.jsonobject!", "Method[convertfromjson].ReturnValue"]
    - ["system.string", "microsoft.powershell.commands.psremotingcmdlet!", "Field[defaultpowershellremoteshellappname]"]
    - ["system.string", "microsoft.powershell.commands.helpnotfoundexception", "Property[helptopic]"]
    - ["system.int32", "microsoft.powershell.commands.invokecommandcommand", "Property[throttlelimit]"]
    - ["system.object", "microsoft.powershell.commands.registryprovider", "Method[newpropertydynamicparameters].ReturnValue"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.whereobjectcommand", "Property[notin]"]
    - ["system.string", "microsoft.powershell.commands.importaliascommand", "Property[literalpath]"]
    - ["system.string", "microsoft.powershell.commands.filesystemprovider!", "Field[providername]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.clearhistorycommand", "Property[newest]"]
    - ["system.uri", "microsoft.powershell.commands.converttohtmlcommand", "Property[cssuri]"]
    - ["microsoft.powershell.commands.cpuavailability", "microsoft.powershell.commands.cpuavailability!", "Field[powercycle]"]
    - ["system.nullable<system.boolean>", "microsoft.powershell.commands.computerinfo", "Property[osdataexecutionpreventiondrivers]"]
    - ["system.string[]", "microsoft.powershell.commands.showmarkdowncommand", "Property[path]"]
    - ["system.string[]", "microsoft.powershell.commands.moveitemcommand", "Property[include]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.starttranscriptcommand", "Property[append]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.selectobjectcommand", "Property[wait]"]
    - ["system.string", "microsoft.powershell.commands.outgridviewcommand", "Property[title]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.getwineventcommand", "Property[force]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.startjobcommand", "Property[enablenetworkaccess]"]
    - ["system.string", "microsoft.powershell.commands.certificateprovider", "Method[getparentpath].ReturnValue"]
    - ["system.string[]", "microsoft.powershell.commands.copyitemcommand", "Property[exclude]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.getservicecommand", "Property[dependentservices]"]
    - ["system.int32[]", "microsoft.powershell.commands.getprocesscommand", "Property[id]"]
    - ["microsoft.powershell.commands.operatingsystemsku", "microsoft.powershell.commands.operatingsystemsku!", "Field[homepremiumedition]"]
    - ["system.string[]", "microsoft.powershell.commands.newpssessionconfigurationfilecommand", "Property[typestoprocess]"]
    - ["microsoft.powershell.commands.deviceguardhardwaresecure", "microsoft.powershell.commands.deviceguardhardwaresecure!", "Field[secureboot]"]
    - ["system.nullable<system.uint32>", "microsoft.powershell.commands.computerinfo", "Property[osnumberofusers]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.removeitempropertycommand", "Property[force]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.invokecommandcommand", "Property[hidecomputername]"]
    - ["system.string", "microsoft.powershell.commands.computerinfo", "Property[biosname]"]
    - ["system.int32", "microsoft.powershell.commands.newpssessionoptioncommand", "Property[maximumreceivedobjectsize]"]
    - ["system.object[]", "microsoft.powershell.commands.updatelistcommand", "Property[remove]"]
    - ["microsoft.powershell.commands.osencryptionlevel", "microsoft.powershell.commands.osencryptionlevel!", "Field[encryptnbits]"]
    - ["microsoft.powershell.commands.pcsystemtype", "microsoft.powershell.commands.pcsystemtype!", "Field[maximum]"]
    - ["microsoft.powershell.commands.deviceguardconfigcodeintegritystatus", "microsoft.powershell.commands.deviceguardconfigcodeintegritystatus!", "Field[off]"]
    - ["microsoft.powershell.commands.ostype", "microsoft.powershell.commands.ostype!", "Field[os_390]"]
    - ["system.string[]", "microsoft.powershell.commands.gethelpcommand", "Property[role]"]
    - ["system.nullable<system.int16>", "microsoft.powershell.commands.computerinfo", "Property[csresetlimit]"]
    - ["system.uri", "microsoft.powershell.commands.webrequestpscmdlet", "Property[uri]"]
    - ["system.collections.generic.dictionary<system.string,system.string>", "microsoft.powershell.commands.webresponseobject", "Property[headers]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.addpssnapincommand", "Property[passthru]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.setstrictmodecommand", "Property[off]"]
    - ["system.version", "microsoft.powershell.commands.setstrictmodecommand", "Property[version]"]
    - ["system.management.automation.psobject[]", "microsoft.powershell.commands.addhistorycommand", "Property[inputobject]"]
    - ["system.string", "microsoft.powershell.commands.unregisterpssessionconfigurationcommand", "Property[name]"]
    - ["system.boolean", "microsoft.powershell.commands.invokeitemcommand", "Property[providersupportsshouldprocess]"]
    - ["system.string[]", "microsoft.powershell.commands.removeeventlogcommand", "Property[logname]"]
    - ["system.string", "microsoft.powershell.commands.dnsnamerepresentation", "Property[unicode]"]
    - ["system.xml.xmlnode", "microsoft.powershell.commands.selectxmlinfo", "Property[node]"]
    - ["microsoft.powershell.commands.cpustatus", "microsoft.powershell.commands.cpustatus!", "Field[enabled]"]
    - ["system.string", "microsoft.powershell.commands.hotfix", "Property[installedon]"]
    - ["system.object", "microsoft.powershell.commands.filesystemprovider", "Method[itemexistsdynamicparameters].ReturnValue"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.renamecomputercommand", "Property[force]"]
    - ["system.string[]", "microsoft.powershell.commands.updatetypedatacommand", "Property[propertyserializationset]"]
    - ["system.string", "microsoft.powershell.commands.psremotingcmdlet", "Method[resolvecomputername].ReturnValue"]
    - ["system.string[]", "microsoft.powershell.commands.geteventpssnapin", "Property[types]"]
    - ["system.int32", "microsoft.powershell.commands.unregistereventcommand", "Property[subscriptionid]"]
    - ["system.nullable<system.datetime>", "microsoft.powershell.commands.filesystemitemproviderdynamicparameters", "Property[olderthan]"]
    - ["system.management.automation.psobject", "microsoft.powershell.commands.getuniquecommand", "Property[inputobject]"]
    - ["system.string", "microsoft.powershell.commands.addtypecommand", "Property[outputassembly]"]
    - ["system.string[]", "microsoft.powershell.commands.implicitremotingcommandbase", "Property[module]"]
    - ["system.string", "microsoft.powershell.commands.convertfromjsoncommand", "Property[inputobject]"]
    - ["system.object", "microsoft.powershell.commands.formatwidecommand", "property[property]"]
    - ["microsoft.powershell.commands.wakeuptype", "microsoft.powershell.commands.wakeuptype!", "Field[lanremote]"]
    - ["system.string[]", "microsoft.powershell.commands.clearvariablecommand", "Property[include]"]
    - ["system.nullable<system.int16>", "microsoft.powershell.commands.computerinfo", "Property[biosembeddedcontrollermajorversion]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.receivejobcommand", "Property[writeevents]"]
    - ["microsoft.powershell.commands.operatingsystemsku", "microsoft.powershell.commands.operatingsystemsku!", "Field[starteredition]"]
    - ["microsoft.powershell.commands.ostype", "microsoft.powershell.commands.ostype!", "Field[scounixware]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.measureobjectcommand", "Property[sum]"]
    - ["system.int32", "microsoft.powershell.commands.exportclixmlcommand", "Property[depth]"]
    - ["system.string[]", "microsoft.powershell.commands.moveitemcommand", "Property[path]"]
    - ["system.string[]", "microsoft.powershell.commands.computerinfo", "Property[csroles]"]
    - ["system.uri", "microsoft.powershell.commands.newmodulemanifestcommand", "Property[iconuri]"]
    - ["system.string", "microsoft.powershell.commands.startprocesscommand", "Property[redirectstandardinput]"]
    - ["system.guid[]", "microsoft.powershell.commands.disconnectpssessioncommand", "Property[vmid]"]
    - ["microsoft.powershell.commands.ostype", "microsoft.powershell.commands.ostype!", "Field[msdos]"]
    - ["system.uri[]", "microsoft.powershell.commands.getpssessioncommand", "Property[connectionuri]"]
    - ["system.string[]", "microsoft.powershell.commands.exportmodulemembercommand", "Property[variable]"]
    - ["system.string", "microsoft.powershell.commands.protectcmsmessagecommand", "Property[path]"]
    - ["system.int32", "microsoft.powershell.commands.webrequestpscmdlet", "Property[maximumredirection]"]
    - ["system.object[]", "microsoft.powershell.commands.updatelistcommand", "Property[add]"]
    - ["system.nullable<microsoft.powershell.commands.cpuavailability>", "microsoft.powershell.commands.processor", "Property[availability]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.newpssessionoptioncommand", "Property[useutf16]"]
    - ["system.string", "microsoft.powershell.commands.matchinfo", "Property[pattern]"]
    - ["system.nullable<system.int32>", "microsoft.powershell.commands.wsmanconfigurationoption", "Property[maxconcurrentusers]"]
    - ["system.nullable<microsoft.powershell.commands.ostype>", "microsoft.powershell.commands.computerinfo", "Property[ostype]"]
    - ["microsoft.powershell.commands.outtarget", "microsoft.powershell.commands.outtarget!", "Field[host]"]
    - ["system.string", "microsoft.powershell.commands.invokehistorycommand", "Property[id]"]
    - ["system.string[]", "microsoft.powershell.commands.corecommandbase", "Property[include]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.converttosecurestringcommand", "Property[asplaintext]"]
    - ["system.string[]", "microsoft.powershell.commands.importclixmlcommand", "Property[literalpath]"]
    - ["system.string", "microsoft.powershell.commands.newpsrolecapabilityfilecommand", "Property[companyname]"]
    - ["system.string[]", "microsoft.powershell.commands.newmodulecommand", "Property[cmdlet]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.getpssnapincommand", "Property[registered]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.testconnectioncommand", "Property[resolvedestination]"]
    - ["system.object[]", "microsoft.powershell.commands.newpsrolecapabilityfilecommand", "Property[visiblecmdlets]"]
    - ["system.boolean", "microsoft.powershell.commands.renamecomputerchangeinfo", "Property[hassucceeded]"]
    - ["system.string[]", "microsoft.powershell.commands.addtypecommand", "Property[compileroptions]"]
    - ["system.string", "microsoft.powershell.commands.addtypecompilererror", "Property[filename]"]
    - ["system.management.automation.scopeditemoptions", "microsoft.powershell.commands.setvariablecommand", "Property[option]"]
    - ["microsoft.powershell.commands.outtarget", "microsoft.powershell.commands.outtarget!", "Field[default]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.copyitemcommand", "Property[passthru]"]
    - ["system.string", "microsoft.powershell.commands.restartcomputertimeoutexception", "Property[computername]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.testconnectioncommand", "Property[traceroute]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.newpsworkflowexecutionoptioncommand", "Property[enablevalidation]"]
    - ["system.string[]", "microsoft.powershell.commands.formathex", "Property[literalpath]"]
    - ["system.management.automation.psobject", "microsoft.powershell.commands.converttocsvcommand", "Property[inputobject]"]
    - ["system.management.automation.pscredential", "microsoft.powershell.commands.sendmailmessage", "Property[credential]"]
    - ["system.boolean", "microsoft.powershell.commands.removeitemcommand", "Property[providersupportsshouldprocess]"]
    - ["microsoft.powershell.commands.cpuarchitecture", "microsoft.powershell.commands.cpuarchitecture!", "Field[x86]"]
    - ["microsoft.powershell.commands.operatingsystemsku", "microsoft.powershell.commands.operatingsystemsku!", "Field[windowsrt]"]
    - ["system.int32", "microsoft.powershell.commands.newtimespancommand", "Property[seconds]"]
    - ["microsoft.powershell.commands.servicestartuptype", "microsoft.powershell.commands.servicestartuptype!", "Field[automatic]"]
    - ["system.nullable<system.uint16>", "microsoft.powershell.commands.computerinfo", "Property[biostargetoperatingsystem]"]
    - ["system.management.automation.scriptblock", "microsoft.powershell.commands.newmodulecommand", "Property[scriptblock]"]
    - ["system.string", "microsoft.powershell.commands.importcsvcommand", "Property[encoding]"]
    - ["system.nullable<system.int32>", "microsoft.powershell.commands.wsmanconfigurationoption", "Property[processidletimeoutsec]"]
    - ["system.string[]", "microsoft.powershell.commands.setitempropertycommand", "Property[path]"]
    - ["system.string", "microsoft.powershell.commands.converttohtmlcommand", "Property[title]"]
    - ["system.int32", "microsoft.powershell.commands.setpsbreakpointcommand", "Property[column]"]
    - ["system.string", "microsoft.powershell.commands.removealiascommand", "Property[scope]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.testconnectioncommand", "Property[asjob]"]
    - ["microsoft.powershell.commands.textencodingtype", "microsoft.powershell.commands.textencodingtype!", "Field[utf8]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.convertfromsecurestringcommand", "Property[asplaintext]"]
    - ["system.string[]", "microsoft.powershell.commands.converttohtmlcommand", "Property[head]"]
    - ["system.string", "microsoft.powershell.commands.setitemcommand", "Property[filter]"]
    - ["system.text.encoding", "microsoft.powershell.commands.filesystemcontentdynamicparametersbase", "Property[encodingtype]"]
    - ["system.string[]", "microsoft.powershell.commands.setitempropertycommand", "Property[literalpath]"]
    - ["system.boolean", "microsoft.powershell.commands.modulecmdletbase", "Property[addtoappdomainlevelcache]"]
    - ["system.string[]", "microsoft.powershell.commands.selectstringcommand", "Property[path]"]
    - ["microsoft.powershell.commands.pcsystemtype", "microsoft.powershell.commands.pcsystemtype!", "Field[desktop]"]
    - ["system.object", "microsoft.powershell.commands.getrandomcommandbase", "Property[maximum]"]
    - ["system.string", "microsoft.powershell.commands.newpsworkflowexecutionoptioncommand", "Property[persistencepath]"]
    - ["system.management.automation.scriptblock", "microsoft.powershell.commands.foreachobjectcommand", "Property[parallel]"]
    - ["microsoft.powershell.commands.operatingsystemsku", "microsoft.powershell.commands.operatingsystemsku!", "Field[windowsultimate]"]
    - ["system.nullable<system.uint64>", "microsoft.powershell.commands.computerinfo", "Property[osfreespaceinpagingfiles]"]
    - ["system.string[]", "microsoft.powershell.commands.importworkflowcommand", "Property[dependentassemblies]"]
    - ["system.nullable<system.int32>", "microsoft.powershell.commands.wsmanconfigurationoption", "Property[maxprocessespersession]"]
    - ["system.string", "microsoft.powershell.commands.pssessionconfigurationcommandbase", "Property[securitydescriptorsddl]"]
    - ["system.object", "microsoft.powershell.commands.registryprovider", "Method[clearpropertydynamicparameters].ReturnValue"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.exportconsolecommand", "Property[noclobber]"]
    - ["system.management.automation.runspaces.typedata", "microsoft.powershell.commands.removetypedatacommand", "Property[typedata]"]
    - ["system.int32", "microsoft.powershell.commands.newpssessionoptioncommand", "Property[maximumreceiveddatasizepercommand]"]
    - ["microsoft.powershell.commands.ostype", "microsoft.powershell.commands.ostype!", "Field[dedicated]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.restartcomputercommand", "Property[wait]"]
    - ["microsoft.powershell.commands.cpuavailability", "microsoft.powershell.commands.cpuavailability!", "Field[powersavelowpowermode]"]
    - ["system.nullable<system.uint32>", "microsoft.powershell.commands.computerinfo", "Property[csnumberofprocessors]"]
    - ["system.string", "microsoft.powershell.commands.securitydescriptorcommandsbase!", "Method[getgroup].ReturnValue"]
    - ["system.string", "microsoft.powershell.commands.teeobjectcommand", "Property[filepath]"]
    - ["system.boolean", "microsoft.powershell.commands.psrunspacedebug", "Property[breakall]"]
    - ["system.management.automation.job", "microsoft.powershell.commands.debugjobcommand", "Property[job]"]
    - ["system.nullable<system.guid>", "microsoft.powershell.commands.modulespecification", "Property[guid]"]
    - ["system.management.automation.runspaces.pssession", "microsoft.powershell.commands.getmodulecommand", "Property[pssession]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.getprocesscommand", "Property[includeusername]"]
    - ["system.string", "microsoft.powershell.commands.gethelpcommand", "Property[path]"]
    - ["system.management.automation.pscredential", "microsoft.powershell.commands.getpssessioncommand", "Property[credential]"]
    - ["microsoft.powershell.commands.webauthenticationtype", "microsoft.powershell.commands.webrequestpscmdlet", "Property[authentication]"]
    - ["system.string", "microsoft.powershell.commands.computerinfo", "Property[osmanufacturer]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.disablepssessionconfigurationcommand", "Property[force]"]
    - ["system.nullable<system.boolean>", "microsoft.powershell.commands.computerinfo", "Property[csautomaticresetbootoption]"]
    - ["system.nullable<system.double>", "microsoft.powershell.commands.genericobjectmeasureinfo", "Property[sum]"]
    - ["system.string", "microsoft.powershell.commands.psremotingcmdlet", "Method[resolveshell].ReturnValue"]
    - ["system.management.automation.runspaces.outputbufferingmode", "microsoft.powershell.commands.newpssessionoptioncommand", "Property[outputbufferingmode]"]
    - ["system.version", "microsoft.powershell.commands.newmodulemanifestcommand", "Property[powershellversion]"]
    - ["system.int32[]", "microsoft.powershell.commands.getjobcommand", "Property[id]"]
    - ["microsoft.powershell.commands.operatingsystemsku", "microsoft.powershell.commands.operatingsystemsku!", "Field[storageserverexpresscore]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.stopprocesscommand", "Property[force]"]
    - ["system.object", "microsoft.powershell.commands.objecteventregistrationbase", "Method[getsourceobject].ReturnValue"]
    - ["system.security.securestring", "microsoft.powershell.commands.convertfromtosecurestringcommandbase", "Property[securekey]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.webrequestpscmdlet", "Property[preservehttpmethodonredirect]"]
    - ["system.boolean", "microsoft.powershell.commands.corecommandbase", "Method[doesprovidersupportshouldprocess].ReturnValue"]
    - ["system.string[]", "microsoft.powershell.commands.invokecommandcommand", "Property[hostname]"]
    - ["system.string[]", "microsoft.powershell.commands.getcontrolpanelitemcommand", "Property[name]"]
    - ["system.string", "microsoft.powershell.commands.newitempropertycommand", "Property[name]"]
    - ["system.nullable<system.int16>", "microsoft.powershell.commands.computerinfo", "Property[cscurrenttimezone]"]
    - ["system.string[]", "microsoft.powershell.commands.basecsvwritingcommand", "Property[quotefields]"]
    - ["system.string", "microsoft.powershell.commands.setauthenticodesignaturecommand", "Property[includechain]"]
    - ["system.string[]", "microsoft.powershell.commands.getlocationcommand", "Property[psdrive]"]
    - ["system.string", "microsoft.powershell.commands.computerinfo", "Property[cslastloadinfo]"]
    - ["system.string", "microsoft.powershell.commands.processcommandexception", "Property[processname]"]
    - ["system.uri", "microsoft.powershell.commands.newmodulemanifestcommand", "Property[licenseuri]"]
    - ["system.boolean", "microsoft.powershell.commands.clearcontentcommand", "Property[providersupportsshouldprocess]"]
    - ["system.uint16[]", "microsoft.powershell.commands.computerinfo", "Property[csbootstatus]"]
    - ["microsoft.powershell.commands.processortype", "microsoft.powershell.commands.processortype!", "Field[unknown]"]
    - ["microsoft.powershell.commands.powerstate", "microsoft.powershell.commands.powerstate!", "Field[powersavewarning]"]
    - ["system.boolean", "microsoft.powershell.commands.sendastrustedissuerproperty!", "Method[readsendastrustedissuerproperty].ReturnValue"]
    - ["system.int32[]", "microsoft.powershell.commands.geteventlogcommand", "Property[index]"]
    - ["microsoft.powershell.commands.ostype", "microsoft.powershell.commands.ostype!", "Field[aseries]"]
    - ["system.management.automation.psobject", "microsoft.powershell.commands.setmarkdownoptioncommand", "Property[inputobject]"]
    - ["system.string", "microsoft.powershell.commands.newwineventcommand", "Property[providername]"]
    - ["system.string", "microsoft.powershell.commands.computerinfo", "Property[osserialnumber]"]
    - ["system.version", "microsoft.powershell.commands.newmodulemanifestcommand", "Property[clrversion]"]
    - ["system.int32", "microsoft.powershell.commands.startjobcommand", "Property[throttlelimit]"]
    - ["system.collections.ilist", "microsoft.powershell.commands.sessionstateproviderbasecontentreaderwriter", "Method[write].ReturnValue"]
    - ["microsoft.powershell.commands.webrequestmethod", "microsoft.powershell.commands.webrequestmethod!", "Field[put]"]
    - ["system.object", "microsoft.powershell.commands.filesystemprovider", "Method[getpropertydynamicparameters].ReturnValue"]
    - ["system.string[]", "microsoft.powershell.commands.exportmodulemembercommand", "Property[function]"]
    - ["system.string[]", "microsoft.powershell.commands.moveitempropertycommand", "Property[literalpath]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.getpfxcertificatecommand", "Property[nopromptforpassword]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.newmodulecommand", "Property[ascustomobject]"]
    - ["system.string[]", "microsoft.powershell.commands.writeinformationcommand", "Property[tags]"]
    - ["system.nullable<system.int32>", "microsoft.powershell.commands.newpstransportoptioncommand", "Property[maxsessionsperuser]"]
    - ["system.object[]", "microsoft.powershell.commands.newmodulecommand", "Property[argumentlist]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.showcommandcommand", "Property[errorpopup]"]
    - ["system.int32", "microsoft.powershell.commands.webrequestsession", "Property[maximumredirection]"]
    - ["system.string[]", "microsoft.powershell.commands.controlpanelitem", "Property[category]"]
    - ["system.collections.hashtable", "microsoft.powershell.commands.setwmiinstance", "Property[arguments]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.receivepssessioncommand", "Property[allowredirection]"]
    - ["system.management.automation.job[]", "microsoft.powershell.commands.stopjobcommand", "Property[job]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.exportcsvcommand", "Property[force]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.getuptimecommand", "Property[since]"]
    - ["microsoft.powershell.commands.producttype", "microsoft.powershell.commands.producttype!", "Field[workstation]"]
    - ["system.string[]", "microsoft.powershell.commands.wmibasecmdlet", "Property[computername]"]
    - ["system.boolean", "microsoft.powershell.commands.filesystemprovider", "Method[haschilditems].ReturnValue"]
    - ["microsoft.powershell.commands.joinoptions", "microsoft.powershell.commands.joinoptions!", "Field[joinwithnewname]"]
    - ["system.management.automation.psobject", "microsoft.powershell.commands.outnullcommand", "Property[inputobject]"]
    - ["microsoft.powershell.commands.webauthenticationtype", "microsoft.powershell.commands.webauthenticationtype!", "Field[basic]"]
    - ["system.string", "microsoft.powershell.commands.computerinfo", "Property[osbuildnumber]"]
    - ["system.string[]", "microsoft.powershell.commands.newpssessioncommand", "Property[computername]"]
    - ["system.string", "microsoft.powershell.commands.computerinfo", "Property[csmanufacturer]"]
    - ["system.management.automation.pscredential", "microsoft.powershell.commands.newpssessioncommand", "Property[credential]"]
    - ["microsoft.powershell.commands.ostype", "microsoft.powershell.commands.ostype!", "Field[machkernel]"]
    - ["microsoft.powershell.commands.waitforservicetypes", "microsoft.powershell.commands.waitforservicetypes!", "Field[wmi]"]
    - ["microsoft.powershell.commands.operatingsystemsku", "microsoft.powershell.commands.operatingsystemsku!", "Field[businessedition]"]
    - ["system.string[]", "microsoft.powershell.commands.securitydescriptorinfo", "Field[discretionaryacl]"]
    - ["system.string", "microsoft.powershell.commands.psrunspacecmdlet!", "Field[vmnameinstanceidparameterset]"]
    - ["system.string", "microsoft.powershell.commands.exportclixmlcommand", "Property[path]"]
    - ["system.byte[]", "microsoft.powershell.commands.bytecollection", "Property[bytes]"]
    - ["system.int32", "microsoft.powershell.commands.newpssessionoptioncommand", "Property[maxconnectionretrycount]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.sendmailmessage", "Property[bodyashtml]"]
    - ["microsoft.powershell.commands.language", "microsoft.powershell.commands.language!", "Field[csharpversion3]"]
    - ["system.string[]", "microsoft.powershell.commands.setaclcommand", "Property[path]"]
    - ["system.string", "microsoft.powershell.commands.computerinfo", "Property[windowscurrentversion]"]
    - ["system.nullable<system.uint32>", "microsoft.powershell.commands.computerinfo", "Property[csnumberoflogicalprocessors]"]
    - ["system.int64", "microsoft.powershell.commands.importcountercommand", "Property[maxsamples]"]
    - ["system.string", "microsoft.powershell.commands.convertfromstringdatacommand", "Property[stringdata]"]
    - ["system.string", "microsoft.powershell.commands.writeeventlogcommand", "Property[source]"]
    - ["system.collections.hashtable", "microsoft.powershell.commands.converttohtmlcommand", "Property[meta]"]
    - ["system.boolean", "microsoft.powershell.commands.psrunspacedebug", "Property[enabled]"]
    - ["system.string", "microsoft.powershell.commands.utilityresources!", "Property[formathexresolvepatherror]"]
    - ["system.string", "microsoft.powershell.commands.newservicecommand", "Property[description]"]
    - ["system.string", "microsoft.powershell.commands.importmodulecommand", "Property[maximumversion]"]
    - ["system.string", "microsoft.powershell.commands.computerinfo", "Property[osregistereduser]"]
    - ["system.string", "microsoft.powershell.commands.webresponseobject", "Method[tostring].ReturnValue"]
    - ["system.security.accesscontrol.objectsecurity", "microsoft.powershell.commands.filesystemprovider", "Method[newsecuritydescriptoroftype].ReturnValue"]
    - ["system.string", "microsoft.powershell.commands.certificateprovider", "Method[getchildname].ReturnValue"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.psremotingbasecmdlet", "Property[allowredirection]"]
    - ["system.string", "microsoft.powershell.commands.computerinfo", "Property[osarchitecture]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.wmibasecmdlet", "Property[enableallprivileges]"]
    - ["microsoft.powershell.executionpolicyscope", "microsoft.powershell.commands.setexecutionpolicycommand", "Property[scope]"]
    - ["microsoft.powershell.commands.serverlevel", "microsoft.powershell.commands.serverlevel!", "Field[unknown]"]
    - ["system.string", "microsoft.powershell.commands.bytecollection", "Property[hexoffset]"]
    - ["system.object[]", "microsoft.powershell.commands.getcommandcommand", "Property[argumentlist]"]
    - ["system.object", "microsoft.powershell.commands.certificateprovider", "Method[getchilditemsdynamicparameters].ReturnValue"]
    - ["system.management.automation.signature", "microsoft.powershell.commands.signaturecommandsbase", "Property[signature]"]
    - ["system.string", "microsoft.powershell.commands.computerinfo", "Property[osstatus]"]
    - ["system.object", "microsoft.powershell.commands.newpsrolecapabilityfilecommand", "Property[variabledefinitions]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.selectstringcommand", "Property[notmatch]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.setservicecommand", "Property[force]"]
    - ["microsoft.powershell.commands.deviceguardhardwaresecure", "microsoft.powershell.commands.deviceguardhardwaresecure!", "Field[smmsecuritymitigations]"]
    - ["system.object[]", "microsoft.powershell.commands.newmodulemanifestcommand", "Property[requiredmodules]"]
    - ["system.diagnostics.process", "microsoft.powershell.commands.enterpshostprocesscommand", "Property[process]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.importaliascommand", "Property[force]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.newpssessionoptioncommand", "Property[skiprevocationcheck]"]
    - ["microsoft.powershell.commands.webrequestmethod", "microsoft.powershell.commands.invokerestmethodcommand", "Property[method]"]
    - ["microsoft.powershell.commands.ostype", "microsoft.powershell.commands.ostype!", "Field[xenix]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.startjobcommand", "Property[runas32]"]
    - ["microsoft.powershell.commands.pcsystemtypeex", "microsoft.powershell.commands.pcsystemtypeex!", "Field[sohoserver]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.setclipboardcommand", "Property[passthru]"]
    - ["system.guid", "microsoft.powershell.commands.receivepssessioncommand", "Property[instanceid]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.enablepssessionconfigurationcommand", "Property[noservicerestart]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.whereobjectcommand", "Property[ceq]"]
    - ["microsoft.powershell.commands.webcmdletelementcollection", "microsoft.powershell.commands.htmlwebresponseobject", "Property[inputfields]"]
    - ["system.management.automation.psmembertypes", "microsoft.powershell.commands.addmembercommand", "Property[membertype]"]
    - ["system.management.automation.scopeditemoptions", "microsoft.powershell.commands.functionproviderdynamicparameters", "Property[options]"]
    - ["system.management.automation.provider.icontentwriter", "microsoft.powershell.commands.sessionstateproviderbase", "Method[getcontentwriter].ReturnValue"]
    - ["system.object", "microsoft.powershell.commands.sessionstateproviderbase", "Method[getcontentreaderdynamicparameters].ReturnValue"]
    - ["system.string[]", "microsoft.powershell.commands.newitempropertycommand", "Property[literalpath]"]
    - ["microsoft.powershell.commands.resetcapability", "microsoft.powershell.commands.resetcapability!", "Field[disabled]"]
    - ["system.security.principal.securityidentifier", "microsoft.powershell.commands.securitydescriptorcommandsbase!", "Method[getcentralaccesspolicyid].ReturnValue"]
    - ["system.int64", "microsoft.powershell.commands.formathex", "Property[count]"]
    - ["system.byte[]", "microsoft.powershell.commands.convertfromtosecurestringcommandbase", "Property[key]"]
    - ["system.string", "microsoft.powershell.commands.startjobcommand", "Property[literalpath]"]
    - ["microsoft.powershell.commands.cpuavailability", "microsoft.powershell.commands.cpuavailability!", "Field[offduty]"]
    - ["system.collections.hashtable", "microsoft.powershell.commands.invokecommandcommand", "Property[options]"]
    - ["system.string", "microsoft.powershell.commands.processor", "Property[name]"]
    - ["system.nullable<system.uint32>", "microsoft.powershell.commands.processor", "Property[numberoflogicalprocessors]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.setauthenticodesignaturecommand", "Property[force]"]
    - ["system.string", "microsoft.powershell.commands.controlpanelitem", "Property[canonicalname]"]
    - ["microsoft.powershell.commands.operatingsystemsku", "microsoft.powershell.commands.operatingsystemsku!", "Field[ultimateedition]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.stopservicecommand", "Property[nowait]"]
    - ["microsoft.powershell.commands.netconnectionstatus", "microsoft.powershell.commands.netconnectionstatus!", "Field[other]"]
    - ["system.string", "microsoft.powershell.commands.gethelpcommand", "Property[parameter]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.passthroughitempropertycommandbase", "Property[passthru]"]
    - ["system.string[]", "microsoft.powershell.commands.newpsrolecapabilityfilecommand", "Property[assembliestoload]"]
    - ["microsoft.powershell.commands.language", "microsoft.powershell.commands.language!", "Field[jscript]"]
    - ["system.int32", "microsoft.powershell.commands.converttoxmlcommand", "Property[depth]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.whereobjectcommand", "Property[match]"]
    - ["system.management.automation.pscredential", "microsoft.powershell.commands.addcomputercommand", "Property[credential]"]
    - ["system.int32[]", "microsoft.powershell.commands.stopprocesscommand", "Property[id]"]
    - ["system.string[]", "microsoft.powershell.commands.disconnectpssessioncommand", "Property[containerid]"]
    - ["system.int32", "microsoft.powershell.commands.converttojsoncommand", "Property[depth]"]
    - ["system.string[]", "microsoft.powershell.commands.convertfromcsvcommand", "Property[header]"]
    - ["system.string", "microsoft.powershell.commands.psworkflowexecutionoption", "Method[constructprivatedata].ReturnValue"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.removepssnapincommand", "Property[passthru]"]
    - ["microsoft.powershell.commands.osencryptionlevel", "microsoft.powershell.commands.osencryptionlevel!", "Field[encrypt40bits]"]
    - ["system.int32", "microsoft.powershell.commands.startjobcommand", "Property[port]"]
    - ["system.string", "microsoft.powershell.commands.importworkflowcommand!", "Method[createfunctionfromxaml].ReturnValue"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.whereobjectcommand", "Property[ccontains]"]
    - ["system.management.impersonationlevel", "microsoft.powershell.commands.stopcomputercommand", "Property[impersonation]"]
    - ["system.string", "microsoft.powershell.commands.computerinfo", "Property[windowsinstallationtype]"]
    - ["system.boolean", "microsoft.powershell.commands.sessionstateproviderbase", "Method[haschilditems].ReturnValue"]
    - ["microsoft.powershell.commands.osproductsuite", "microsoft.powershell.commands.osproductsuite!", "Field[windowsembedded]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.newitempropertycommand", "Property[force]"]
    - ["microsoft.powershell.commands.powerplatformrole", "microsoft.powershell.commands.powerplatformrole!", "Field[performanceserver]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.outfilecommand", "Property[append]"]
    - ["system.string[]", "microsoft.powershell.commands.invokecommandcommand", "Property[sessionname]"]
    - ["system.string[]", "microsoft.powershell.commands.setclipboardcommand", "Property[literalpath]"]
    - ["system.string", "microsoft.powershell.commands.computerinfo", "Property[ossystemdrive]"]
    - ["system.string", "microsoft.powershell.commands.computerinfo", "Property[cschassisskunumber]"]
    - ["system.string", "microsoft.powershell.commands.getmodulecommand", "Property[cimnamespace]"]
    - ["microsoft.powershell.commands.pcsystemtypeex", "microsoft.powershell.commands.pcsystemtypeex!", "Field[appliancepc]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.splitpathcommand", "Property[leafbase]"]
    - ["system.string[]", "microsoft.powershell.commands.importworkflowcommand", "Property[path]"]
    - ["system.management.automation.psobject[]", "microsoft.powershell.commands.compareobjectcommand", "Property[differenceobject]"]
    - ["microsoft.powershell.commands.outputmodeoption", "microsoft.powershell.commands.outgridviewcommand", "Property[outputmode]"]
    - ["system.string", "microsoft.powershell.commands.newmodulemanifestcommand", "Property[copyright]"]
    - ["system.string[]", "microsoft.powershell.commands.newpssessionconfigurationfilecommand", "Property[runasvirtualaccountgroups]"]
    - ["system.uint32", "microsoft.powershell.commands.bytecollection", "Property[offset]"]
    - ["microsoft.powershell.commands.operatingsystemsku", "microsoft.powershell.commands.operatingsystemsku!", "Field[storageexpressserveredition]"]
    - ["system.int32", "microsoft.powershell.commands.selectobjectcommand", "Property[last]"]
    - ["system.string", "microsoft.powershell.commands.hotfix", "Property[fixcomments]"]
    - ["system.management.automation.runspaces.pssession[]", "microsoft.powershell.commands.startjobcommand", "Property[session]"]
    - ["system.string", "microsoft.powershell.commands.filesystemprovider!", "Method[lengthstring].ReturnValue"]
    - ["microsoft.powershell.commands.filesystemcmdletproviderencoding", "microsoft.powershell.commands.filesystemcmdletproviderencoding!", "Field[bigendianutf32]"]
    - ["microsoft.powershell.commands.bootoptionaction", "microsoft.powershell.commands.bootoptionaction!", "Field[operatingsystem]"]
    - ["microsoft.powershell.commands.operatingsystemsku", "microsoft.powershell.commands.operatingsystemsku!", "Field[windowsprofessionalwithmediacenter]"]
    - ["system.management.automation.scriptblock", "microsoft.powershell.commands.tracecommandcommand", "Property[expression]"]
    - ["system.string", "microsoft.powershell.commands.computerinfo", "Property[bioscodeset]"]
    - ["system.string[]", "microsoft.powershell.commands.addtypecommandbase", "Property[path]"]
    - ["system.string", "microsoft.powershell.commands.exportformatdatacommand", "Property[literalpath]"]
    - ["system.nullable<system.boolean>", "microsoft.powershell.commands.computerinfo", "Property[csenabledaylightsavingstime]"]
    - ["system.string", "microsoft.powershell.commands.webrequestpscmdlet", "Property[infile]"]
    - ["microsoft.powershell.commands.operatingsystemsku", "microsoft.powershell.commands.operatingsystemsku!", "Field[windowshome]"]
    - ["system.string[]", "microsoft.powershell.commands.joinpathcommand", "Property[additionalchildpath]"]
    - ["system.string", "microsoft.powershell.commands.psremotingbasecmdlet", "Property[subsystem]"]
    - ["microsoft.powershell.commands.ostype", "microsoft.powershell.commands.ostype!", "Field[openvms]"]
    - ["system.management.automation.runspaces.outputbufferingmode", "microsoft.powershell.commands.disconnectpssessioncommand", "Property[outputbufferingmode]"]
    - ["microsoft.powershell.commands.webcmdletelementcollection", "microsoft.powershell.commands.basichtmlwebresponseobject", "Property[inputfields]"]
    - ["system.boolean", "microsoft.powershell.commands.corecommandbase", "Property[supportsshouldprocess]"]
    - ["system.string[]", "microsoft.powershell.commands.getchilditemcommand", "Property[exclude]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.importmodulecommand", "Property[global]"]
    - ["system.string", "microsoft.powershell.commands.computerinfo", "Property[cssystemskunumber]"]
    - ["system.management.automation.breakpoint[]", "microsoft.powershell.commands.psbreakpointupdatercommandbase", "Property[breakpoint]"]
    - ["system.collections.idictionary", "microsoft.powershell.commands.newpssessionconfigurationfilecommand", "Property[roledefinitions]"]
    - ["system.string[]", "microsoft.powershell.commands.exportmodulemembercommand", "Property[alias]"]
    - ["microsoft.powershell.commands.osproductsuite", "microsoft.powershell.commands.osproductsuite!", "Field[server2008enterprise]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.exportclixmlcommand", "Property[force]"]
    - ["microsoft.powershell.commands.ostype", "microsoft.powershell.commands.ostype!", "Field[os2]"]
    - ["system.version", "microsoft.powershell.commands.pssessionconfigurationcommandbase", "Property[psversion]"]
    - ["microsoft.powershell.commands.osproductsuite[]", "microsoft.powershell.commands.computerinfo", "Property[ossuites]"]
    - ["microsoft.powershell.commands.ostype", "microsoft.powershell.commands.ostype!", "Field[netware]"]
    - ["system.management.automation.runspaces.authenticationmechanism", "microsoft.powershell.commands.psremotingbasecmdlet", "Property[authentication]"]
    - ["system.nullable<system.uint32>", "microsoft.powershell.commands.processor", "Property[maxclockspeed]"]
    - ["system.string[]", "microsoft.powershell.commands.psrunspacecmdlet", "Property[computername]"]
    - ["system.nullable<system.double>", "microsoft.powershell.commands.pssessionconfigurationcommandbase", "Property[maximumreceivedobjectsizemb]"]
    - ["system.management.automation.psobject", "microsoft.powershell.commands.selectstringcommand", "Property[inputobject]"]
    - ["microsoft.powershell.commands.cpuarchitecture", "microsoft.powershell.commands.cpuarchitecture!", "Field[arm]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.copyitemcommand", "Property[force]"]
    - ["microsoft.powershell.commands.systemelementstate", "microsoft.powershell.commands.systemelementstate!", "Field[other]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.testconnectioncommand", "Property[ping]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.gethelpcommand", "Property[detailed]"]
    - ["system.string[]", "microsoft.powershell.commands.getitempropertycommand", "Property[literalpath]"]
    - ["system.nullable<microsoft.powershell.commands.hardwaresecurity>", "microsoft.powershell.commands.computerinfo", "Property[cspoweronpasswordstatus]"]
    - ["system.version", "microsoft.powershell.commands.startjobcommand", "Property[psversion]"]
    - ["system.management.automation.pscredential", "microsoft.powershell.commands.resetcomputermachinepasswordcommand", "Property[credential]"]
    - ["system.nullable<system.management.automation.runspaces.outputbufferingmode>", "microsoft.powershell.commands.wsmanconfigurationoption", "Property[outputbufferingmode]"]
    - ["system.boolean", "microsoft.powershell.commands.registryprovider", "Method[haschilditems].ReturnValue"]
    - ["system.string", "microsoft.powershell.commands.enterpshostprocesscommand", "Property[appdomainname]"]
    - ["microsoft.powershell.commands.ostype", "microsoft.powershell.commands.ostype!", "Field[sequent]"]
    - ["system.management.automation.extendedtypedefinition[]", "microsoft.powershell.commands.exportformatdatacommand", "Property[inputobject]"]
    - ["system.string[]", "microsoft.powershell.commands.getexperimentalfeaturecommand", "Property[name]"]
    - ["system.security.cryptography.x509certificates.x509certificate2", "microsoft.powershell.commands.implicitremotingcommandbase", "Property[certificate]"]
    - ["system.management.automation.psobject", "microsoft.powershell.commands.updatelistcommand", "Property[inputobject]"]
    - ["system.string[]", "microsoft.powershell.commands.getverbcommand", "Property[group]"]
    - ["system.management.automation.psobject", "microsoft.powershell.commands.protectcmsmessagecommand", "Property[content]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.getcountercommand", "Property[continuous]"]
    - ["system.object", "microsoft.powershell.commands.addmembercommand", "Property[value]"]
    - ["microsoft.powershell.executionpolicy", "microsoft.powershell.commands.setexecutionpolicycommand", "Property[executionpolicy]"]
    - ["system.collections.hashtable", "microsoft.powershell.commands.startprocesscommand", "Property[environment]"]
    - ["system.management.automation.scriptblock", "microsoft.powershell.commands.psbreakpointcreationbase", "Property[action]"]
    - ["system.string", "microsoft.powershell.commands.selectstringcommand", "Property[encoding]"]
    - ["system.string", "microsoft.powershell.commands.setauthenticodesignaturecommand", "Property[hashalgorithm]"]
    - ["system.string[]", "microsoft.powershell.commands.settracesourcecommand", "Property[removelistener]"]
    - ["system.byte[]", "microsoft.powershell.commands.signaturecommandsbase", "Property[content]"]
    - ["microsoft.powershell.commands.ostype", "microsoft.powershell.commands.ostype!", "Field[beos]"]
    - ["system.string[]", "microsoft.powershell.commands.settracesourcecommand", "Property[name]"]
    - ["system.object", "microsoft.powershell.commands.registerengineeventcommand", "Method[getsourceobject].ReturnValue"]
    - ["microsoft.powershell.commands.convertfromsddlstringcommand+accessrighttypenames", "microsoft.powershell.commands.convertfromsddlstringcommand", "Property[type]"]
    - ["microsoft.powershell.commands.filesystemcmdletproviderencoding", "microsoft.powershell.commands.filesystemcmdletproviderencoding!", "Field[default]"]
    - ["system.security.cryptography.x509certificates.storelocation", "microsoft.powershell.commands.x509storelocation", "Property[location]"]
    - ["system.management.automation.psobject", "microsoft.powershell.commands.setaclcommand", "Property[inputobject]"]
    - ["system.management.automation.runspaces.authenticationmechanism", "microsoft.powershell.commands.getpssessioncommand", "Property[authentication]"]
    - ["microsoft.powershell.commands.sessionfilterstate", "microsoft.powershell.commands.sessionfilterstate!", "Field[closed]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.clearvariablecommand", "Property[passthru]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.getservicecommand", "Property[requiredservices]"]
    - ["system.int32", "microsoft.powershell.commands.getdatecommand", "Property[hour]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.showmarkdowncommand", "Property[usebrowser]"]
    - ["microsoft.powershell.commands.domainrole", "microsoft.powershell.commands.domainrole!", "Field[primarydomaincontroller]"]
    - ["microsoft.powershell.commands.joinoptions", "microsoft.powershell.commands.joinoptions!", "Field[joinreadonly]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.waitprocesscommand", "Property[any]"]
    - ["system.management.automation.runspaces.runspace", "microsoft.powershell.commands.psbreakpointupdatercommandbase", "Property[runspace]"]
    - ["system.management.automation.jobstate", "microsoft.powershell.commands.jobcmdletbase", "Property[state]"]
    - ["system.string", "microsoft.powershell.commands.getcredentialcommand", "Property[message]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.basecsvwritingcommand", "Property[noheader]"]
    - ["system.string", "microsoft.powershell.commands.tracecommandcommand", "Property[filepath]"]
    - ["system.management.automation.scopeditemoptions", "microsoft.powershell.commands.aliasproviderdynamicparameters", "Property[options]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.settracesourcecommand", "Property[pshost]"]
    - ["system.management.automation.psobject", "microsoft.powershell.commands.unprotectcmsmessagecommand", "Property[eventlogrecord]"]
    - ["system.int32", "microsoft.powershell.commands.writeprogresscommand", "Property[secondsremaining]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.receivejobcommand", "Property[writejobinresults]"]
    - ["system.management.automation.psobject", "microsoft.powershell.commands.objecteventregistrationbase", "Property[messagedata]"]
    - ["system.object", "microsoft.powershell.commands.outlineoutputcommand", "Property[lineoutput]"]
    - ["system.management.automation.signature", "microsoft.powershell.commands.signaturecommandsbase", "Method[performaction].ReturnValue"]
    - ["system.string", "microsoft.powershell.commands.computerinfo", "Property[csbootupstate]"]
    - ["system.serviceprocess.servicecontroller", "microsoft.powershell.commands.setservicecommand", "Property[inputobject]"]
    - ["system.management.automation.providerinfo", "microsoft.powershell.commands.filesystemprovider", "Method[start].ReturnValue"]
    - ["system.int32", "microsoft.powershell.commands.startsleepcommand", "Property[milliseconds]"]
    - ["system.string", "microsoft.powershell.commands.enterpssessioncommand", "Property[name]"]
    - ["system.string", "microsoft.powershell.commands.computerinfo", "Property[biosidentificationcode]"]
    - ["system.string", "microsoft.powershell.commands.writealiascommandbase", "Property[value]"]
    - ["system.string[]", "microsoft.powershell.commands.getpsbreakpointcommand", "Property[script]"]
    - ["system.string[]", "microsoft.powershell.commands.getpsprovidercommand", "Property[psprovider]"]
    - ["microsoft.powershell.commands.breakpointtype", "microsoft.powershell.commands.breakpointtype!", "Field[variable]"]
    - ["system.string", "microsoft.powershell.commands.objecteventregistrationbase", "Property[sourceidentifier]"]
    - ["system.string[]", "microsoft.powershell.commands.setclipboardcommand", "Property[value]"]
    - ["system.nullable<system.datetime>", "microsoft.powershell.commands.computerinfo", "Property[oslastbootuptime]"]
    - ["system.int32", "microsoft.powershell.commands.newtimespancommand", "Property[days]"]
    - ["system.string", "microsoft.powershell.commands.webrequestpscmdlet", "Property[certificatethumbprint]"]
    - ["system.string", "microsoft.powershell.commands.geteventlogcommand", "Property[logname]"]
    - ["system.string", "microsoft.powershell.commands.computerinfo", "Property[cssystemtype]"]
    - ["system.string[]", "microsoft.powershell.commands.testfilecatalogcommand", "Property[filestoskip]"]
    - ["system.string", "microsoft.powershell.commands.unregistereventcommand", "Property[sourceidentifier]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.splitpathcommand", "Property[parent]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.unprotectcmsmessagecommand", "Property[includecontext]"]
    - ["system.string", "microsoft.powershell.commands.updatedata!", "Field[fileparameterset]"]
    - ["system.management.automation.pscredential", "microsoft.powershell.commands.wmibasecmdlet", "Property[credential]"]
    - ["system.int32", "microsoft.powershell.commands.startsleepcommand", "Property[seconds]"]
    - ["system.management.authenticationlevel", "microsoft.powershell.commands.testconnectioncommand", "Property[dcomauthentication]"]
    - ["system.management.automation.runspaces.pssession[]", "microsoft.powershell.commands.invokecommandcommand", "Property[session]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.getlocationcommand", "Property[stack]"]
    - ["system.int32", "microsoft.powershell.commands.getdatecommand", "Property[month]"]
    - ["system.nullable<system.int64>", "microsoft.powershell.commands.computerinfo", "Property[cspauseafterreset]"]
    - ["system.management.automation.job[]", "microsoft.powershell.commands.receivejobcommand", "Property[job]"]
    - ["system.string", "microsoft.powershell.commands.dnsnamerepresentation", "Property[punycode]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.testconnectioncommand", "Field[detailed]"]
    - ["system.nullable<system.uint64>", "microsoft.powershell.commands.computerinfo", "Property[ossizestoredinpagingfiles]"]
    - ["microsoft.powershell.commands.displayhinttype", "microsoft.powershell.commands.displayhinttype!", "Field[time]"]
    - ["system.uri[]", "microsoft.powershell.commands.connectpssessioncommand", "Property[connectionuri]"]
    - ["system.uint64", "microsoft.powershell.commands.bytecollection", "Property[offset64]"]
    - ["microsoft.powershell.commands.operatingsystemsku", "microsoft.powershell.commands.operatingsystemsku!", "Field[datacenterservercoreedition]"]
    - ["system.int32", "microsoft.powershell.commands.formatcustomcommand", "Property[depth]"]
    - ["system.string[]", "microsoft.powershell.commands.clearitemcommand", "Property[literalpath]"]
    - ["system.management.automation.sessionstateentryvisibility", "microsoft.powershell.commands.setvariablecommand", "Property[visibility]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.unregisterpssessionconfigurationcommand", "Property[force]"]
    - ["system.int32", "microsoft.powershell.commands.getdatecommand", "Property[day]"]
    - ["system.int32", "microsoft.powershell.commands.newpsworkflowexecutionoptioncommand", "Property[workflowshutdowntimeoutmsec]"]
    - ["system.string[]", "microsoft.powershell.commands.getcommandcommand", "Property[noun]"]
    - ["system.string", "microsoft.powershell.commands.receivepssessioncommand", "Property[applicationname]"]
    - ["system.string[]", "microsoft.powershell.commands.selectstringcommand", "Property[literalpath]"]
    - ["system.string[]", "microsoft.powershell.commands.addtypecommand", "Property[referencedassemblies]"]
    - ["microsoft.powershell.commands.osproductsuite", "microsoft.powershell.commands.osproductsuite!", "Field[homeedition]"]
    - ["system.security.securestring", "microsoft.powershell.commands.securestringcommandbase", "Property[securestringdata]"]
    - ["microsoft.powershell.commands.operatingsystemsku", "microsoft.powershell.commands.operatingsystemsku!", "Field[microsofthypervserver]"]
    - ["microsoft.powershell.commands.ostype", "microsoft.powershell.commands.ostype!", "Field[solaris]"]
    - ["system.int32", "microsoft.powershell.commands.psrunspacedebug", "Property[runspaceid]"]
    - ["microsoft.powershell.commands.powerplatformrole", "microsoft.powershell.commands.powerplatformrole!", "Field[desktop]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.removepsdrivecommand", "Property[force]"]
    - ["system.string[]", "microsoft.powershell.commands.psremotingbasecmdlet", "Property[hostname]"]
    - ["system.boolean", "microsoft.powershell.commands.settimezonecommand", "Property[hasaccess]"]
    - ["system.boolean", "microsoft.powershell.commands.setitemcommand", "Property[providersupportsshouldprocess]"]
    - ["microsoft.powershell.commands.ostype", "microsoft.powershell.commands.ostype!", "Field[rhapsody]"]
    - ["system.string", "microsoft.powershell.commands.importlocalizeddata", "Property[uiculture]"]
    - ["microsoft.powershell.commands.operatingsystemsku", "microsoft.powershell.commands.operatingsystemsku!", "Field[windowsserverenterprisenohypervcore]"]
    - ["system.string", "microsoft.powershell.commands.internalsymboliclinklinkcodemethods!", "Method[getlinktype].ReturnValue"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.updatetypedatacommand", "Property[force]"]
    - ["system.string", "microsoft.powershell.commands.commonrunspacecommandbase!", "Field[runspacenameparameterset]"]
    - ["system.string", "microsoft.powershell.commands.newpssessioncommand", "Property[configurationname]"]
    - ["system.management.automation.breakpoint[]", "microsoft.powershell.commands.psbreakpointcommandbase", "Property[breakpoint]"]
    - ["system.string", "microsoft.powershell.commands.computerinfo", "Property[osothertypedescription]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.outstringcommand", "Property[stream]"]
    - ["system.int64", "microsoft.powershell.commands.psworkflowexecutionoption", "Property[maxpersistencestoresizegb]"]
    - ["system.string", "microsoft.powershell.commands.pssessionconfigurationcommandbase", "Property[name]"]
    - ["microsoft.powershell.commands.wmistate", "microsoft.powershell.commands.wmistate!", "Field[stopping]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.newobjectcommand", "Property[strict]"]
    - ["system.management.automation.debugger", "microsoft.powershell.commands.commonrunspacecommandbase", "Method[getdebuggerfromrunspace].ReturnValue"]
    - ["system.string", "microsoft.powershell.commands.connectpssessioncommand", "Property[certificatethumbprint]"]
    - ["system.management.automation.pscredential", "microsoft.powershell.commands.gethotfixcommand", "Property[credential]"]
    - ["system.string[]", "microsoft.powershell.commands.psbreakpointcreationbase", "Property[variable]"]
    - ["microsoft.powershell.commands.breakpointtype", "microsoft.powershell.commands.breakpointtype!", "Field[line]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.updatablehelpcommandbase", "Property[usedefaultcredentials]"]
    - ["system.string[]", "microsoft.powershell.commands.removecomputercommand", "Property[computername]"]
    - ["system.management.automation.sessionstateentryvisibility", "microsoft.powershell.commands.newvariablecommand", "Property[visibility]"]
    - ["system.nullable<microsoft.powershell.commands.wakeuptype>", "microsoft.powershell.commands.computerinfo", "Property[cswakeuptype]"]
    - ["microsoft.powershell.commands.cpuavailability", "microsoft.powershell.commands.cpuavailability!", "Field[notapplicable]"]
    - ["system.int32", "microsoft.powershell.commands.geteventlogcommand", "Property[newest]"]
    - ["system.char", "microsoft.powershell.commands.convertfromstringdatacommand", "Property[delimiter]"]
    - ["system.nullable<system.boolean>", "microsoft.powershell.commands.computerinfo", "Property[hypervrequirementdataexecutionpreventionavailable]"]
    - ["system.nullable<system.uint64>", "microsoft.powershell.commands.computerinfo", "Property[osinusevirtualmemory]"]
    - ["system.object", "microsoft.powershell.commands.filesystemprovider", "Method[clearpropertydynamicparameters].ReturnValue"]
    - ["system.collections.hashtable[]", "microsoft.powershell.commands.startjobcommand", "Property[sshconnection]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.setitemcommand", "Property[passthru]"]
    - ["system.string[]", "microsoft.powershell.commands.waitprocesscommand", "Property[name]"]
    - ["microsoft.powershell.commands.operatingsystemsku", "microsoft.powershell.commands.operatingsystemsku!", "Field[clusterserveredition]"]
    - ["system.string[]", "microsoft.powershell.commands.gethelpcommand", "Property[category]"]
    - ["system.management.automation.pslanguagemode", "microsoft.powershell.commands.newpssessionconfigurationfilecommand", "Property[languagemode]"]
    - ["system.string[]", "microsoft.powershell.commands.testpathcommand", "Property[literalpath]"]
    - ["system.management.automation.remoting.pssessionoption", "microsoft.powershell.commands.connectpssessioncommand", "Property[sessionoption]"]
    - ["system.string", "microsoft.powershell.commands.registerpssessionconfigurationcommand", "Property[processorarchitecture]"]
    - ["system.string[]", "microsoft.powershell.commands.invokeitemcommand", "Property[path]"]
    - ["microsoft.powershell.commands.netconnectionstatus", "microsoft.powershell.commands.netconnectionstatus!", "Field[disconnecting]"]
    - ["system.string[]", "microsoft.powershell.commands.getwineventcommand", "Property[providername]"]
    - ["system.boolean", "microsoft.powershell.commands.filesystemprovider", "Method[convertpath].ReturnValue"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.testconnectioncommand", "Property[ipv4]"]
    - ["system.string", "microsoft.powershell.commands.historyinfo", "Method[tostring].ReturnValue"]
    - ["system.int32", "microsoft.powershell.commands.sortobjectcommand", "Property[bottom]"]
    - ["system.nullable<system.datetime>", "microsoft.powershell.commands.computerinfo", "Property[biosinstalldate]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.webrequestpscmdlet", "Property[skipheadervalidation]"]
    - ["microsoft.powershell.commands.filesystemcmdletproviderencoding", "microsoft.powershell.commands.filesystemcmdletproviderencoding!", "Field[utf7]"]
    - ["system.nullable<system.double>", "microsoft.powershell.commands.genericmeasureinfo", "Property[sum]"]
    - ["system.string", "microsoft.powershell.commands.psremotingcmdlet!", "Field[usewindowspowershellparameterset]"]
    - ["system.string", "microsoft.powershell.commands.renameitempropertycommand", "Property[literalpath]"]
    - ["system.string[]", "microsoft.powershell.commands.copyitemcommand", "Property[path]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.removeitemcommand", "Property[recurse]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.outstringcommand", "Property[nonewline]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.splitpathcommand", "Property[resolve]"]
    - ["system.int32", "microsoft.powershell.commands.psremotingbasecmdlet", "Property[throttlelimit]"]
    - ["system.string[]", "microsoft.powershell.commands.newpssessioncommand", "Property[name]"]
    - ["system.string[]", "microsoft.powershell.commands.updatehelpcommand", "Property[module]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.whereobjectcommand", "Property[like]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.newpssessionoptioncommand", "Property[includeportinspn]"]
    - ["system.int32", "microsoft.powershell.commands.restartcomputertimeoutexception", "Property[timeout]"]
    - ["system.object", "microsoft.powershell.commands.filesystemprovider", "Method[getchildnamesdynamicparameters].ReturnValue"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.showcommandcommand", "Property[passthru]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.filesystemcontentreaderdynamicparameters", "Property[wait]"]
    - ["microsoft.powershell.commands.hardwaresecurity", "microsoft.powershell.commands.hardwaresecurity!", "Field[notimplemented]"]
    - ["system.security.accesscontrol.authorizationrulecollection", "microsoft.powershell.commands.securitydescriptorcommandsbase!", "Method[getaudit].ReturnValue"]
    - ["system.string", "microsoft.powershell.commands.setmarkdownoptioncommand", "Property[header6color]"]
    - ["system.timespan", "microsoft.powershell.commands.setdatecommand", "Property[adjust]"]
    - ["system.string", "microsoft.powershell.commands.exportaliascommand", "Property[scope]"]
    - ["system.version", "microsoft.powershell.commands.modulespecification", "Property[version]"]
    - ["system.string", "microsoft.powershell.commands.pspropertyexpression", "Method[tostring].ReturnValue"]
    - ["microsoft.powershell.commands.filesystemcmdletproviderencoding", "microsoft.powershell.commands.filesystemcmdletproviderencoding!", "Field[bigendianunicode]"]
    - ["system.type", "microsoft.powershell.commands.updatetypedatacommand", "Property[targettypefordeserialization]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.webrequestpscmdlet", "Property[allowinsecureredirect]"]
    - ["system.string", "microsoft.powershell.commands.webrequestpscmdlet", "Property[sessionvariable]"]
    - ["system.string[]", "microsoft.powershell.commands.newpssessionconfigurationfilecommand", "Property[visibleproviders]"]
    - ["system.management.automation.variableaccessmode", "microsoft.powershell.commands.psbreakpointcreationbase", "Property[mode]"]
    - ["microsoft.powershell.commands.osproductsuite", "microsoft.powershell.commands.osproductsuite!", "Field[webserveredition]"]
    - ["system.string", "microsoft.powershell.commands.newservicecommand", "Property[name]"]
    - ["microsoft.powershell.commands.operatingsystemsku", "microsoft.powershell.commands.operatingsystemsku!", "Field[storageserverworkgroupcore]"]
    - ["microsoft.powershell.commands.cpuarchitecture", "microsoft.powershell.commands.cpuarchitecture!", "Field[x64]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.receivejobcommand", "Property[keep]"]
    - ["system.string[]", "microsoft.powershell.commands.getlocationcommand", "Property[stackname]"]
    - ["system.int32", "microsoft.powershell.commands.newpsworkflowexecutionoptioncommand", "Property[maxrunningworkflows]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.getcommandcommand", "Property[listimported]"]
    - ["system.string", "microsoft.powershell.commands.setmarkdownoptioncommand", "Property[code]"]
    - ["system.string", "microsoft.powershell.commands.renameitempropertycommand", "Property[newname]"]
    - ["system.string", "microsoft.powershell.commands.processor", "Property[status]"]
    - ["system.string", "microsoft.powershell.commands.psremotingcmdlet!", "Field[defaultpowershellremoteshellname]"]
    - ["system.string", "microsoft.powershell.commands.computerinfo", "Property[oshardwareabstractionlayer]"]
    - ["system.string", "microsoft.powershell.commands.newpsdrivecommand", "Property[root]"]
    - ["system.diagnostics.traceoptions", "microsoft.powershell.commands.tracecommandcommand", "Property[listeneroption]"]
    - ["system.management.automation.scriptblock[]", "microsoft.powershell.commands.foreachobjectcommand", "Property[remainingscripts]"]
    - ["system.net.http.httpresponsemessage", "microsoft.powershell.commands.httpresponseexception", "Property[response]"]
    - ["system.int32", "microsoft.powershell.commands.invokecommandcommand", "Property[connectingtimeout]"]
    - ["microsoft.powershell.commands.netconnectionstatus", "microsoft.powershell.commands.netconnectionstatus!", "Field[credentialsrequired]"]
    - ["system.string[]", "microsoft.powershell.commands.importmodulecommand", "Property[cmdlet]"]
    - ["system.object", "microsoft.powershell.commands.filesystemprovider", "Method[copyitemdynamicparameters].ReturnValue"]
    - ["microsoft.powershell.commands.systemelementstate", "microsoft.powershell.commands.systemelementstate!", "Field[critical]"]
    - ["microsoft.powershell.commands.osproductsuite", "microsoft.powershell.commands.osproductsuite!", "Field[terminalservicessinglesession]"]
    - ["system.management.automation.pssessiontypeoption", "microsoft.powershell.commands.psworkflowexecutionoption", "Method[constructobjectfromprivatedata].ReturnValue"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.stopservicecommand", "Property[force]"]
    - ["system.management.automation.psmembertypes", "microsoft.powershell.commands.updatetypedatacommand", "Property[membertype]"]
    - ["microsoft.powershell.commands.pcsystemtype", "microsoft.powershell.commands.pcsystemtype!", "Field[enterpriseserver]"]
    - ["system.int32", "microsoft.powershell.commands.getrandomcommandbase", "Property[count]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.setpsdebugcommand", "Property[off]"]
    - ["system.string", "microsoft.powershell.commands.writewarningcommand", "Property[message]"]
    - ["system.string", "microsoft.powershell.commands.newmodulemanifestcommand", "Property[description]"]
    - ["system.object", "microsoft.powershell.commands.registryprovider", "Method[setitemdynamicparameters].ReturnValue"]
    - ["system.nullable<system.boolean>", "microsoft.powershell.commands.computerinfo", "Property[osprimary]"]
    - ["system.string", "microsoft.powershell.commands.computerinfo", "Property[ossystemdevice]"]
    - ["system.string[]", "microsoft.powershell.commands.getaliascommand", "Property[name]"]
    - ["microsoft.powershell.commands.webrequestmethod", "microsoft.powershell.commands.webrequestmethod!", "Field[patch]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.addhistorycommand", "Property[passthru]"]
    - ["system.string[]", "microsoft.powershell.commands.getwineventcommand", "Property[logname]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.removecomputercommand", "Property[restart]"]
    - ["system.nullable<system.int32>", "microsoft.powershell.commands.newpstransportoptioncommand", "Property[maxmemorypersessionmb]"]
    - ["microsoft.powershell.commands.webrequestmethod", "microsoft.powershell.commands.webrequestmethod!", "Field[head]"]
    - ["system.management.automation.remoting.pssessionoption", "microsoft.powershell.commands.receivepssessioncommand", "Property[sessionoption]"]
    - ["system.collections.objectmodel.collection<system.management.automation.psdriveinfo>", "microsoft.powershell.commands.registryprovider", "Method[initializedefaultdrives].ReturnValue"]
    - ["system.string", "microsoft.powershell.commands.writeorthrowerrorcommand", "Property[categoryreason]"]
    - ["microsoft.powershell.commands.ostype", "microsoft.powershell.commands.ostype!", "Field[u6000]"]
    - ["system.string", "microsoft.powershell.commands.removepsdrivecommand", "Property[scope]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.geteventlogcommand", "Property[asstring]"]
    - ["system.string", "microsoft.powershell.commands.invokerestmethodcommand", "Property[statuscodevariable]"]
    - ["system.collections.idictionary", "microsoft.powershell.commands.webrequestpscmdlet", "Property[form]"]
    - ["system.string", "microsoft.powershell.commands.startjobcommand", "Property[definitionname]"]
    - ["microsoft.powershell.commands.sessionfilterstate", "microsoft.powershell.commands.sessionfilterstate!", "Field[disconnected]"]
    - ["system.string", "microsoft.powershell.commands.startjobcommand", "Property[filepath]"]
    - ["system.string", "microsoft.powershell.commands.getwineventcommand", "Property[computername]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.removeitemcommand", "Property[force]"]
    - ["system.string[]", "microsoft.powershell.commands.signaturecommandsbase", "Property[sourcepathorextension]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.settimezonecommand", "Property[passthru]"]
    - ["system.string", "microsoft.powershell.commands.removecomputercommand", "Property[workgroupname]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.converttosecurestringcommand", "Property[force]"]
    - ["system.string[]", "microsoft.powershell.commands.filesystemprovidergetitemdynamicparameters", "Property[stream]"]
    - ["system.string", "microsoft.powershell.commands.matchinfo", "Property[path]"]
    - ["system.string[]", "microsoft.powershell.commands.startprocesscommand", "Property[argumentlist]"]
    - ["system.string[]", "microsoft.powershell.commands.securitydescriptorcommandsbase", "Property[exclude]"]
    - ["system.collections.hashtable[]", "microsoft.powershell.commands.getwineventcommand", "Property[filterhashtable]"]
    - ["system.object[]", "microsoft.powershell.commands.newpssessionconfigurationfilecommand", "Property[modulestoimport]"]
    - ["system.management.automation.remoting.pssessionoption", "microsoft.powershell.commands.invokecommandcommand", "Property[sessionoption]"]
    - ["microsoft.powershell.commands.netconnectionstatus", "microsoft.powershell.commands.netconnectionstatus!", "Field[connected]"]
    - ["microsoft.powershell.commands.servicestartuptype", "microsoft.powershell.commands.servicestartuptype!", "Field[manual]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.joinpathcommand", "Property[resolve]"]
    - ["system.management.automation.psmembertypes", "microsoft.powershell.commands.memberdefinition", "Property[membertype]"]
    - ["system.string", "microsoft.powershell.commands.neweventlogcommand", "Property[logname]"]
    - ["system.string", "microsoft.powershell.commands.setmarkdownoptioncommand", "Property[italicsforegroundcolor]"]
    - ["microsoft.powershell.commands.ostype", "microsoft.powershell.commands.ostype!", "Field[os400]"]
    - ["microsoft.powershell.commands.testpathtype", "microsoft.powershell.commands.testpathtype!", "Field[container]"]
    - ["microsoft.powershell.commands.domainrole", "microsoft.powershell.commands.domainrole!", "Field[standaloneserver]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.convertfromjsoncommand", "Property[ashashtable]"]
    - ["system.string[]", "microsoft.powershell.commands.psrunspacecmdlet", "Property[name]"]
    - ["system.string", "microsoft.powershell.commands.setlocationcommand", "Property[path]"]
    - ["microsoft.powershell.commands.deviceguardhardwaresecure", "microsoft.powershell.commands.deviceguardhardwaresecure!", "Field[modebasedexecutioncontrol]"]
    - ["system.management.authenticationlevel", "microsoft.powershell.commands.wmibasecmdlet", "Property[authentication]"]
    - ["system.string", "microsoft.powershell.commands.setmarkdownoptioncommand", "Property[header2color]"]
    - ["system.nullable<system.boolean>", "microsoft.powershell.commands.computerinfo", "Property[osportableoperatingsystem]"]
    - ["system.string", "microsoft.powershell.commands.registerwmieventcommand", "Property[namespace]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.whereobjectcommand", "Property[is]"]
    - ["system.management.automation.psobject[]", "microsoft.powershell.commands.convertfromcsvcommand", "Property[inputobject]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.resumejobcommand", "Property[wait]"]
    - ["system.string", "microsoft.powershell.commands.pushlocationcommand", "Property[literalpath]"]
    - ["microsoft.powershell.commands.cpuarchitecture", "microsoft.powershell.commands.cpuarchitecture!", "Field[ia64]"]
    - ["system.int32[]", "microsoft.powershell.commands.setpsbreakpointcommand", "Property[line]"]
    - ["system.string", "microsoft.powershell.commands.psworkflowexecutionoption", "Property[persistencepath]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.copyitemcommand", "Property[container]"]
    - ["system.object", "microsoft.powershell.commands.whereobjectcommand", "Property[value]"]
    - ["microsoft.powershell.commands.webcmdletelementcollection", "microsoft.powershell.commands.htmlwebresponseobject", "Property[links]"]
    - ["system.management.automation.scriptblock", "microsoft.powershell.commands.pspropertyexpression", "Property[script]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.newpsworkflowexecutionoptioncommand", "Property[persistwithencryption]"]
    - ["system.string", "microsoft.powershell.commands.testpssessionconfigurationfilecommand", "Property[path]"]
    - ["system.management.automation.scriptblock", "microsoft.powershell.commands.startjobcommand", "Property[scriptblock]"]
    - ["system.int32", "microsoft.powershell.commands.disconnectpssessioncommand", "Property[idletimeoutsec]"]
    - ["system.string", "microsoft.powershell.commands.computerinfo", "Property[biosmanufacturer]"]
    - ["microsoft.powershell.commands.systemelementstate", "microsoft.powershell.commands.systemelementstate!", "Field[warning]"]
    - ["system.string[]", "microsoft.powershell.commands.removepssessioncommand", "Property[containerid]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.addmembercommand", "Property[force]"]
    - ["system.string[]", "microsoft.powershell.commands.stopjobcommand", "Property[command]"]
    - ["microsoft.powershell.commands.operatingsystemsku", "microsoft.powershell.commands.operatingsystemsku!", "Field[homebasicedition]"]
    - ["system.string", "microsoft.powershell.commands.certificateprovider", "Method[system.management.automation.provider.icmdletprovidersupportshelp.gethelpmaml].ReturnValue"]
    - ["system.exception", "microsoft.powershell.commands.pspropertyexpressionresult", "Property[exception]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.outdefaultcommand", "Property[transcript]"]
    - ["system.int32[]", "microsoft.powershell.commands.getpshostprocessinfocommand", "Property[id]"]
    - ["system.management.automation.pscredential", "microsoft.powershell.commands.renamecomputercommand", "Property[localcredential]"]
    - ["system.guid[]", "microsoft.powershell.commands.connectpssessioncommand", "Property[vmid]"]
    - ["system.object", "microsoft.powershell.commands.registryprovider", "Method[movepropertydynamicparameters].ReturnValue"]
    - ["system.text.encoding", "microsoft.powershell.commands.teeobjectcommand", "Property[encoding]"]
    - ["system.management.automation.rollbackseverity", "microsoft.powershell.commands.starttransactioncommand", "Property[rollbackpreference]"]
    - ["system.object", "microsoft.powershell.commands.readhostcommand", "Property[prompt]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.sortobjectcommand", "Property[unique]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.whereobjectcommand", "Property[lt]"]
    - ["microsoft.powershell.commands.webcmdletelementcollection", "microsoft.powershell.commands.htmlwebresponseobject", "Property[images]"]
    - ["system.string", "microsoft.powershell.commands.psremotingcmdlet!", "Field[sessionparameterset]"]
    - ["system.string[]", "microsoft.powershell.commands.exportaliascommand", "Property[name]"]
    - ["system.globalization.cultureinfo", "microsoft.powershell.commands.newpssessionoptioncommand", "Property[culture]"]
    - ["microsoft.powershell.commands.pcsystemtype", "microsoft.powershell.commands.pcsystemtype!", "Field[appliancepc]"]
    - ["system.object", "microsoft.powershell.commands.pspropertyexpressionresult", "Property[result]"]
    - ["microsoft.powershell.commands.serverlevel", "microsoft.powershell.commands.serverlevel!", "Field[servercore]"]
    - ["system.string[]", "microsoft.powershell.commands.clearitempropertycommand", "Property[path]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.getdatecommand", "Property[asutc]"]
    - ["system.string[]", "microsoft.powershell.commands.newmodulemanifestcommand", "Property[formatstoprocess]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.exportcsvcommand", "Property[noclobber]"]
    - ["system.string", "microsoft.powershell.commands.protectcmsmessagecommand", "Property[literalpath]"]
    - ["microsoft.powershell.commands.firmwaretype", "microsoft.powershell.commands.firmwaretype!", "Field[unknown]"]
    - ["system.string", "microsoft.powershell.commands.foreachobjectcommand", "Property[membername]"]
    - ["system.string[]", "microsoft.powershell.commands.getcontrolpanelitemcommand", "Property[category]"]
    - ["system.string", "microsoft.powershell.commands.startprocesscommand", "Property[filepath]"]
    - ["system.management.automation.pseventsubscriber", "microsoft.powershell.commands.objecteventregistrationbase", "Property[newsubscriber]"]
    - ["system.management.automation.pscredential", "microsoft.powershell.commands.newpssessionoptioncommand", "Property[proxycredential]"]
    - ["system.string[]", "microsoft.powershell.commands.signaturecommandsbase", "Property[literalpath]"]
    - ["system.int32", "microsoft.powershell.commands.newwineventcommand", "Property[id]"]
    - ["system.byte[]", "microsoft.powershell.commands.webresponseobject", "Property[content]"]
    - ["system.string[]", "microsoft.powershell.commands.addtypecommand", "Property[literalpath]"]
    - ["system.string", "microsoft.powershell.commands.matchinfo", "Method[tostring].ReturnValue"]
    - ["system.object", "microsoft.powershell.commands.newitempropertycommand", "Property[value]"]
    - ["system.string[]", "microsoft.powershell.commands.matchinfocontext", "Property[displayprecontext]"]
    - ["system.string[]", "microsoft.powershell.commands.computerinfo", "Property[biosbiosversion]"]
    - ["system.object[]", "microsoft.powershell.commands.newwineventcommand", "Property[payload]"]
    - ["system.management.automation.scriptblock", "microsoft.powershell.commands.measurecommandcommand", "Property[expression]"]
    - ["system.string[]", "microsoft.powershell.commands.removeitempropertycommand", "Property[name]"]
    - ["system.string", "microsoft.powershell.commands.enterpshostprocesscommand", "Property[name]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.selectstringcommand", "Property[casesensitive]"]
    - ["system.string[]", "microsoft.powershell.commands.removeitempropertycommand", "Property[path]"]
    - ["microsoft.powershell.commands.firmwaretype", "microsoft.powershell.commands.firmwaretype!", "Field[bios]"]
    - ["microsoft.powershell.commands.powermanagementcapabilities", "microsoft.powershell.commands.powermanagementcapabilities!", "Field[notsupported]"]
    - ["system.string[]", "microsoft.powershell.commands.importcountercommand", "Property[counter]"]
    - ["microsoft.powershell.commands.webrequestmethod", "microsoft.powershell.commands.webrequestmethod!", "Field[trace]"]
    - ["system.management.automation.psobject", "microsoft.powershell.commands.neweventcommand", "Property[sender]"]
    - ["microsoft.powershell.commands.operatingsystemsku", "microsoft.powershell.commands.operatingsystemsku!", "Field[tbd]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.whereobjectcommand", "Property[clike]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.receivejobcommand", "Property[force]"]
    - ["microsoft.powershell.commands.serverlevel", "microsoft.powershell.commands.serverlevel!", "Field[nanoserver]"]
    - ["microsoft.powershell.commands.domainrole", "microsoft.powershell.commands.domainrole!", "Field[memberserver]"]
    - ["system.management.automation.runspaces.pssession[]", "microsoft.powershell.commands.removepssessioncommand", "Property[session]"]
    - ["system.boolean", "microsoft.powershell.commands.certificateprovider", "Method[isitemcontainer].ReturnValue"]
    - ["system.string", "microsoft.powershell.commands.outprintercommand", "Property[name]"]
    - ["system.string", "microsoft.powershell.commands.addtypecommandbase", "Property[typedefinition]"]
    - ["system.int32[]", "microsoft.powershell.commands.getpsbreakpointcommand", "Property[id]"]
    - ["microsoft.powershell.commands.cpuavailability", "microsoft.powershell.commands.cpuavailability!", "Field[warning]"]
    - ["system.type", "microsoft.powershell.commands.updatetypedatacommand", "Property[typeadapter]"]
    - ["system.string[]", "microsoft.powershell.commands.getitempropertycommand", "Property[path]"]
    - ["microsoft.powershell.commands.filesystemcmdletproviderencoding", "microsoft.powershell.commands.filesystemcmdletproviderencoding!", "Field[byte]"]
    - ["system.string[]", "microsoft.powershell.commands.invokeitemcommand", "Property[exclude]"]
    - ["system.int32", "microsoft.powershell.commands.enterpssessioncommand", "Property[throttlelimit]"]
    - ["system.string[]", "microsoft.powershell.commands.getrunspacecommand", "Property[name]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.getcommandcommand", "Property[all]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.enterpssessioncommand", "Property[enablenetworkaccess]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.enablerunspacedebugcommand", "Property[breakall]"]
    - ["system.string", "microsoft.powershell.commands.renameitemcommand", "Property[path]"]
    - ["system.int32", "microsoft.powershell.commands.foreachobjectcommand", "Property[timeoutseconds]"]
    - ["system.management.automation.psobject[]", "microsoft.powershell.commands.compareobjectcommand", "Property[referenceobject]"]
    - ["microsoft.powershell.commands.displayhinttype", "microsoft.powershell.commands.displayhinttype!", "Field[datetime]"]
    - ["system.string[]", "microsoft.powershell.commands.addtypecommand", "Property[memberdefinition]"]
    - ["microsoft.powershell.commands.resetcapability", "microsoft.powershell.commands.resetcapability!", "Field[other]"]
    - ["system.string", "microsoft.powershell.commands.importworkflowcommand!", "Property[invalidpsparametercollectionadditionalerrormessage]"]
    - ["microsoft.powershell.commands.osproductsuite", "microsoft.powershell.commands.osproductsuite!", "Field[terminalservices]"]
    - ["microsoft.powershell.commands.webrequestmethod", "microsoft.powershell.commands.webrequestmethod!", "Field[options]"]
    - ["system.string[]", "microsoft.powershell.commands.getitemcommand", "Property[include]"]
    - ["system.string", "microsoft.powershell.commands.checkpointcomputercommand", "Property[restorepointtype]"]
    - ["system.string[]", "microsoft.powershell.commands.moveitempropertycommand", "Property[name]"]
    - ["system.string", "microsoft.powershell.commands.networkadapter", "Property[description]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.whereobjectcommand", "Property[contains]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.filesystemcontentwriterdynamicparameters", "Property[nonewline]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.tracecommandcommand", "Property[force]"]
    - ["system.int32", "microsoft.powershell.commands.getdatecommand", "Property[millisecond]"]
    - ["system.string", "microsoft.powershell.commands.computerinfo", "Property[ossystemdirectory]"]
    - ["system.string", "microsoft.powershell.commands.enterpssessioncommand", "Property[vmname]"]
    - ["system.string[]", "microsoft.powershell.commands.gethotfixcommand", "Property[id]"]
    - ["system.string", "microsoft.powershell.commands.newvariablecommand", "Property[name]"]
    - ["system.management.automation.pstransportoption", "microsoft.powershell.commands.pssessionconfigurationcommandbase", "Property[transportoption]"]
    - ["system.string", "microsoft.powershell.commands.webrequestpscmdlet", "Property[custommethod]"]
    - ["system.string", "microsoft.powershell.commands.setmarkdownoptioncommand", "Property[imagealttextforegroundcolor]"]
    - ["system.management.automation.jobstate", "microsoft.powershell.commands.receivejobcommand", "Property[state]"]
    - ["system.management.automation.psobject", "microsoft.powershell.commands.objectbase", "Property[inputobject]"]
    - ["system.int32", "microsoft.powershell.commands.testconnectioncommand", "Property[throttlelimit]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.basecsvwritingcommand", "Property[includetypeinformation]"]
    - ["system.management.automation.psmoduleinfo[]", "microsoft.powershell.commands.importmodulecommand", "Property[moduleinfo]"]
    - ["system.management.automation.runspaces.runspace", "microsoft.powershell.commands.debugrunspacecommand", "Property[runspace]"]
    - ["system.boolean", "microsoft.powershell.commands.moveitemcommand", "Property[providersupportsshouldprocess]"]
    - ["microsoft.powershell.commands.domainrole", "microsoft.powershell.commands.domainrole!", "Field[standaloneworkstation]"]
    - ["system.string[]", "microsoft.powershell.commands.removepsdrivecommand", "Property[literalname]"]
    - ["microsoft.powershell.commands.cpustatus", "microsoft.powershell.commands.cpustatus!", "Field[disabledbyuser]"]
    - ["microsoft.powershell.commands.wmistate", "microsoft.powershell.commands.wmistate!", "Field[failed]"]
    - ["system.string", "microsoft.powershell.commands.unprotectcmsmessagecommand", "Property[content]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.importmodulecommand", "Property[ascustomobject]"]
    - ["system.string", "microsoft.powershell.commands.computerinfo", "Property[csdescription]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.readhostcommand", "Property[assecurestring]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.enablepssessionconfigurationcommand", "Property[force]"]
    - ["system.string", "microsoft.powershell.commands.addmembercommand", "Property[notepropertyname]"]
    - ["system.nullable<microsoft.powershell.commands.systemelementstate>", "microsoft.powershell.commands.computerinfo", "Property[cschassisbootupstate]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.converttohtmlcommand", "Property[transitional]"]
    - ["system.int32", "microsoft.powershell.commands.matchinfo", "Property[linenumber]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.teeobjectcommand", "Property[append]"]
    - ["system.string", "microsoft.powershell.commands.startjobcommand", "Property[keyfilepath]"]
    - ["system.string", "microsoft.powershell.commands.itempropertycommandbase", "Property[filter]"]
    - ["system.nullable<system.uint16>", "microsoft.powershell.commands.computerinfo", "Property[biossystembiosmajorversion]"]
    - ["system.collections.idictionary", "microsoft.powershell.commands.newpssessionconfigurationfilecommand", "Property[requiredgroups]"]
    - ["system.object[]", "microsoft.powershell.commands.pssessionconfigurationcommandbase", "Property[modulestoimport]"]
    - ["system.nullable<system.datetime>", "microsoft.powershell.commands.computerinfo", "Property[csinstalldate]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.getrandomcommand", "Property[shuffle]"]
    - ["system.nullable<system.boolean>", "microsoft.powershell.commands.computerinfo", "Property[csdaylightineffect]"]
    - ["microsoft.powershell.commands.ostype", "microsoft.powershell.commands.ostype!", "Field[lynx]"]
    - ["system.string", "microsoft.powershell.commands.getmodulecommand", "Property[psedition]"]
    - ["microsoft.powershell.commands.netconnectionstatus", "microsoft.powershell.commands.netconnectionstatus!", "Field[authenticating]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.testpathcommand", "Property[isvalid]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.whereobjectcommand", "Property[cnotcontains]"]
    - ["system.collections.generic.list<microsoft.powershell.commands.pspropertyexpressionresult>", "microsoft.powershell.commands.pspropertyexpression", "Method[getvalues].ReturnValue"]
    - ["microsoft.powershell.commands.operatingsystemsku", "microsoft.powershell.commands.operatingsystemsku!", "Field[undefined]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.getmodulecommand", "Property[all]"]
    - ["microsoft.powershell.commands.hardwaresecurity", "microsoft.powershell.commands.hardwaresecurity!", "Field[disabled]"]
    - ["system.string", "microsoft.powershell.commands.pssessionconfigurationcommandbase", "Property[runasvirtualaccountgroups]"]
    - ["system.string[]", "microsoft.powershell.commands.catalogcommandsbase", "Property[path]"]
    - ["microsoft.powershell.commands.operatingsystemsku", "microsoft.powershell.commands.operatingsystemsku!", "Field[windowssmallbusinessserver2011essentials]"]
    - ["microsoft.powershell.commands.cpuavailability", "microsoft.powershell.commands.cpuavailability!", "Field[powersavestandby]"]
    - ["system.string", "microsoft.powershell.commands.objecteventregistrationbase", "Method[getsourceobjecteventname].ReturnValue"]
    - ["system.string", "microsoft.powershell.commands.newitemcommand", "Property[itemtype]"]
    - ["system.int32[]", "microsoft.powershell.commands.getcomputerrestorepointcommand", "Property[restorepoint]"]
    - ["system.int64", "microsoft.powershell.commands.getcountercommand", "Property[maxsamples]"]
    - ["microsoft.powershell.commands.netconnectionstatus", "microsoft.powershell.commands.netconnectionstatus!", "Field[disconnected]"]
    - ["system.nullable<system.double>", "microsoft.powershell.commands.genericmeasureinfo", "Property[maximum]"]
    - ["microsoft.powershell.commands.filesystemcmdletproviderencoding", "microsoft.powershell.commands.filesystemcmdletproviderencoding!", "Field[ascii]"]
    - ["system.string", "microsoft.powershell.commands.invokecommandcommand", "Property[applicationname]"]
    - ["system.string", "microsoft.powershell.commands.resolvepathcommand", "Property[relativebasepath]"]
    - ["system.management.automation.errorrecord", "microsoft.powershell.commands.writeorthrowerrorcommand", "Property[errorrecord]"]
    - ["microsoft.powershell.commands.textencodingtype", "microsoft.powershell.commands.textencodingtype!", "Field[string]"]
    - ["system.object", "microsoft.powershell.commands.functionprovider", "Method[setitemdynamicparameters].ReturnValue"]
    - ["system.management.automation.pscredential", "microsoft.powershell.commands.webrequestpscmdlet", "Property[proxycredential]"]
    - ["microsoft.management.infrastructure.cimsession", "microsoft.powershell.commands.getmodulecommand", "Property[cimsession]"]
    - ["system.nullable<system.boolean>", "microsoft.powershell.commands.computerinfo", "Property[csnetworkservermodeenabled]"]
    - ["system.string[]", "microsoft.powershell.commands.geteventlogcommand", "Property[source]"]
    - ["system.management.automation.psobject", "microsoft.powershell.commands.outgridviewcommand", "Property[inputobject]"]
    - ["system.string", "microsoft.powershell.commands.filesystemprovider", "Method[getchildname].ReturnValue"]
    - ["system.management.automation.psobject", "microsoft.powershell.commands.formathex", "Property[inputobject]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.sendmailmessage", "Property[usessl]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.getwmiobjectcommand", "Property[directread]"]
    - ["system.management.automation.psdriveinfo", "microsoft.powershell.commands.registryprovider", "Method[newdrive].ReturnValue"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.getaclcommand", "Property[audit]"]
    - ["system.int32", "microsoft.powershell.commands.psworkflowexecutionoption", "Property[maxsessionsperworkflow]"]
    - ["system.string", "microsoft.powershell.commands.computerinfo", "Property[biosbuildnumber]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.unregistereventcommand", "Property[force]"]
    - ["microsoft.powershell.commands.ostype", "microsoft.powershell.commands.ostype!", "Field[digitalunix]"]
    - ["system.int64", "microsoft.powershell.commands.getwineventcommand", "Property[maxevents]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.clearitemcommand", "Property[force]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.removevariablecommand", "Property[force]"]
    - ["microsoft.powershell.commands.wakeuptype", "microsoft.powershell.commands.wakeuptype!", "Field[other]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.enablepsbreakpointcommand", "Property[passthru]"]
    - ["microsoft.powershell.commands.operatingsystemsku", "microsoft.powershell.commands.operatingsystemsku!", "Field[windowsserverstandardnohypervfull]"]
    - ["system.string[]", "microsoft.powershell.commands.getpsbreakpointcommand", "Property[variable]"]
    - ["system.int32", "microsoft.powershell.commands.newpsworkflowexecutionoptioncommand", "Property[sessionthrottlelimit]"]
    - ["system.boolean", "microsoft.powershell.commands.pssnapincommandbase", "Property[shouldgetall]"]
    - ["system.string[]", "microsoft.powershell.commands.getcountercommand", "Property[computername]"]
    - ["microsoft.powershell.commands.operatingsystemsku", "microsoft.powershell.commands.operatingsystemsku!", "Field[windowsembeddedindustry]"]
    - ["system.timespan", "microsoft.powershell.commands.startsleepcommand", "Property[duration]"]
    - ["system.string", "microsoft.powershell.commands.updatetypedatacommand", "Property[stringserializationsource]"]
    - ["microsoft.powershell.commands.operatingsystemsku", "microsoft.powershell.commands.operatingsystemsku!", "Field[serverforsmallbusinessedition]"]
    - ["system.string[]", "microsoft.powershell.commands.clearvariablecommand", "Property[exclude]"]
    - ["microsoft.powershell.commands.ostype", "microsoft.powershell.commands.ostype!", "Field[tpf]"]
    - ["system.string[]", "microsoft.powershell.commands.removealiascommand", "Property[name]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.receivejobcommand", "Property[wait]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.whereobjectcommand", "Property[gt]"]
    - ["microsoft.powershell.commands.language", "microsoft.powershell.commands.language!", "Field[csharpversion2]"]
    - ["system.string[]", "microsoft.powershell.commands.setservicecommand", "Property[exclude]"]
    - ["system.string[]", "microsoft.powershell.commands.disablepssessionconfigurationcommand", "Property[name]"]
    - ["system.boolean", "microsoft.powershell.commands.psexecutioncmdlet", "Property[invokeanddisconnect]"]
    - ["system.uri", "microsoft.powershell.commands.receivepssessioncommand", "Property[connectionuri]"]
    - ["system.string[]", "microsoft.powershell.commands.psexecutioncmdlet", "Property[disconnectedsessionname]"]
    - ["system.string", "microsoft.powershell.commands.addcomputercommand", "Property[newname]"]
    - ["microsoft.powershell.commands.language", "microsoft.powershell.commands.language!", "Field[csharp]"]
    - ["system.string", "microsoft.powershell.commands.receivepssessioncommand", "Property[jobname]"]
    - ["microsoft.powershell.commands.textencodingtype", "microsoft.powershell.commands.textencodingtype!", "Field[byte]"]
    - ["microsoft.powershell.commands.operatingsystemsku", "microsoft.powershell.commands.operatingsystemsku!", "Field[enterpriseserveredition]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.psremotingbasecmdlet", "Property[sshtransport]"]
    - ["system.string", "microsoft.powershell.commands.computerinfo", "Property[oslanguage]"]
    - ["system.string", "microsoft.powershell.commands.copyitempropertycommand", "Property[destination]"]
    - ["system.nullable<system.datetime>", "microsoft.powershell.commands.computerinfo", "Property[oslocaldatetime]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.whereobjectcommand", "Property[notlike]"]
    - ["system.string", "microsoft.powershell.commands.updatelistcommand", "property[property]"]
    - ["system.nullable<system.uint32>", "microsoft.powershell.commands.processor", "Property[numberofcores]"]
    - ["system.management.automation.provider.icontentreader", "microsoft.powershell.commands.sessionstateproviderbase", "Method[getcontentreader].ReturnValue"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.importcsvcommand", "Property[useculture]"]
    - ["system.string", "microsoft.powershell.commands.writeverbosecommand", "Property[message]"]
    - ["system.management.automation.pstracesourceoptions", "microsoft.powershell.commands.settracesourcecommand", "Property[option]"]
    - ["system.string[]", "microsoft.powershell.commands.waitjobcommand", "Property[command]"]
    - ["microsoft.powershell.commands.websslprotocol", "microsoft.powershell.commands.websslprotocol!", "Field[tls12]"]
    - ["microsoft.powershell.commands.clipboardformat", "microsoft.powershell.commands.getclipboardcommand", "Property[format]"]
    - ["microsoft.powershell.commands.cpuavailability", "microsoft.powershell.commands.cpuavailability!", "Field[notready]"]
    - ["system.int32", "microsoft.powershell.commands.newpsworkflowexecutionoptioncommand", "Property[maxactivityprocesses]"]
    - ["system.string", "microsoft.powershell.commands.getpssessioncapabilitycommand", "Property[username]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.removecomputercommand", "Property[force]"]
    - ["system.int32", "microsoft.powershell.commands.selectobjectcommand", "Property[skip]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.outgridviewcommand", "Property[wait]"]
    - ["system.string", "microsoft.powershell.commands.webrequestpscmdlet", "Property[useragent]"]
    - ["microsoft.powershell.commands.websslprotocol", "microsoft.powershell.commands.websslprotocol!", "Field[default]"]
    - ["system.collections.objectmodel.collection<system.management.automation.psobject>", "microsoft.powershell.commands.groupinfo", "Property[group]"]
    - ["system.net.cookiecontainer", "microsoft.powershell.commands.webrequestsession", "Property[cookies]"]
    - ["system.security.securestring", "microsoft.powershell.commands.convertfromsecurestringcommand", "Property[securestring]"]
    - ["microsoft.powershell.commands.cpuavailability", "microsoft.powershell.commands.cpuavailability!", "Field[powersavewarning]"]
    - ["system.object", "microsoft.powershell.commands.registerwmieventcommand", "Method[getsourceobject].ReturnValue"]
    - ["system.int32", "microsoft.powershell.commands.geteventcommand", "Property[eventidentifier]"]
    - ["system.string", "microsoft.powershell.commands.webrequestpscmdlet", "Property[contenttype]"]
    - ["system.string", "microsoft.powershell.commands.commonrunspacecommandbase!", "Field[processnameparameterset]"]
    - ["microsoft.powershell.commands.servicestartuptype", "microsoft.powershell.commands.servicestartuptype!", "Field[invalidvalue]"]
    - ["system.string[]", "microsoft.powershell.commands.selectxmlcommand", "Property[path]"]
    - ["system.collections.objectmodel.collection<system.management.automation.psdriveinfo>", "microsoft.powershell.commands.filesystemprovider", "Method[initializedefaultdrives].ReturnValue"]
    - ["system.string", "microsoft.powershell.commands.setservicecommand", "Property[securitydescriptorsddl]"]
    - ["system.string[]", "microsoft.powershell.commands.newpsworkflowexecutionoptioncommand", "Property[outofprocessactivity]"]
    - ["system.string", "microsoft.powershell.commands.computerinfo", "Property[biosserialnumber]"]
    - ["system.datetime", "microsoft.powershell.commands.getjobcommand", "Property[before]"]
    - ["system.string[]", "microsoft.powershell.commands.sendmailmessage", "Property[to]"]
    - ["microsoft.powershell.commands.sessionfilterstate", "microsoft.powershell.commands.sessionfilterstate!", "Field[broken]"]
    - ["system.collections.objectmodel.collection<system.management.automation.psdriveinfo>", "microsoft.powershell.commands.aliasprovider", "Method[initializedefaultdrives].ReturnValue"]
    - ["system.datetime", "microsoft.powershell.commands.geteventlogcommand", "Property[before]"]
    - ["system.int32[]", "microsoft.powershell.commands.debugprocesscommand", "Property[id]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.webrequestpscmdlet", "Property[skipcertificatecheck]"]
    - ["system.management.automation.remoting.pssessionoption", "microsoft.powershell.commands.startjobcommand", "Property[sessionoption]"]
    - ["system.consolecolor", "microsoft.powershell.commands.consolecolorcmdlet", "Property[backgroundcolor]"]
    - ["system.string[]", "microsoft.powershell.commands.getmembercommand", "Property[name]"]
    - ["system.string", "microsoft.powershell.commands.commonrunspacecommandbase!", "Field[runspaceparameterset]"]
    - ["system.io.stream", "microsoft.powershell.commands.getfilehashcommand", "Property[inputstream]"]
    - ["system.io.memorystream", "microsoft.powershell.commands.webresponseobject", "Property[rawcontentstream]"]
    - ["system.int32", "microsoft.powershell.commands.invokerestmethodcommand", "Property[maximumfollowrellink]"]
    - ["system.string", "microsoft.powershell.commands.getwmiobjectcommand", "Property[class]"]
    - ["system.object", "microsoft.powershell.commands.registryprovider", "Method[getpropertydynamicparameters].ReturnValue"]
    - ["system.string", "microsoft.powershell.commands.writeprogresscommand", "Property[status]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.convertfrommarkdowncommand", "Property[asvt100encodedstring]"]
    - ["system.nullable<microsoft.powershell.commands.serverlevel>", "microsoft.powershell.commands.computerinfo", "Property[osserverlevel]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.testconnectioncommand", "Property[mtusize]"]
    - ["system.string", "microsoft.powershell.commands.exportcsvcommand", "Property[path]"]
    - ["microsoft.powershell.commands.firmwaretype", "microsoft.powershell.commands.firmwaretype!", "Field[max]"]
    - ["system.string", "microsoft.powershell.commands.computerinfo", "Property[windowsproductid]"]
    - ["microsoft.powershell.commands.ostype", "microsoft.powershell.commands.ostype!", "Field[interactiveunix]"]
    - ["system.string", "microsoft.powershell.commands.psremotingbasecmdlet", "Property[username]"]
    - ["microsoft.powershell.commands.deviceguardhardwaresecure", "microsoft.powershell.commands.deviceguardhardwaresecure!", "Field[dmaprotection]"]
    - ["microsoft.powershell.commands.updatehelpscope", "microsoft.powershell.commands.updatehelpscope!", "Field[currentuser]"]
    - ["system.nullable<system.int32>", "microsoft.powershell.commands.wsmanconfigurationoption", "Property[maxsessions]"]
    - ["microsoft.powershell.commands.deviceguardhardwaresecure[]", "microsoft.powershell.commands.computerinfo", "Property[deviceguardavailablesecurityproperties]"]
    - ["system.management.automation.psobject", "microsoft.powershell.commands.neweventcommand", "Property[messagedata]"]
    - ["system.int32", "microsoft.powershell.commands.writeprogresscommand", "Property[id]"]
    - ["system.string", "microsoft.powershell.commands.addmembercommand", "Property[name]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.whereobjectcommand", "Property[cin]"]
    - ["system.int32", "microsoft.powershell.commands.getcontentcommand", "Property[tail]"]
    - ["system.boolean", "microsoft.powershell.commands.webrequestpscmdlet", "Method[verifyinternetexploreravailable].ReturnValue"]
    - ["system.object", "microsoft.powershell.commands.setaclcommand", "Property[aclobject]"]
    - ["system.string", "microsoft.powershell.commands.newpsdrivecommand", "Property[name]"]
    - ["system.string", "microsoft.powershell.commands.invokecommandcommand", "Property[keyfilepath]"]
    - ["system.int32[]", "microsoft.powershell.commands.selectobjectcommand", "Property[skipindex]"]
    - ["system.string", "microsoft.powershell.commands.getwmiobjectcommand", "Property[filter]"]
    - ["system.string", "microsoft.powershell.commands.setmarkdownoptioncommand", "Property[theme]"]
    - ["system.int32", "microsoft.powershell.commands.enterpssessioncommand", "Property[id]"]
    - ["microsoft.powershell.commands.cpuavailability", "microsoft.powershell.commands.cpuavailability!", "Field[poweroff]"]
    - ["system.string", "microsoft.powershell.commands.psexecutioncmdlet!", "Field[filepathcontaineridparameterset]"]
    - ["system.string[]", "microsoft.powershell.commands.selectobjectcommand", "Property[excludeproperty]"]
    - ["system.string", "microsoft.powershell.commands.registerobjecteventcommand", "Method[getsourceobjecteventname].ReturnValue"]
    - ["system.int32", "microsoft.powershell.commands.compareobjectcommand", "Property[syncwindow]"]
    - ["microsoft.powershell.commands.breakpointtype", "microsoft.powershell.commands.breakpointtype!", "Field[command]"]
    - ["system.management.managementobject", "microsoft.powershell.commands.removewmiobject", "Property[inputobject]"]
    - ["system.string", "microsoft.powershell.commands.neweventcommand", "Property[sourceidentifier]"]
    - ["system.string", "microsoft.powershell.commands.psremotingcmdlet!", "Field[containeridparameterset]"]
    - ["system.string", "microsoft.powershell.commands.invokecommandcommand", "Property[username]"]
    - ["microsoft.powershell.commands.operatingsystemsku", "microsoft.powershell.commands.operatingsystemsku!", "Field[windowsserverenterprisenohypervfull]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.whereobjectcommand", "Property[cge]"]
    - ["system.string", "microsoft.powershell.commands.matchinfo", "Property[filename]"]
    - ["system.object", "microsoft.powershell.commands.filesystemprovider", "Method[getcontentwriterdynamicparameters].ReturnValue"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.webrequestpscmdlet", "Property[proxyusedefaultcredentials]"]
    - ["system.management.automation.pstracesourceoptions", "microsoft.powershell.commands.tracecommandcommand", "Property[option]"]
    - ["system.string", "microsoft.powershell.commands.pshostprocessinfo", "Property[processname]"]
    - ["system.string", "microsoft.powershell.commands.commonrunspacecommandbase", "Property[processname]"]
    - ["system.string", "microsoft.powershell.commands.bytecollection", "Property[label]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.compareobjectcommand", "Property[includeequal]"]
    - ["system.management.automation.pscredential", "microsoft.powershell.commands.getwineventcommand", "Property[credential]"]
    - ["system.object", "microsoft.powershell.commands.setvariablecommand", "Property[value]"]
    - ["system.string", "microsoft.powershell.commands.newpsrolecapabilityfilecommand", "Property[copyright]"]
    - ["system.guid[]", "microsoft.powershell.commands.psremotingbasecmdlet", "Property[vmid]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.newmodulecommand", "Property[returnresult]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.getchilditemcommand", "Property[name]"]
    - ["system.management.automation.cmsmessagerecipient[]", "microsoft.powershell.commands.unprotectcmsmessagecommand", "Property[to]"]
    - ["system.int32", "microsoft.powershell.commands.newpssessionoptioncommand", "Property[opentimeout]"]
    - ["system.string", "microsoft.powershell.commands.getdatecommand", "Property[format]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.starttranscriptcommand", "Property[force]"]
    - ["system.string[]", "microsoft.powershell.commands.contentcommandbase", "Property[exclude]"]
    - ["system.nullable<system.int32>", "microsoft.powershell.commands.newpstransportoptioncommand", "Property[processidletimeoutsec]"]
    - ["system.string", "microsoft.powershell.commands.newpssessionconfigurationfilecommand", "Property[transcriptdirectory]"]
    - ["system.management.automation.pscredential", "microsoft.powershell.commands.pssessionconfigurationcommandbase", "Property[runascredential]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.startprocesscommand", "Property[passthru]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.groupobjectcommand", "Property[ashashtable]"]
    - ["system.int32[]", "microsoft.powershell.commands.selectobjectcommand", "Property[index]"]
    - ["system.string", "microsoft.powershell.commands.teeobjectcommand", "Property[variable]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.webrequestpscmdlet", "Property[resume]"]
    - ["system.int32", "microsoft.powershell.commands.geteventsubscribercommand", "Property[subscriptionid]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.getprocesscommand", "Property[fileversioninfo]"]
    - ["system.string[]", "microsoft.powershell.commands.getcommandcommand", "Property[module]"]
    - ["system.net.iwebproxy", "microsoft.powershell.commands.webrequestsession", "Property[proxy]"]
    - ["system.string", "microsoft.powershell.commands.hashcmdletbase", "Property[algorithm]"]
    - ["microsoft.powershell.commands.pcsystemtypeex", "microsoft.powershell.commands.pcsystemtypeex!", "Field[enterpriseserver]"]
    - ["system.nullable<system.boolean>", "microsoft.powershell.commands.computerinfo", "Property[osdistributed]"]
    - ["microsoft.powershell.commands.softwareelementstate", "microsoft.powershell.commands.softwareelementstate!", "Field[deployable]"]
    - ["system.management.automation.psmemberviewtypes", "microsoft.powershell.commands.getmembercommand", "Property[view]"]
    - ["microsoft.powershell.commands.powermanagementcapabilities", "microsoft.powershell.commands.powermanagementcapabilities!", "Field[unknown]"]
    - ["system.string", "microsoft.powershell.commands.startprocesscommand", "Property[workingdirectory]"]
    - ["system.management.automation.pscredential", "microsoft.powershell.commands.connectpssessioncommand", "Property[credential]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.writeoutputcommand", "Property[noenumerate]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.basecsvwritingcommand", "Property[notypeinformation]"]
    - ["system.int32", "microsoft.powershell.commands.newtimespancommand", "Property[milliseconds]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.waitjobcommand", "Property[force]"]
    - ["system.management.automation.pscredential", "microsoft.powershell.commands.receivepssessioncommand", "Property[credential]"]
    - ["system.string", "microsoft.powershell.commands.pshostprocessinfo", "Method[getpipenamefilepath].ReturnValue"]
    - ["system.string", "microsoft.powershell.commands.psrunspacedebug", "Property[runspacename]"]
    - ["microsoft.powershell.commands.powerplatformrole", "microsoft.powershell.commands.powerplatformrole!", "Field[sohoserver]"]
    - ["system.nullable<system.boolean>", "microsoft.powershell.commands.computerinfo", "Property[hypervrequirementsecondleveladdresstranslation]"]
    - ["system.object[]", "microsoft.powershell.commands.getrandomcommand", "Property[inputobject]"]
    - ["system.string[]", "microsoft.powershell.commands.newmodulemanifestcommand", "Property[dscresourcestoexport]"]
    - ["system.string", "microsoft.powershell.commands.functionprovider!", "Field[providername]"]
    - ["system.string[]", "microsoft.powershell.commands.getpfxcertificatecommand", "Property[literalpath]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.sortobjectcommand", "Property[stable]"]
    - ["system.string[]", "microsoft.powershell.commands.getitemcommand", "Property[literalpath]"]
    - ["system.security.accesscontrol.objectsecurity", "microsoft.powershell.commands.filesystemprovider", "Method[newsecuritydescriptorfrompath].ReturnValue"]
    - ["system.int32", "microsoft.powershell.commands.webrequestpscmdlet", "Property[timeoutsec]"]
    - ["system.string", "microsoft.powershell.commands.helpnotfoundexception", "Property[message]"]
    - ["microsoft.powershell.commands.sessionfilterstate", "microsoft.powershell.commands.getpssessioncommand", "Property[state]"]
    - ["system.string", "microsoft.powershell.commands.computerinfo", "Property[windowsproductname]"]
    - ["microsoft.powershell.commands.ostype", "microsoft.powershell.commands.ostype!", "Field[win98]"]
    - ["system.string", "microsoft.powershell.commands.matchinfo", "Method[relativepath].ReturnValue"]
    - ["system.int32", "microsoft.powershell.commands.pshostprocessinfo", "Property[processid]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.writehostcommand", "Property[nonewline]"]
    - ["system.string", "microsoft.powershell.commands.getcmsmessagecommand", "Property[literalpath]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.moveitemcommand", "Property[passthru]"]
    - ["system.string", "microsoft.powershell.commands.startjobcommand", "Property[subsystem]"]
    - ["system.int32[]", "microsoft.powershell.commands.psbreakpointcommandbase", "Property[id]"]
    - ["microsoft.powershell.commands.processortype", "microsoft.powershell.commands.processortype!", "Field[other]"]
    - ["system.string", "microsoft.powershell.commands.poplocationcommand", "Property[stackname]"]
    - ["system.string", "microsoft.powershell.commands.debugjobcommand", "Property[name]"]
    - ["system.management.automation.psobject", "microsoft.powershell.commands.exportclixmlcommand", "Property[inputobject]"]
    - ["system.string", "microsoft.powershell.commands.startjobcommand", "Property[configurationname]"]
    - ["system.string", "microsoft.powershell.commands.computerinfo", "Property[bioslanguageedition]"]
    - ["system.string[]", "microsoft.powershell.commands.selectstringcommand", "Property[pattern]"]
    - ["system.uri", "microsoft.powershell.commands.newwebserviceproxy", "Property[uri]"]
    - ["system.string", "microsoft.powershell.commands.newservicecommand", "Property[securitydescriptorsddl]"]
    - ["system.datetime", "microsoft.powershell.commands.getdatecommand", "Property[date]"]
    - ["system.string", "microsoft.powershell.commands.jsonobject!", "Method[converttojson].ReturnValue"]
    - ["system.management.automation.scriptblock", "microsoft.powershell.commands.invokecommandcommand", "Property[scriptblock]"]
    - ["system.string[]", "microsoft.powershell.commands.setitemcommand", "Property[include]"]
    - ["system.string[]", "microsoft.powershell.commands.gettracesourcecommand", "Property[name]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.pssessionconfigurationcommandbase", "Property[usesharedprocess]"]
    - ["microsoft.powershell.commands.deviceguardconfigcodeintegritystatus", "microsoft.powershell.commands.deviceguardconfigcodeintegritystatus!", "Field[enforcementmode]"]
    - ["system.int32", "microsoft.powershell.commands.psremotingbasecmdlet", "Property[connectingtimeout]"]
    - ["system.string", "microsoft.powershell.commands.geteventcommand", "Property[sourceidentifier]"]
    - ["system.string", "microsoft.powershell.commands.resetcomputermachinepasswordcommand", "Property[server]"]
    - ["system.string[]", "microsoft.powershell.commands.newpssessionconfigurationfilecommand", "Property[formatstoprocess]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.setvariablecommand", "Property[passthru]"]
    - ["system.nullable<microsoft.powershell.commands.pcsystemtypeex>", "microsoft.powershell.commands.computerinfo", "Property[cspcsystemtypeex]"]
    - ["system.string", "microsoft.powershell.commands.startjobcommand", "Property[workingdirectory]"]
    - ["system.string", "microsoft.powershell.commands.invokerestmethodcommand", "Property[responseheadersvariable]"]
    - ["system.guid", "microsoft.powershell.commands.debugjobcommand", "Property[instanceid]"]
    - ["system.string", "microsoft.powershell.commands.writeprogresscommand", "Property[currentoperation]"]
    - ["system.nullable<microsoft.powershell.commands.hardwaresecurity>", "microsoft.powershell.commands.computerinfo", "Property[csfrontpanelresetstatus]"]
    - ["system.int32", "microsoft.powershell.commands.getpssessioncommand", "Property[port]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.startprocesscommand", "Property[wait]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.unregisterpssessionconfigurationcommand", "Property[noservicerestart]"]
    - ["microsoft.powershell.commands.operatingsystemsku", "microsoft.powershell.commands.operatingsystemsku!", "Field[homeserveredition]"]
    - ["system.string[]", "microsoft.powershell.commands.getitemcommand", "Property[path]"]
    - ["microsoft.powershell.commands.waitforservicetypes", "microsoft.powershell.commands.waitforservicetypes!", "Field[winrm]"]
    - ["system.string[]", "microsoft.powershell.commands.newpssessionconfigurationfilecommand", "Property[visiblealiases]"]
    - ["system.string[]", "microsoft.powershell.commands.copyitempropertycommand", "Property[literalpath]"]
    - ["microsoft.powershell.commands.operatingsystemsku", "microsoft.powershell.commands.operatingsystemsku!", "Field[windowsmobile]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.converttohtmlcommand", "Property[fragment]"]
    - ["system.string[]", "microsoft.powershell.commands.testpathcommand", "Property[include]"]
    - ["system.string", "microsoft.powershell.commands.importpssessioncommand", "Property[prefix]"]
    - ["system.int32", "microsoft.powershell.commands.testconnectioncommand", "Property[timetolive]"]
    - ["microsoft.powershell.commands.filesystemcmdletproviderencoding", "microsoft.powershell.commands.filesystemcmdletproviderencoding!", "Field[oem]"]
    - ["system.string[]", "microsoft.powershell.commands.addtypecommandbase", "Property[memberdefinition]"]
    - ["system.xml.xmlnode[]", "microsoft.powershell.commands.selectxmlcommand", "Property[xml]"]
    - ["system.nullable<system.management.automation.runspaces.outputbufferingmode>", "microsoft.powershell.commands.newpstransportoptioncommand", "Property[outputbufferingmode]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.startjobcommand", "Property[allowredirection]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.invokecommandcommand", "Property[runasadministrator]"]
    - ["system.nullable<system.uint16>", "microsoft.powershell.commands.computerinfo", "Property[osservicepackmajorversion]"]
    - ["system.management.automation.provider.icontentwriter", "microsoft.powershell.commands.filesystemprovider", "Method[getcontentwriter].ReturnValue"]
    - ["microsoft.powershell.commands.powermanagementcapabilities", "microsoft.powershell.commands.powermanagementcapabilities!", "Field[timedpoweronsupported]"]
    - ["system.string", "microsoft.powershell.commands.importmodulecommand", "Property[scope]"]
    - ["microsoft.powershell.commands.operatingsystemsku", "microsoft.powershell.commands.operatingsystemsku!", "Field[windowsserverdatacenternohypervfull]"]
    - ["microsoft.powershell.commands.operatingsystemsku", "microsoft.powershell.commands.operatingsystemsku!", "Field[windowsserverstandardnohypervcore]"]
    - ["microsoft.powershell.commands.ostype", "microsoft.powershell.commands.ostype!", "Field[ncr3000]"]
    - ["system.string", "microsoft.powershell.commands.pssessionconfigurationcommandbase", "Property[configurationtypename]"]
    - ["system.object", "microsoft.powershell.commands.updatetypedatacommand", "Property[secondvalue]"]
    - ["microsoft.powershell.commands.modulespecification[]", "microsoft.powershell.commands.implicitremotingcommandbase", "Property[fullyqualifiedmodule]"]
    - ["system.int32", "microsoft.powershell.commands.testconnectioncommand", "Property[maxhops]"]
    - ["system.string[]", "microsoft.powershell.commands.psremotingbasecmdlet", "Property[containerid]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.whereobjectcommand", "Property[isnot]"]
    - ["microsoft.powershell.commands.language", "microsoft.powershell.commands.addtypecommandbase", "Property[language]"]
    - ["system.string[]", "microsoft.powershell.commands.selectstringcommand", "Property[exclude]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.implicitremotingcommandbase", "Property[allowclobber]"]
    - ["system.string", "microsoft.powershell.commands.testconnectioncommand", "Property[wsmanauthentication]"]
    - ["microsoft.powershell.commands.basecsvwritingcommand+quotekind", "microsoft.powershell.commands.basecsvwritingcommand", "Property[usequotes]"]
    - ["system.string[]", "microsoft.powershell.commands.importworkflowcommand", "Property[dependentworkflow]"]
    - ["system.management.automation.pscredential", "microsoft.powershell.commands.removecomputercommand", "Property[unjoindomaincredential]"]
    - ["system.string", "microsoft.powershell.commands.removeservicecommand", "Property[name]"]
    - ["system.management.automation.runspaces.authenticationmechanism", "microsoft.powershell.commands.newpssessionoptioncommand", "Property[proxyauthentication]"]
    - ["system.management.automation.pscredential", "microsoft.powershell.commands.newservicecommand", "Property[credential]"]
    - ["system.string", "microsoft.powershell.commands.getcmsmessagecommand", "Property[path]"]
    - ["system.boolean", "microsoft.powershell.commands.tracelistenercommandbase", "Property[forcewrite]"]
    - ["system.int32", "microsoft.powershell.commands.formatwidecommand", "Property[column]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.gethelpcommand", "Property[examples]"]
    - ["system.object[]", "microsoft.powershell.commands.implicitremotingcommandbase", "Property[argumentlist]"]
    - ["system.string[]", "microsoft.powershell.commands.clearitemcommand", "Property[exclude]"]
    - ["microsoft.powershell.commands.ostype", "microsoft.powershell.commands.ostype!", "Field[bs2000]"]
    - ["system.nullable<microsoft.powershell.commands.deviceguardconfigcodeintegritystatus>", "microsoft.powershell.commands.deviceguard", "Property[codeintegritypolicyenforcementstatus]"]
    - ["system.string", "microsoft.powershell.commands.removeeventcommand", "Property[sourceidentifier]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.webrequestpscmdlet", "Property[preserveauthorizationonredirect]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.geteventsubscribercommand", "Property[force]"]
    - ["system.int32", "microsoft.powershell.commands.outfilecommand", "Property[width]"]
    - ["system.string[]", "microsoft.powershell.commands.getpfxcertificatecommand", "Property[filepath]"]
    - ["system.int32", "microsoft.powershell.commands.sendmailmessage", "Property[port]"]
    - ["microsoft.powershell.commands.outtarget", "microsoft.powershell.commands.receivepssessioncommand", "Property[outtarget]"]
    - ["system.string[]", "microsoft.powershell.commands.newitemcommand", "Property[path]"]
    - ["microsoft.powershell.commands.operatingsystemsku", "microsoft.powershell.commands.operatingsystemsku!", "Field[storageserverstandardcore]"]
    - ["system.int32", "microsoft.powershell.commands.restartcomputercommand", "Property[throttlelimit]"]
    - ["system.string", "microsoft.powershell.commands.x509storelocation", "Property[locationname]"]
    - ["microsoft.powershell.commands.ostype", "microsoft.powershell.commands.ostype!", "Field[linux]"]
    - ["system.int32", "microsoft.powershell.commands.getdatecommand", "Property[second]"]
    - ["microsoft.powershell.commands.websslprotocol", "microsoft.powershell.commands.websslprotocol!", "Field[tls]"]
    - ["system.int32", "microsoft.powershell.commands.connectpssessioncommand", "Property[throttlelimit]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.clearrecyclebincommand", "Property[force]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.newwebserviceproxy", "Property[usedefaultcredential]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.setclipboardcommand", "Property[ashtml]"]
    - ["system.boolean", "microsoft.powershell.commands.psworkflowexecutionoption", "Property[persistwithencryption]"]
    - ["system.string", "microsoft.powershell.commands.moveitemcommand", "Property[filter]"]
    - ["microsoft.powershell.commands.systemelementstate", "microsoft.powershell.commands.systemelementstate!", "Field[safe]"]
    - ["system.management.authenticationlevel", "microsoft.powershell.commands.restartcomputercommand", "Property[dcomauthentication]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.newvariablecommand", "Property[force]"]
    - ["microsoft.powershell.commands.modulespecification[]", "microsoft.powershell.commands.updatehelpcommand", "Property[fullyqualifiedmodule]"]
    - ["system.string[]", "microsoft.powershell.commands.securitydescriptorcommandsbase!", "Method[getallcentralaccesspolicies].ReturnValue"]
    - ["system.int32", "microsoft.powershell.commands.testconnectioncommand", "Property[timeoutseconds]"]
    - ["system.string", "microsoft.powershell.commands.psremotingcmdlet!", "Field[computernameparameterset]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.removecomputercommand", "Property[passthru]"]
    - ["system.string[]", "microsoft.powershell.commands.sendmailmessage", "Property[bcc]"]
    - ["system.collections.idictionary[]", "microsoft.powershell.commands.newpssessionconfigurationfilecommand", "Property[aliasdefinitions]"]
    - ["system.uri[]", "microsoft.powershell.commands.startjobcommand", "Property[connectionuri]"]
    - ["microsoft.powershell.commands.outputassemblytype", "microsoft.powershell.commands.addtypecommandbase", "Property[outputtype]"]
    - ["system.int32[]", "microsoft.powershell.commands.waitprocesscommand", "Property[id]"]
    - ["system.string", "microsoft.powershell.commands.psremotingcmdlet!", "Field[vmidparameterset]"]
    - ["microsoft.powershell.commands.frontpanelresetstatus", "microsoft.powershell.commands.frontpanelresetstatus!", "Field[disabled]"]
    - ["system.object", "microsoft.powershell.commands.sessionstateproviderbase", "Method[getcontentwriterdynamicparameters].ReturnValue"]
    - ["system.string[]", "microsoft.powershell.commands.signaturecommandsbase", "Property[filepath]"]
    - ["system.string", "microsoft.powershell.commands.removewmiobject", "Property[class]"]
    - ["system.boolean", "microsoft.powershell.commands.filesystemcontentdynamicparametersbase", "Property[usingbyteencoding]"]
    - ["system.string[]", "microsoft.powershell.commands.converttohtmlcommand", "Property[body]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.testconnectioncommand", "Property[quiet]"]
    - ["system.guid[]", "microsoft.powershell.commands.commonrunspacecommandbase", "Property[runspaceinstanceid]"]
    - ["system.string[]", "microsoft.powershell.commands.geteventlogcommand", "Property[computername]"]
    - ["microsoft.powershell.commands.frontpanelresetstatus", "microsoft.powershell.commands.frontpanelresetstatus!", "Field[enabled]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.selectstringcommand", "Property[raw]"]
    - ["system.version", "microsoft.powershell.commands.newmodulemanifestcommand", "Property[dotnetframeworkversion]"]
    - ["microsoft.powershell.commands.openmode", "microsoft.powershell.commands.openmode!", "Field[new]"]
    - ["system.management.automation.scriptblock", "microsoft.powershell.commands.startjobcommand", "Property[initializationscript]"]
    - ["system.string", "microsoft.powershell.commands.renamecomputerchangeinfo", "Property[oldcomputername]"]
    - ["system.string[]", "microsoft.powershell.commands.serviceoperationbasecommand", "Property[name]"]
    - ["system.string[]", "microsoft.powershell.commands.newpsrolecapabilityfilecommand", "Property[typestoprocess]"]
    - ["system.string[]", "microsoft.powershell.commands.selectxmlcommand", "Property[content]"]
    - ["system.string[]", "microsoft.powershell.commands.computerinfo", "Property[cssupportcontactdescription]"]
    - ["system.management.automation.commandtypes", "microsoft.powershell.commands.getcommandcommand", "Property[commandtype]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.importmodulecommand", "Property[disablenamechecking]"]
    - ["microsoft.powershell.commands.deviceguardhardwaresecure[]", "microsoft.powershell.commands.deviceguard", "Property[requiredsecurityproperties]"]
    - ["system.int32", "microsoft.powershell.commands.newpsworkflowexecutionoptioncommand", "Property[maxsessionsperworkflow]"]
    - ["system.boolean", "microsoft.powershell.commands.filesystemprovider", "Method[isvalidpath].ReturnValue"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.invokecommandcommand", "Property[allowredirection]"]
    - ["system.collections.idictionary[]", "microsoft.powershell.commands.newpsrolecapabilityfilecommand", "Property[functiondefinitions]"]
    - ["system.string[]", "microsoft.powershell.commands.resolvepathcommand", "Property[literalpath]"]
    - ["system.management.automation.psmembertypes", "microsoft.powershell.commands.getmembercommand", "Property[membertype]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.splitpathcommand", "Property[leaf]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.invokecommandcommand", "Property[sshtransport]"]
    - ["system.string[]", "microsoft.powershell.commands.moveitemcommand", "Property[literalpath]"]
    - ["system.timezoneinfo", "microsoft.powershell.commands.settimezonecommand", "Property[inputobject]"]
    - ["microsoft.powershell.commands.updatehelpscope", "microsoft.powershell.commands.updatablehelpcommandbase", "Property[scope]"]
    - ["system.string", "microsoft.powershell.commands.exportclixmlcommand", "Property[encoding]"]
    - ["system.string", "microsoft.powershell.commands.helpcategoryinvalidexception", "Property[helpcategory]"]
    - ["microsoft.powershell.commands.outputmodeoption", "microsoft.powershell.commands.outputmodeoption!", "Field[none]"]
    - ["system.string[]", "microsoft.powershell.commands.tracecommandcommand", "Property[name]"]
    - ["system.string", "microsoft.powershell.commands.addcomputercommand", "Property[workgroupname]"]
    - ["system.string", "microsoft.powershell.commands.setmarkdownoptioncommand", "Property[header5color]"]
    - ["system.int32", "microsoft.powershell.commands.getdatecommand", "Property[year]"]
    - ["microsoft.powershell.commands.sessionfilterstate", "microsoft.powershell.commands.sessionfilterstate!", "Field[all]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.startprocesscommand", "Property[nonewwindow]"]
    - ["system.nullable<microsoft.powershell.commands.foregroundapplicationboost>", "microsoft.powershell.commands.computerinfo", "Property[osforegroundapplicationboost]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.disablepssessionconfigurationcommand", "Property[noservicerestart]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.basecsvwritingcommand", "Property[useculture]"]
    - ["microsoft.powershell.commands.operatingsystemsku", "microsoft.powershell.commands.operatingsystemsku!", "Field[storageserverenterprisecore]"]
    - ["system.nullable<system.double>", "microsoft.powershell.commands.genericmeasureinfo", "Property[minimum]"]
    - ["system.string", "microsoft.powershell.commands.invokecommandcommand", "Property[subsystem]"]
    - ["system.string", "microsoft.powershell.commands.testjsoncommand", "Property[json]"]
    - ["system.string", "microsoft.powershell.commands.receivepssessioncommand", "Property[configurationname]"]
    - ["system.nullable<system.uint64>", "microsoft.powershell.commands.computerinfo", "Property[csphysicallyinstalledmemory]"]
    - ["microsoft.powershell.commands.outputmodeoption", "microsoft.powershell.commands.outputmodeoption!", "Field[single]"]
    - ["system.string", "microsoft.powershell.commands.addtypecommandbase", "Property[outputassembly]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.whereobjectcommand", "Property[clt]"]
    - ["microsoft.powershell.commands.ostype", "microsoft.powershell.commands.ostype!", "Field[wince]"]
    - ["microsoft.powershell.commands.softwareelementstate", "microsoft.powershell.commands.softwareelementstate!", "Field[installable]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.renameitemcommand", "Property[passthru]"]
    - ["system.guid[]", "microsoft.powershell.commands.getpssessioncommand", "Property[instanceid]"]
    - ["system.datetime", "microsoft.powershell.commands.importcountercommand", "Property[starttime]"]
    - ["microsoft.powershell.commands.netconnectionstatus", "microsoft.powershell.commands.networkadapter", "Property[connectionstatus]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.outfilecommand", "Property[force]"]
    - ["system.string", "microsoft.powershell.commands.gethelpcommand", "Property[name]"]
    - ["system.string", "microsoft.powershell.commands.connectpssessioncommand", "Property[configurationname]"]
    - ["microsoft.powershell.commands.ostype", "microsoft.powershell.commands.ostype!", "Field[epoc]"]
    - ["microsoft.powershell.commands.textencodingtype", "microsoft.powershell.commands.textencodingtype!", "Field[utf7]"]
    - ["system.string", "microsoft.powershell.commands.psuseragent!", "Property[safari]"]
    - ["system.string[]", "microsoft.powershell.commands.newpsworkflowexecutionoptioncommand", "Property[allowedactivity]"]
    - ["system.string", "microsoft.powershell.commands.exportcsvcommand", "Property[literalpath]"]
    - ["system.string[]", "microsoft.powershell.commands.newpssessionconfigurationfilecommand", "Property[scriptstoprocess]"]
    - ["system.string", "microsoft.powershell.commands.geteventpssnapin", "Property[description]"]
    - ["system.management.automation.provider.icontentreader", "microsoft.powershell.commands.filesystemprovider", "Method[getcontentreader].ReturnValue"]
    - ["system.string[]", "microsoft.powershell.commands.getfilehashcommand", "Property[literalpath]"]
    - ["system.string", "microsoft.powershell.commands.filesystemclearcontentdynamicparameters", "Property[stream]"]
    - ["system.management.automation.runspaces.pssession[]", "microsoft.powershell.commands.disconnectpssessioncommand", "Property[session]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.contentcommandbase", "Property[force]"]
    - ["system.string", "microsoft.powershell.commands.computerinfo", "Property[biosstatus]"]
    - ["microsoft.powershell.commands.osproductsuite", "microsoft.powershell.commands.osproductsuite!", "Field[datacenteredition]"]
    - ["microsoft.powershell.commands.adminpasswordstatus", "microsoft.powershell.commands.adminpasswordstatus!", "Field[unknown]"]
    - ["system.string[]", "microsoft.powershell.commands.importmodulecommand", "Property[alias]"]
    - ["system.nullable<system.timespan>", "microsoft.powershell.commands.computerinfo", "Property[osuptime]"]
    - ["microsoft.powershell.commands.modulespecification[]", "microsoft.powershell.commands.getmodulecommand", "Property[fullyqualifiedname]"]
    - ["system.boolean", "microsoft.powershell.commands.registryprovider", "Method[isvalidpath].ReturnValue"]
    - ["system.string[]", "microsoft.powershell.commands.copyitempropertycommand", "Property[path]"]
    - ["system.int32[]", "microsoft.powershell.commands.psbreakpointupdatercommandbase", "Property[id]"]
    - ["system.string", "microsoft.powershell.commands.newpssessionconfigurationfilecommand", "Property[description]"]
    - ["microsoft.powershell.commands.ostype", "microsoft.powershell.commands.ostype!", "Field[qnx]"]
    - ["system.collections.generic.dictionary<system.string,system.string>", "microsoft.powershell.commands.formobject", "Property[fields]"]
    - ["system.string", "microsoft.powershell.commands.utilityresources!", "Property[algorithmtypenotsupported]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.getpssessionconfigurationcommand", "Property[force]"]
    - ["system.nullable<system.uint64>", "microsoft.powershell.commands.computerinfo", "Property[osfreevirtualmemory]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.getclipboardcommand", "Property[raw]"]
    - ["system.management.automation.scriptblock", "microsoft.powershell.commands.objecteventregistrationbase", "Property[action]"]
    - ["microsoft.powershell.commands.deviceguardsoftwaresecure[]", "microsoft.powershell.commands.deviceguard", "Property[securityservicesconfigured]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.foreachobjectcommand", "Property[usenewrunspace]"]
    - ["system.int64", "microsoft.powershell.commands.webresponseobject", "Property[rawcontentlength]"]
    - ["microsoft.powershell.commands.modulespecification[]", "microsoft.powershell.commands.getcommandcommand", "Property[fullyqualifiedmodule]"]
    - ["microsoft.powershell.commands.outputassemblytype", "microsoft.powershell.commands.outputassemblytype!", "Field[library]"]
    - ["system.string[]", "microsoft.powershell.commands.geteventlogcommand", "Property[entrytype]"]
    - ["system.string[]", "microsoft.powershell.commands.psexecutioncmdlet", "Property[vmname]"]
    - ["system.string", "microsoft.powershell.commands.setitempropertycommand", "Property[name]"]
    - ["system.management.automation.runspaces.pssession", "microsoft.powershell.commands.enterpssessioncommand", "Property[session]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.addcomputercommand", "Property[restart]"]
    - ["system.int64", "microsoft.powershell.commands.historyinfo", "Property[id]"]
    - ["system.object", "microsoft.powershell.commands.getrandomcommandbase", "Property[minimum]"]
    - ["system.string", "microsoft.powershell.commands.filesystemprovider!", "Method[lastwritetimestring].ReturnValue"]
    - ["system.string", "microsoft.powershell.commands.startjobcommand", "Property[certificatethumbprint]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.addtypecommand", "Property[passthru]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.whereobjectcommand", "Property[le]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.copyitemcommand", "Property[recurse]"]
    - ["system.string", "microsoft.powershell.commands.debugrunspacecommand", "Property[name]"]
    - ["microsoft.powershell.commands.wakeuptype", "microsoft.powershell.commands.wakeuptype!", "Field[apmtimer]"]
    - ["system.string[]", "microsoft.powershell.commands.updatehelpcommand", "Property[sourcepath]"]
    - ["system.collections.generic.ienumerable<system.management.automation.completionresult>", "microsoft.powershell.commands.experimentalfeaturenamecompleter", "Method[completeargument].ReturnValue"]
    - ["system.collections.hashtable", "microsoft.powershell.commands.jobcmdletbase", "Property[filter]"]
    - ["system.int32", "microsoft.powershell.commands.getcommandcommand", "Property[totalcount]"]
    - ["system.string[]", "microsoft.powershell.commands.variablecommandbase", "Property[includefilters]"]
    - ["system.string[]", "microsoft.powershell.commands.computerinfo", "Property[csoemstringarray]"]
    - ["system.string", "microsoft.powershell.commands.enterpssessioncommand", "Property[hostname]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.whereobjectcommand", "Property[cnotin]"]
    - ["system.string[]", "microsoft.powershell.commands.getpssessioncommand", "Property[name]"]
    - ["system.string", "microsoft.powershell.commands.enterpssessioncommand", "Property[containerid]"]
    - ["system.management.automation.psobject", "microsoft.powershell.commands.foreachobjectcommand", "Property[inputobject]"]
    - ["system.collections.generic.dictionary<system.guid,system.management.automation.runspaces.pssession>", "microsoft.powershell.commands.psrunspacecmdlet", "Method[getmatchingrunspaces].ReturnValue"]
    - ["system.string[]", "microsoft.powershell.commands.commonrunspacecommandbase", "Property[appdomainname]"]
    - ["system.string[]", "microsoft.powershell.commands.implicitremotingcommandbase", "Property[formattypename]"]
    - ["microsoft.powershell.commands.deviceguardhardwaresecure[]", "microsoft.powershell.commands.deviceguard", "Property[availablesecurityproperties]"]
    - ["system.reflection.assembly[]", "microsoft.powershell.commands.importmodulecommand", "Property[assembly]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.getcomputerrestorepointcommand", "Property[laststatus]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.removealiascommand", "Property[force]"]
    - ["system.management.impersonationlevel", "microsoft.powershell.commands.testconnectioncommand", "Property[impersonation]"]
    - ["system.string", "microsoft.powershell.commands.psrunspacecmdlet!", "Field[idparameterset]"]
    - ["microsoft.powershell.commands.ostype", "microsoft.powershell.commands.ostype!", "Field[os9]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.groupobjectcommand", "Property[noelement]"]
    - ["system.string", "microsoft.powershell.commands.filesystemprovider!", "Method[namestring].ReturnValue"]
    - ["microsoft.powershell.commands.processortype", "microsoft.powershell.commands.processortype!", "Field[mathprocessor]"]
    - ["microsoft.powershell.commands.operatingsystemsku", "microsoft.powershell.commands.operatingsystemsku!", "Field[windowsthinpc]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.readhostcommand", "Property[maskinput]"]
    - ["system.nullable<system.double>", "microsoft.powershell.commands.genericobjectmeasureinfo", "Property[average]"]
    - ["system.string", "microsoft.powershell.commands.filesystemprovider!", "Method[mode].ReturnValue"]
    - ["system.management.automation.pscredential", "microsoft.powershell.commands.enterpssessioncommand", "Property[credential]"]
    - ["system.double", "microsoft.powershell.commands.showcommandcommand", "Property[height]"]
    - ["system.object", "microsoft.powershell.commands.aliasprovider", "Method[newitemdynamicparameters].ReturnValue"]
    - ["system.text.encoding", "microsoft.powershell.commands.formathex", "Property[encoding]"]
    - ["system.collections.idictionary", "microsoft.powershell.commands.addmembercommand", "Property[notepropertymembers]"]
    - ["system.management.automation.scriptblock", "microsoft.powershell.commands.foreachobjectcommand", "Property[end]"]
    - ["system.management.automation.psobject", "microsoft.powershell.commands.measureobjectcommand", "Property[inputobject]"]
    - ["microsoft.powershell.commands.outputassemblytype", "microsoft.powershell.commands.outputassemblytype!", "Field[consoleapplication]"]
    - ["system.string[]", "microsoft.powershell.commands.matchinfocontext", "Property[postcontext]"]
    - ["microsoft.powershell.commands.exportaliasformat", "microsoft.powershell.commands.exportaliascommand", "Property[as]"]
    - ["microsoft.powershell.commands.cpuarchitecture", "microsoft.powershell.commands.cpuarchitecture!", "Field[mips]"]
    - ["system.text.encoding", "microsoft.powershell.commands.basichtmlwebresponseobject", "Property[encoding]"]
    - ["microsoft.win32.registryvaluekind", "microsoft.powershell.commands.registryprovidersetitemdynamicparameter", "Property[type]"]
    - ["system.string[]", "microsoft.powershell.commands.cleareventlogcommand", "Property[logname]"]
    - ["system.management.automation.pscredential", "microsoft.powershell.commands.corecommandwithcredentialsbase", "Property[credential]"]
    - ["system.string", "microsoft.powershell.commands.computerinfo", "Property[oscodeset]"]
    - ["system.int32", "microsoft.powershell.commands.newpssessionoptioncommand", "Property[canceltimeout]"]
    - ["system.string", "microsoft.powershell.commands.writealiascommandbase", "Property[scope]"]
    - ["system.string", "microsoft.powershell.commands.pssessionconfigurationcommandbase", "Property[assemblyname]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.setclipboardcommand", "Property[append]"]
    - ["system.reflection.processorarchitecture", "microsoft.powershell.commands.newmodulemanifestcommand", "Property[processorarchitecture]"]
    - ["system.int32", "microsoft.powershell.commands.genericobjectmeasureinfo", "Property[count]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.exportformatdatacommand", "Property[noclobber]"]
    - ["system.string", "microsoft.powershell.commands.sendmailmessage", "Property[smtpserver]"]
    - ["system.management.automation.psobject", "microsoft.powershell.commands.webcmdletelementcollection", "Method[find].ReturnValue"]
    - ["system.string", "microsoft.powershell.commands.renamecomputercommand", "Property[wsmanauthentication]"]
    - ["system.string", "microsoft.powershell.commands.pshostprocessinfo", "Property[appdomainname]"]
    - ["system.globalization.cultureinfo", "microsoft.powershell.commands.newpssessionoptioncommand", "Property[uiculture]"]
    - ["system.datetime", "microsoft.powershell.commands.historyinfo", "Property[startexecutiontime]"]
    - ["system.nullable<system.int32>", "microsoft.powershell.commands.wsmanconfigurationoption", "Property[idletimeoutsec]"]
    - ["system.guid", "microsoft.powershell.commands.newpsrolecapabilityfilecommand", "Property[guid]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.getuniquecommand", "Property[caseinsensitive]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.importmodulecommand", "Property[usewindowspowershell]"]
    - ["system.management.automation.pscredential", "microsoft.powershell.commands.renamecomputercommand", "Property[domaincredential]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.startjobcommand", "Property[sshtransport]"]
    - ["microsoft.powershell.commands.operatingsystemsku", "microsoft.powershell.commands.operatingsystemsku!", "Field[windowsembeddedhandheld]"]
    - ["system.string", "microsoft.powershell.commands.wmibasecmdlet", "Property[authority]"]
    - ["system.string", "microsoft.powershell.commands.updatetypedatacommand", "Property[serializationmethod]"]
    - ["system.string", "microsoft.powershell.commands.renamecomputerchangeinfo", "Method[tostring].ReturnValue"]
    - ["system.management.automation.scriptblock", "microsoft.powershell.commands.usetransactioncommand", "Property[transactedscript]"]
    - ["microsoft.powershell.commands.textencodingtype", "microsoft.powershell.commands.textencodingtype!", "Field[unicode]"]
    - ["system.nullable<system.uint64>", "microsoft.powershell.commands.computerinfo", "Property[ostotalswapspacesize]"]
    - ["system.string[]", "microsoft.powershell.commands.getitempropertyvaluecommand", "Property[name]"]
    - ["microsoft.powershell.commands.osproductsuite", "microsoft.powershell.commands.osproductsuite!", "Field[smallbusinessserverrestricted]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.renamecomputercommand", "Property[passthru]"]
    - ["microsoft.powershell.commands.ostype", "microsoft.powershell.commands.ostype!", "Field[aix]"]
    - ["system.string[]", "microsoft.powershell.commands.psexecutioncmdlet", "Property[containerid]"]
    - ["system.uri", "microsoft.powershell.commands.enterpssessioncommand", "Property[connectionuri]"]
    - ["microsoft.powershell.commands.resetcapability", "microsoft.powershell.commands.resetcapability!", "Field[notimplemented]"]
    - ["system.string", "microsoft.powershell.commands.copyitemcommand", "Property[filter]"]
    - ["system.management.automation.psobject", "microsoft.powershell.commands.selectobjectcommand", "Property[inputobject]"]
    - ["system.string[]", "microsoft.powershell.commands.testpathcommand", "Property[path]"]
    - ["system.boolean", "microsoft.powershell.commands.dnsnamerepresentation", "Method[equals].ReturnValue"]
    - ["system.string[]", "microsoft.powershell.commands.disconnectpssessioncommand", "Property[computername]"]
    - ["microsoft.powershell.commands.pcsystemtypeex", "microsoft.powershell.commands.pcsystemtypeex!", "Field[mobile]"]
    - ["system.management.automation.psobject", "microsoft.powershell.commands.geterrorcommand", "Property[inputobject]"]
    - ["system.string", "microsoft.powershell.commands.psexecutioncmdlet!", "Field[filepathsshhosthashparameterset]"]
    - ["system.management.automation.pscredential", "microsoft.powershell.commands.invokecommandcommand", "Property[credential]"]
    - ["system.string", "microsoft.powershell.commands.getpsdrivecommand", "Property[scope]"]
    - ["system.int32[]", "microsoft.powershell.commands.commonrunspacecommandbase", "Property[runspaceid]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.measureobjectcommand", "Property[line]"]
    - ["system.string[]", "microsoft.powershell.commands.getpsdrivecommand", "Property[literalname]"]
    - ["system.string", "microsoft.powershell.commands.psremotingbasecmdlet!", "Field[uriparameterset]"]
    - ["system.object[]", "microsoft.powershell.commands.psexecutioncmdlet", "Property[argumentlist]"]
    - ["system.management.automation.pstypename[]", "microsoft.powershell.commands.getcommandcommand", "Property[parametertype]"]
    - ["system.string", "microsoft.powershell.commands.securitydescriptorcommandsbase", "Property[filter]"]
    - ["system.nullable<system.datetime>", "microsoft.powershell.commands.filesystemitemproviderdynamicparameters", "Property[newerthan]"]
    - ["system.string", "microsoft.powershell.commands.registryprovider", "Method[getchildname].ReturnValue"]
    - ["system.char", "microsoft.powershell.commands.importcsvcommand", "Property[delimiter]"]
    - ["system.string", "microsoft.powershell.commands.testjsoncommand", "Property[schema]"]
    - ["system.version", "microsoft.powershell.commands.modulespecification", "Property[requiredversion]"]
    - ["microsoft.powershell.commands.updatehelpscope", "microsoft.powershell.commands.updatehelpscope!", "Field[allusers]"]
    - ["system.string[]", "microsoft.powershell.commands.newpssessionconfigurationfilecommand", "Property[assembliestoload]"]
    - ["system.string", "microsoft.powershell.commands.objectcmdletbase", "Property[culture]"]
    - ["microsoft.powershell.commands.powermanagementcapabilities", "microsoft.powershell.commands.powermanagementcapabilities!", "Field[powersavingmodesenteredautomatically]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.waitjobcommand", "Property[any]"]
    - ["system.string", "microsoft.powershell.commands.newpssessionconfigurationfilecommand", "Property[path]"]
    - ["system.int32", "microsoft.powershell.commands.newfilecatalogcommand", "Property[catalogversion]"]
    - ["system.management.automation.runspaces.authenticationmechanism", "microsoft.powershell.commands.receivepssessioncommand", "Property[authentication]"]
    - ["system.string", "microsoft.powershell.commands.computerinfo", "Property[windowseditionid]"]
    - ["microsoft.powershell.commands.joinoptions", "microsoft.powershell.commands.joinoptions!", "Field[accountcreate]"]
    - ["system.int32", "microsoft.powershell.commands.outstringcommand", "Property[width]"]
    - ["system.object", "microsoft.powershell.commands.updatetypedatacommand", "Property[value]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.objecteventregistrationbase", "Property[forward]"]
    - ["system.management.automation.psdriveinfo", "microsoft.powershell.commands.filesystemprovider", "Method[removedrive].ReturnValue"]
    - ["system.management.automation.psobject", "microsoft.powershell.commands.setitempropertycommand", "Property[inputobject]"]
    - ["system.nullable<system.double>", "microsoft.powershell.commands.genericmeasureinfo", "Property[standarddeviation]"]
    - ["microsoft.powershell.commands.powerstate", "microsoft.powershell.commands.powerstate!", "Field[powersavelowpowermode]"]
    - ["system.text.regularexpressions.match[]", "microsoft.powershell.commands.matchinfo", "Property[matches]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.setlocationcommand", "Property[passthru]"]
    - ["system.string", "microsoft.powershell.commands.setservicecommand", "Property[name]"]
    - ["system.diagnostics.overflowaction", "microsoft.powershell.commands.limiteventlogcommand", "Property[overflowaction]"]
    - ["system.boolean", "microsoft.powershell.commands.removepsdrivecommand", "Property[providersupportsshouldprocess]"]
    - ["system.string[]", "microsoft.powershell.commands.multipleservicecommandbase", "Property[displayname]"]
    - ["system.uri[]", "microsoft.powershell.commands.invokecommandcommand", "Property[connectionuri]"]
    - ["microsoft.powershell.commands.ostype", "microsoft.powershell.commands.ostype!", "Field[mint]"]
    - ["system.string", "microsoft.powershell.commands.catalogcommandsbase", "Property[catalogfilepath]"]
    - ["system.string", "microsoft.powershell.commands.computerinfo", "Property[csstatus]"]
    - ["system.int32", "microsoft.powershell.commands.groupinfo", "Property[count]"]
    - ["microsoft.powershell.commands.ostype", "microsoft.powershell.commands.ostype!", "Field[attunix]"]
    - ["system.string[]", "microsoft.powershell.commands.setservicecommand", "Property[include]"]
    - ["microsoft.powershell.commands.hotfix[]", "microsoft.powershell.commands.computerinfo", "Property[oshotfixes]"]
    - ["microsoft.powershell.commands.cpuavailability", "microsoft.powershell.commands.cpuavailability!", "Field[other]"]
    - ["system.string[]", "microsoft.powershell.commands.updatetypedatacommand", "Property[defaultdisplaypropertyset]"]
    - ["system.string", "microsoft.powershell.commands.invokecommandcommand", "Property[configurationname]"]
    - ["system.string", "microsoft.powershell.commands.psexecutioncmdlet!", "Field[filepathcomputernameparameterset]"]
    - ["system.string", "microsoft.powershell.commands.computerinfo", "Property[oscountrycode]"]
    - ["system.string", "microsoft.powershell.commands.computerinfo", "Property[csname]"]
    - ["system.guid", "microsoft.powershell.commands.debugrunspacecommand", "Property[instanceid]"]
    - ["microsoft.powershell.commands.deviceguardhardwaresecure", "microsoft.powershell.commands.deviceguardhardwaresecure!", "Field[ueficodereadonly]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.testfilecatalogcommand", "Property[detailed]"]
    - ["system.string", "microsoft.powershell.commands.psexecutioncmdlet!", "Field[filepathuriparameterset]"]
    - ["system.collections.objectmodel.collection<system.management.automation.psdriveinfo>", "microsoft.powershell.commands.environmentprovider", "Method[initializedefaultdrives].ReturnValue"]
    - ["system.management.automation.jobstate", "microsoft.powershell.commands.getjobcommand", "Property[childjobstate]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.setpsdebugcommand", "Property[step]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.pushlocationcommand", "Property[passthru]"]
    - ["system.object[]", "microsoft.powershell.commands.converttohtmlcommand", "property[property]"]
    - ["microsoft.powershell.commands.systemelementstate", "microsoft.powershell.commands.systemelementstate!", "Field[nonrecoverable]"]
    - ["system.string", "microsoft.powershell.commands.computerinfo", "Property[osorganization]"]
    - ["system.string", "microsoft.powershell.commands.geteventpssnapin", "Property[vendor]"]
    - ["system.int32", "microsoft.powershell.commands.waiteventcommand", "Property[timeout]"]
    - ["system.nullable<microsoft.powershell.commands.dataexecutionpreventionsupportpolicy>", "microsoft.powershell.commands.computerinfo", "Property[osdataexecutionpreventionsupportpolicy]"]
    - ["system.nullable<system.uint16>", "microsoft.powershell.commands.computerinfo", "Property[biosinstallablelanguages]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.importpowershelldatafilecommand", "Property[skiplimitcheck]"]
    - ["microsoft.powershell.commands.ostype", "microsoft.powershell.commands.ostype!", "Field[ixworks]"]
    - ["system.string", "microsoft.powershell.commands.startjobcommand", "Property[username]"]
    - ["system.object", "microsoft.powershell.commands.getrandomcommand", "Property[minimum]"]
    - ["microsoft.powershell.commands.pcsystemtype", "microsoft.powershell.commands.pcsystemtype!", "Field[workstation]"]
    - ["system.string", "microsoft.powershell.commands.corecommandbase", "Property[filter]"]
    - ["system.net.mail.deliverynotificationoptions", "microsoft.powershell.commands.sendmailmessage", "Property[deliverynotificationoption]"]
    - ["system.string", "microsoft.powershell.commands.filesystemprovider", "Method[getparentpath].ReturnValue"]
    - ["system.int32", "microsoft.powershell.commands.getpssessioncommand", "Property[throttlelimit]"]
    - ["system.string", "microsoft.powershell.commands.computerinfo", "Property[oslocaleid]"]
    - ["system.string", "microsoft.powershell.commands.renameitemcommand", "Property[literalpath]"]
    - ["system.string[]", "microsoft.powershell.commands.convertfrommarkdowncommand", "Property[path]"]
    - ["microsoft.powershell.commands.webrequestmethod", "microsoft.powershell.commands.webrequestmethod!", "Field[post]"]
    - ["system.string", "microsoft.powershell.commands.addtypecommand", "Property[name]"]
    - ["system.string", "microsoft.powershell.commands.newmodulemanifestcommand", "Property[helpinfouri]"]
    - ["system.string[]", "microsoft.powershell.commands.removevariablecommand", "Property[exclude]"]
    - ["system.string", "microsoft.powershell.commands.computerinfo", "Property[windowsregisteredowner]"]
    - ["system.string", "microsoft.powershell.commands.computerinfo", "Property[bioscaption]"]
    - ["system.string", "microsoft.powershell.commands.addcomputercommand", "Property[server]"]
    - ["system.string[]", "microsoft.powershell.commands.newmodulemanifestcommand", "Property[functionstoexport]"]
    - ["system.int32", "microsoft.powershell.commands.getrandomcommand", "Property[count]"]
    - ["system.boolean", "microsoft.powershell.commands.pssessionconfigurationcommandbase", "Property[runasvirtualaccountspecified]"]
    - ["microsoft.powershell.commands.ostype", "microsoft.powershell.commands.ostype!", "Field[netbsd]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.newitemcommand", "Property[force]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.filesystemcontentreaderdynamicparameters", "Property[raw]"]
    - ["system.nullable<microsoft.powershell.commands.bootoptionaction>", "microsoft.powershell.commands.computerinfo", "Property[csbootoptiononwatchdog]"]
    - ["microsoft.powershell.commands.cpuavailability", "microsoft.powershell.commands.cpuavailability!", "Field[notinstalled]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.setclipboardcommand", "Property[asosc52]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.removemodulecommand", "Property[force]"]
    - ["system.boolean", "microsoft.powershell.commands.certificateprovider", "Method[itemexists].ReturnValue"]
    - ["microsoft.powershell.commands.testpathtype", "microsoft.powershell.commands.testpathtype!", "Field[any]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.selectobjectcommand", "Property[unique]"]
    - ["system.string", "microsoft.powershell.commands.registerwmieventcommand", "Property[computername]"]
    - ["system.string", "microsoft.powershell.commands.waiteventcommand", "Property[sourceidentifier]"]
    - ["system.string", "microsoft.powershell.commands.webresponseobject", "Property[rawcontent]"]
    - ["system.security.cryptography.hashalgorithm", "microsoft.powershell.commands.hashcmdletbase", "Field[hasher]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.starttransactioncommand", "Property[independent]"]
    - ["system.string", "microsoft.powershell.commands.getpssessioncommand", "Property[configurationname]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.whereobjectcommand", "Property[ge]"]
    - ["microsoft.powershell.commands.webrequestmethod", "microsoft.powershell.commands.webrequestmethod!", "Field[get]"]
    - ["system.string[]", "microsoft.powershell.commands.processbasecommand", "Property[suppliedcomputername]"]
    - ["microsoft.powershell.commands.ostype", "microsoft.powershell.commands.ostype!", "Field[vse]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.importmodulecommand", "Property[force]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.testconnectioncommand", "Property[ipv6]"]
    - ["microsoft.powershell.commands.netconnectionstatus", "microsoft.powershell.commands.netconnectionstatus!", "Field[hardwaremalfunction]"]
    - ["system.management.automation.runspaces.runspace", "microsoft.powershell.commands.psbreakpointcommandbase", "Property[runspace]"]
    - ["system.string", "microsoft.powershell.commands.updatetypedatacommand", "Property[defaultdisplayproperty]"]
    - ["system.serviceprocess.servicecontroller[]", "microsoft.powershell.commands.serviceoperationbasecommand", "Property[inputobject]"]
    - ["system.uint32", "microsoft.powershell.commands.exportcountercommand", "Property[maxsize]"]
    - ["system.boolean", "microsoft.powershell.commands.pspropertyexpression", "Property[haswildcardcharacters]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.selectstringcommand", "Property[noemphasis]"]
    - ["system.management.automation.runspaces.pssession[]", "microsoft.powershell.commands.newpssessioncommand", "Property[session]"]
    - ["system.string", "microsoft.powershell.commands.computerinfo", "Property[osbootdevice]"]
    - ["microsoft.powershell.commands.displayhinttype", "microsoft.powershell.commands.displayhinttype!", "Field[date]"]
    - ["system.string", "microsoft.powershell.commands.filehashinfo", "Property[hash]"]
    - ["system.string", "microsoft.powershell.commands.newpsdrivecommand", "Property[description]"]
    - ["system.string", "microsoft.powershell.commands.writedebugcommand", "Property[message]"]
    - ["system.management.automation.signature", "microsoft.powershell.commands.setauthenticodesignaturecommand", "Method[performaction].ReturnValue"]
    - ["system.serviceprocess.servicecontroller[]", "microsoft.powershell.commands.multipleservicecommandbase", "Property[inputobject]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.disablepsbreakpointcommand", "Property[passthru]"]
    - ["system.int32", "microsoft.powershell.commands.newpsworkflowexecutionoptioncommand", "Property[maxsessionsperremotenode]"]
    - ["system.string", "microsoft.powershell.commands.newitempropertycommand", "Property[propertytype]"]
    - ["microsoft.powershell.commands.powerplatformrole", "microsoft.powershell.commands.powerplatformrole!", "Field[workstation]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.selectobjectcommand", "Property[caseinsensitive]"]
    - ["system.string", "microsoft.powershell.commands.psuseragent!", "Property[firefox]"]
    - ["microsoft.powershell.commands.osproductsuite[]", "microsoft.powershell.commands.computerinfo", "Property[osproductsuites]"]
    - ["system.string", "microsoft.powershell.commands.setauthenticodesignaturecommand", "Property[timestampserver]"]
    - ["system.string[]", "microsoft.powershell.commands.jobcmdletbase", "Property[command]"]
    - ["system.string", "microsoft.powershell.commands.setaclcommand", "Property[centralaccesspolicy]"]
    - ["system.int32", "microsoft.powershell.commands.debugrunspacecommand", "Property[id]"]
    - ["system.int16", "microsoft.powershell.commands.writeeventlogcommand", "Property[category]"]
    - ["system.object", "microsoft.powershell.commands.newitemcommand", "Property[value]"]
    - ["microsoft.powershell.commands.deviceguardhardwaresecure", "microsoft.powershell.commands.deviceguardhardwaresecure!", "Field[basevirtualizationsupport]"]
    - ["system.string", "microsoft.powershell.commands.securitydescriptorcommandsbase!", "Method[getcentralaccesspolicyname].ReturnValue"]
    - ["system.boolean", "microsoft.powershell.commands.webrequestsession", "Property[usedefaultcredentials]"]
    - ["system.string", "microsoft.powershell.commands.converttohtmlcommand", "Property[charset]"]
    - ["microsoft.powershell.commands.powerstate", "microsoft.powershell.commands.powerstate!", "Field[unknown]"]
    - ["system.nullable<system.uint16>", "microsoft.powershell.commands.processor", "Property[datawidth]"]
    - ["system.nullable<system.int32>", "microsoft.powershell.commands.wsmanconfigurationoption", "Property[maxidletimeoutsec]"]
    - ["system.collections.generic.ienumerable<system.management.automation.completionresult>", "microsoft.powershell.commands.pseditionargumentcompleter", "Method[completeargument].ReturnValue"]
    - ["system.string", "microsoft.powershell.commands.newpssessionconfigurationfilecommand", "Property[companyname]"]
    - ["system.object[]", "microsoft.powershell.commands.objectbase", "property[property]"]
    - ["system.string", "microsoft.powershell.commands.sendmailmessage", "Property[body]"]
    - ["system.string", "microsoft.powershell.commands.setmarkdownoptioncommand", "Property[header4color]"]
    - ["system.string", "microsoft.powershell.commands.writeorthrowerrorcommand", "Property[categorytargettype]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.getmembercommand", "Property[static]"]
    - ["microsoft.powershell.commands.operatingsystemsku", "microsoft.powershell.commands.operatingsystemsku!", "Field[windowsenterprise]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.newmodulemanifestcommand", "Property[requirelicenseacceptance]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.outhostcommand", "Property[paging]"]
    - ["system.string[]", "microsoft.powershell.commands.getcommandcommand", "Property[parametername]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.invokecommandcommand", "Property[remotedebug]"]
    - ["system.management.puttype", "microsoft.powershell.commands.setwmiinstance", "Property[puttype]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.getwmiobjectcommand", "Property[list]"]
    - ["system.string", "microsoft.powershell.commands.memberdefinition", "Property[definition]"]
    - ["microsoft.powershell.commands.ostype", "microsoft.powershell.commands.ostype!", "Field[tandemnt]"]
    - ["system.int32", "microsoft.powershell.commands.addtypecompilererror", "Property[line]"]
    - ["system.guid[]", "microsoft.powershell.commands.jobcmdletbase", "Property[instanceid]"]
    - ["system.int32", "microsoft.powershell.commands.psworkflowexecutionoption", "Property[activityprocessidletimeoutsec]"]
    - ["microsoft.powershell.commands.pcsystemtypeex", "microsoft.powershell.commands.pcsystemtypeex!", "Field[slate]"]
    - ["system.object", "microsoft.powershell.commands.genericobjectmeasureinfo", "Property[maximum]"]
    - ["system.string[]", "microsoft.powershell.commands.measureobjectcommand", "property[property]"]
    - ["system.string", "microsoft.powershell.commands.getcredentialcommand", "Property[title]"]
    - ["system.boolean", "microsoft.powershell.commands.modulecmdletbase", "Property[basedisablenamechecking]"]
    - ["system.int32", "microsoft.powershell.commands.psremotingbasecmdlet", "Property[port]"]
    - ["system.string", "microsoft.powershell.commands.writeorthrowerrorcommand", "Property[categoryactivity]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.newvariablecommand", "Property[passthru]"]
    - ["system.datetime", "microsoft.powershell.commands.importcountercommand", "Property[endtime]"]
    - ["system.object", "microsoft.powershell.commands.filesystemprovider", "Method[removeitemdynamicparameters].ReturnValue"]
    - ["system.management.automation.psobject", "microsoft.powershell.commands.tracecommandcommand", "Property[inputobject]"]
    - ["system.string[]", "microsoft.powershell.commands.removeitemcommand", "Property[include]"]
    - ["system.string", "microsoft.powershell.commands.newmodulemanifestcommand", "Property[companyname]"]
    - ["microsoft.powershell.commands.webauthenticationtype", "microsoft.powershell.commands.webauthenticationtype!", "Field[bearer]"]
    - ["microsoft.powershell.commands.dataexecutionpreventionsupportpolicy", "microsoft.powershell.commands.dataexecutionpreventionsupportpolicy!", "Field[alwayson]"]
    - ["system.string", "microsoft.powershell.commands.setservicecommand", "Property[status]"]
    - ["system.management.automation.psobject", "microsoft.powershell.commands.addmembercommand", "Property[inputobject]"]
    - ["system.string", "microsoft.powershell.commands.psremotingcmdlet", "Method[resolveappname].ReturnValue"]
    - ["system.string", "microsoft.powershell.commands.setservicecommand", "Property[description]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.debugjobcommand", "Property[breakall]"]
    - ["microsoft.powershell.commands.wmistate", "microsoft.powershell.commands.wmistate!", "Field[notstarted]"]
    - ["system.int32", "microsoft.powershell.commands.webresponseobject", "Property[statuscode]"]
    - ["system.management.automation.pscredential", "microsoft.powershell.commands.addcomputercommand", "Property[localcredential]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.invokecommandcommand", "Property[enablenetworkaccess]"]
    - ["system.int32", "microsoft.powershell.commands.writeprogresscommand", "Property[sourceid]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.splitpathcommand", "Property[qualifier]"]
    - ["microsoft.powershell.commands.webrequestmethod", "microsoft.powershell.commands.webrequestmethod!", "Field[delete]"]
    - ["system.string", "microsoft.powershell.commands.newpssessionconfigurationfilecommand", "Property[groupmanagedserviceaccount]"]
    - ["system.nullable<system.int32>", "microsoft.powershell.commands.newpstransportoptioncommand", "Property[idletimeoutsec]"]
    - ["system.string[]", "microsoft.powershell.commands.removeitemcommand", "Property[path]"]
    - ["system.boolean", "microsoft.powershell.commands.psexecutioncmdlet", "Property[isliteralpath]"]
    - ["system.string", "microsoft.powershell.commands.importlocalizeddata", "Property[filename]"]
    - ["system.int64[]", "microsoft.powershell.commands.gethistorycommand", "Property[id]"]
    - ["system.string[]", "microsoft.powershell.commands.filesystemproviderremoveitemdynamicparameters", "Property[stream]"]
    - ["system.string", "microsoft.powershell.commands.newpsrolecapabilityfilecommand", "Property[description]"]
    - ["system.management.automation.variableaccessmode", "microsoft.powershell.commands.setpsbreakpointcommand", "Property[mode]"]
    - ["microsoft.powershell.commands.ostype", "microsoft.powershell.commands.ostype!", "Field[decnt]"]
    - ["system.string[]", "microsoft.powershell.commands.newmodulemanifestcommand", "Property[scriptstoprocess]"]
    - ["system.management.automation.pssessiontypeoption", "microsoft.powershell.commands.pssessionconfigurationcommandbase", "Property[sessiontypeoption]"]
    - ["system.guid[]", "microsoft.powershell.commands.psrunspacecmdlet", "Property[instanceid]"]
    - ["system.string", "microsoft.powershell.commands.testmodulemanifestcommand", "Property[path]"]
    - ["system.string", "microsoft.powershell.commands.startjobcommand", "Property[type]"]
    - ["system.string", "microsoft.powershell.commands.psremotingcmdlet!", "Field[computerinstanceidparameterset]"]
    - ["system.string", "microsoft.powershell.commands.computerinfo", "Property[oslocale]"]
    - ["system.object", "microsoft.powershell.commands.functionprovider", "Method[newitemdynamicparameters].ReturnValue"]
    - ["system.nullable<system.int16>", "microsoft.powershell.commands.computerinfo", "Property[oscurrenttimezone]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.getwineventcommand", "Property[oldest]"]
    - ["microsoft.powershell.commands.webcmdletelementcollection", "microsoft.powershell.commands.htmlwebresponseobject", "Property[allelements]"]
    - ["microsoft.powershell.commands.webrequestmethod", "microsoft.powershell.commands.webrequestmethod!", "Field[default]"]
    - ["microsoft.powershell.commands.firmwaretype", "microsoft.powershell.commands.firmwaretype!", "Field[uefi]"]
    - ["microsoft.powershell.commands.webrequestmethod", "microsoft.powershell.commands.webrequestpscmdlet", "Property[method]"]
    - ["system.string[]", "microsoft.powershell.commands.getwineventcommand", "Property[path]"]
    - ["system.string[]", "microsoft.powershell.commands.getaliascommand", "Property[exclude]"]
    - ["system.string", "microsoft.powershell.commands.htmlwebresponseobject", "Property[content]"]
    - ["system.string[]", "microsoft.powershell.commands.psremotingbasecmdlet", "Property[resolvedcomputernames]"]
    - ["system.collections.hashtable[]", "microsoft.powershell.commands.psremotingbasecmdlet", "Property[sshconnection]"]
    - ["system.string[]", "microsoft.powershell.commands.multipleservicecommandbase", "Property[exclude]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.renameitemcommand", "Property[force]"]
    - ["system.int64", "microsoft.powershell.commands.newpsworkflowexecutionoptioncommand", "Property[maxpersistencestoresizegb]"]
    - ["microsoft.powershell.commands.outtarget", "microsoft.powershell.commands.outtarget!", "Field[job]"]
    - ["system.string[]", "microsoft.powershell.commands.getprocesscommand", "Property[computername]"]
    - ["system.security.accesscontrol.objectsecurity", "microsoft.powershell.commands.registryprovider", "Method[newsecuritydescriptorfrompath].ReturnValue"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.stopjobcommand", "Property[passthru]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.selectstringcommand", "Property[list]"]
    - ["system.string", "microsoft.powershell.commands.utilityresources!", "Property[formathexpathprefix]"]
    - ["system.string", "microsoft.powershell.commands.formobject", "Property[id]"]
    - ["system.object[]", "microsoft.powershell.commands.importmodulecommand", "Property[argumentlist]"]
    - ["system.management.impersonationlevel", "microsoft.powershell.commands.wmibasecmdlet", "Property[impersonation]"]
    - ["system.nullable<system.int32>", "microsoft.powershell.commands.newpstransportoptioncommand", "Property[maxsessions]"]
    - ["microsoft.powershell.commands.ostype", "microsoft.powershell.commands.ostype!", "Field[vxworks]"]
    - ["microsoft.powershell.commands.powerstate", "microsoft.powershell.commands.powerstate!", "Field[powersavestandby]"]
    - ["system.int32", "microsoft.powershell.commands.waitprocesscommand", "Property[timeout]"]
    - ["microsoft.powershell.commands.joinoptions", "microsoft.powershell.commands.joinoptions!", "Field[installinvoke]"]
    - ["system.object", "microsoft.powershell.commands.filesystemprovider", "Method[getcontentreaderdynamicparameters].ReturnValue"]
    - ["microsoft.powershell.commands.deviceguardsoftwaresecure", "microsoft.powershell.commands.deviceguardsoftwaresecure!", "Field[hypervisorenforcedcodeintegrity]"]
    - ["system.int64", "microsoft.powershell.commands.getdatecommand", "Property[unixtimeseconds]"]
    - ["system.management.automation.psmoduleinfo[]", "microsoft.powershell.commands.savehelpcommand", "Property[module]"]
    - ["system.collections.objectmodel.collection<system.management.automation.psdriveinfo>", "microsoft.powershell.commands.certificateprovider", "Method[initializedefaultdrives].ReturnValue"]
    - ["system.nullable<system.int32>", "microsoft.powershell.commands.newpstransportoptioncommand", "Property[maxprocessespersession]"]
    - ["system.collections.hashtable[]", "microsoft.powershell.commands.importworkflowcommand!", "Method[mergeparametercollection].ReturnValue"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.getmodulecommand", "Property[refresh]"]
    - ["system.int32", "microsoft.powershell.commands.setpsdebugcommand", "Property[trace]"]
    - ["system.string", "microsoft.powershell.commands.importaliascommand", "Property[path]"]
    - ["system.nullable<system.boolean>", "microsoft.powershell.commands.computerinfo", "Property[csautomaticresetcapability]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.importmodulecommand", "Property[passthru]"]
    - ["system.string", "microsoft.powershell.commands.testcomputersecurechannelcommand", "Property[server]"]
    - ["system.string", "microsoft.powershell.commands.wmibasecmdlet", "Property[locale]"]
    - ["system.string", "microsoft.powershell.commands.psremotingbasecmdlet", "Property[applicationname]"]
    - ["system.string[]", "microsoft.powershell.commands.disablecomputerrestorecommand", "Property[drive]"]
    - ["system.string[]", "microsoft.powershell.commands.removepsdrivecommand", "Property[name]"]
    - ["microsoft.powershell.commands.waitforservicetypes", "microsoft.powershell.commands.restartcomputercommand", "Property[for]"]
    - ["system.string[]", "microsoft.powershell.commands.setclipboardcommand", "Property[path]"]
    - ["system.string[]", "microsoft.powershell.commands.showcontrolpanelitemcommand", "Property[canonicalname]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.pssessionconfigurationcommandbase", "Property[noservicerestart]"]
    - ["system.string", "microsoft.powershell.commands.filesystemcontentdynamicparametersbase", "Property[stream]"]
    - ["system.string[]", "microsoft.powershell.commands.getwmiobjectcommand", "property[property]"]
    - ["system.string", "microsoft.powershell.commands.testjsoncommand", "Property[schemafile]"]
    - ["microsoft.powershell.commands.historyinfo", "microsoft.powershell.commands.historyinfo", "Method[clone].ReturnValue"]
    - ["system.management.automation.pscredential", "microsoft.powershell.commands.restartcomputercommand", "Property[credential]"]
    - ["system.string", "microsoft.powershell.commands.sendmailmessage", "Property[from]"]
    - ["system.string", "microsoft.powershell.commands.removewmiobject", "Property[path]"]
    - ["system.nullable<system.uint64>", "microsoft.powershell.commands.computerinfo", "Property[ostotalvirtualmemorysize]"]
    - ["system.xml.xmldocument", "microsoft.powershell.commands.getwineventcommand", "Property[filterxml]"]
    - ["microsoft.powershell.commands.cpustatus", "microsoft.powershell.commands.cpustatus!", "Field[disabledbybios]"]
    - ["system.object", "microsoft.powershell.commands.writeinformationcommand", "Property[messagedata]"]
    - ["system.string", "microsoft.powershell.commands.testjsoncommand", "Property[literalpath]"]
    - ["system.string[]", "microsoft.powershell.commands.limiteventlogcommand", "Property[logname]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.newpssessionoptioncommand", "Property[skipcncheck]"]
    - ["system.boolean", "microsoft.powershell.commands.enhancedkeyusagerepresentation", "Method[equals].ReturnValue"]
    - ["system.management.automation.psobject", "microsoft.powershell.commands.psexecutioncmdlet", "Property[inputobject]"]
    - ["system.string[]", "microsoft.powershell.commands.importcsvcommand", "Property[header]"]
    - ["system.string", "microsoft.powershell.commands.getpssessioncommand", "Property[certificatethumbprint]"]
    - ["system.string", "microsoft.powershell.commands.newmodulemanifestcommand", "Property[rootmodule]"]
    - ["microsoft.powershell.executionpolicy", "microsoft.powershell.commands.newpssessionconfigurationfilecommand", "Property[executionpolicy]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.importpssessioncommand", "Property[disablenamechecking]"]
    - ["system.int32", "microsoft.powershell.commands.webrequestsession", "Property[maximumretrycount]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.exportpssessioncommand", "Property[force]"]
    - ["system.management.automation.pscredential", "microsoft.powershell.commands.updatablehelpcommandbase", "Property[credential]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.importmodulecommand", "Property[noclobber]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.psremotingbasecmdlet", "Property[runasadministrator]"]
    - ["microsoft.powershell.commands.cpuavailability", "microsoft.powershell.commands.cpuavailability!", "Field[paused]"]
    - ["system.string[]", "microsoft.powershell.commands.getservicecommand", "Property[computername]"]
    - ["system.string[]", "microsoft.powershell.commands.getcommandcommand", "Property[name]"]
    - ["system.string", "microsoft.powershell.commands.neweventlogcommand", "Property[messageresourcefile]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.whereobjectcommand", "Property[in]"]
    - ["system.boolean", "microsoft.powershell.commands.registryprovider", "Method[itemexists].ReturnValue"]
    - ["microsoft.powershell.commands.displayhinttype", "microsoft.powershell.commands.setdatecommand", "Property[displayhint]"]
    - ["system.string", "microsoft.powershell.commands.psrunspacecmdlet!", "Field[nameparameterset]"]
    - ["microsoft.powershell.commands.wakeuptype", "microsoft.powershell.commands.wakeuptype!", "Field[powerswitch]"]
    - ["system.management.automation.job[]", "microsoft.powershell.commands.removejobcommand", "Property[job]"]
    - ["system.collections.idictionary", "microsoft.powershell.commands.newobjectcommand", "property[property]"]
    - ["system.string[]", "microsoft.powershell.commands.getcontrolpanelitemcommand", "Property[canonicalname]"]
    - ["system.string", "microsoft.powershell.commands.setlocationcommand", "Property[stackname]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.getpssessioncommand", "Property[allowredirection]"]
    - ["system.string[]", "microsoft.powershell.commands.psrunspacecmdlet", "Property[containerid]"]
    - ["system.collections.objectmodel.collection<system.management.automation.pssnapininfo>", "microsoft.powershell.commands.pssnapincommandbase", "Method[getsnapins].ReturnValue"]
    - ["system.string", "microsoft.powershell.commands.starttranscriptcommand", "Property[path]"]
    - ["system.string[]", "microsoft.powershell.commands.getpsdrivecommand", "Property[psprovider]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.whereobjectcommand", "Property[notmatch]"]
    - ["system.string[]", "microsoft.powershell.commands.converttohtmlcommand", "Property[postcontent]"]
    - ["system.security.securestring", "microsoft.powershell.commands.webrequestpscmdlet", "Property[token]"]
    - ["system.nullable<system.uint16>", "microsoft.powershell.commands.computerinfo", "Property[biossystembiosminorversion]"]
    - ["system.nullable<system.int32>", "microsoft.powershell.commands.newpstransportoptioncommand", "Property[maxidletimeoutsec]"]
    - ["system.int32", "microsoft.powershell.commands.restorecomputercommand", "Property[restorepoint]"]
    - ["system.collections.generic.dictionary<system.guid,system.management.automation.runspaces.pssession>", "microsoft.powershell.commands.psrunspacecmdlet", "Method[getmatchingrunspacesbyrunspaceid].ReturnValue"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.compareobjectcommand", "Property[excludedifferent]"]
    - ["microsoft.powershell.commands.ostype", "microsoft.powershell.commands.ostype!", "Field[sunos]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.whereobjectcommand", "Property[eq]"]
    - ["system.string", "microsoft.powershell.commands.networkadapter", "Property[dhcpserver]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.clearvariablecommand", "Property[force]"]
    - ["microsoft.powershell.commands.serverlevel", "microsoft.powershell.commands.serverlevel!", "Field[fullserver]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.testconnectioncommand", "Property[dontfragment]"]
    - ["system.object", "microsoft.powershell.commands.writeorthrowerrorcommand", "Property[targetobject]"]
    - ["system.string[]", "microsoft.powershell.commands.invokecommandcommand", "Property[computername]"]
    - ["system.string", "microsoft.powershell.commands.exportpssessioncommand", "Property[outputmodule]"]
    - ["system.management.automation.runspaces.authenticationmechanism", "microsoft.powershell.commands.connectpssessioncommand", "Property[authentication]"]
    - ["system.string", "microsoft.powershell.commands.importmodulecommand", "Property[cimnamespace]"]
    - ["system.string", "microsoft.powershell.commands.psexecutioncmdlet!", "Field[literalfilepathcomputernameparameterset]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.restartcomputercommand", "Property[asjob]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.setvariablecommand", "Property[force]"]
    - ["microsoft.powershell.commands.wakeuptype", "microsoft.powershell.commands.wakeuptype!", "Field[unknown]"]
    - ["system.management.automation.pscredential", "microsoft.powershell.commands.newwebserviceproxy", "Property[credential]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.writealiascommandbase", "Property[force]"]
    - ["system.string", "microsoft.powershell.commands.outfilecommand", "Property[filepath]"]
    - ["system.string", "microsoft.powershell.commands.modulespecification", "Property[maximumversion]"]
    - ["system.string[]", "microsoft.powershell.commands.addtypecommandbase", "Property[assemblyname]"]
    - ["microsoft.powershell.commands.filesystemcmdletproviderencoding", "microsoft.powershell.commands.filesystemcmdletproviderencoding!", "Field[utf8]"]
    - ["microsoft.powershell.commands.pcsystemtypeex", "microsoft.powershell.commands.pcsystemtypeex!", "Field[performanceserver]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.geteventlogcommand", "Property[list]"]
    - ["microsoft.powershell.commands.language", "microsoft.powershell.commands.addtypecommand", "Property[language]"]
    - ["system.management.automation.psprimitivedictionary", "microsoft.powershell.commands.newpssessionoptioncommand", "Property[applicationarguments]"]
    - ["microsoft.powershell.commands.operatingsystemsku", "microsoft.powershell.commands.operatingsystemsku!", "Field[enterpriseedition]"]
    - ["system.string", "microsoft.powershell.commands.computerinfo", "Property[windowsbuildlabex]"]
    - ["system.management.automation.psobject", "microsoft.powershell.commands.webcmdletelementcollection", "Method[findbyid].ReturnValue"]
    - ["microsoft.powershell.commands.netconnectionstatus", "microsoft.powershell.commands.netconnectionstatus!", "Field[hardwaredisabled]"]
    - ["system.int32", "microsoft.powershell.commands.removeeventcommand", "Property[eventidentifier]"]
    - ["system.string", "microsoft.powershell.commands.addtypecommand", "Property[namespace]"]
    - ["system.nullable<microsoft.powershell.commands.cpuarchitecture>", "microsoft.powershell.commands.processor", "Property[architecture]"]
    - ["system.string[]", "microsoft.powershell.commands.exportmodulemembercommand", "Property[cmdlet]"]
    - ["system.text.encoding", "microsoft.powershell.commands.sendmailmessage", "Property[encoding]"]
    - ["system.string[]", "microsoft.powershell.commands.gettypedatacommand", "Property[typename]"]
    - ["microsoft.powershell.commands.deviceguardhardwaresecure", "microsoft.powershell.commands.deviceguardhardwaresecure!", "Field[securememoryoverwrite]"]
    - ["system.nullable<system.int16>", "microsoft.powershell.commands.computerinfo", "Property[biosembeddedcontrollerminorversion]"]
    - ["microsoft.powershell.commands.cpuavailability", "microsoft.powershell.commands.cpuavailability!", "Field[notintalled]"]
    - ["system.string", "microsoft.powershell.commands.importworkflowcommand!", "Property[parametererrormessage]"]
    - ["system.nullable<microsoft.powershell.commands.hardwaresecurity>", "microsoft.powershell.commands.computerinfo", "Property[cskeyboardpasswordstatus]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.importcountercommand", "Property[summary]"]
    - ["system.string", "microsoft.powershell.commands.psexecutioncmdlet!", "Field[filepathsshhostparameterset]"]
    - ["system.object[]", "microsoft.powershell.commands.newpsrolecapabilityfilecommand", "Property[modulestoimport]"]
    - ["system.string[]", "microsoft.powershell.commands.psrunspacecmdlet", "Property[vmname]"]
    - ["system.datetime", "microsoft.powershell.commands.geteventlogcommand", "Property[after]"]
    - ["system.string", "microsoft.powershell.commands.computerinfo", "Property[windowsregisteredorganization]"]
    - ["system.nullable<microsoft.powershell.commands.firmwaretype>", "microsoft.powershell.commands.computerinfo", "Property[biosfirmwaretype]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.groupobjectcommand", "Property[asstring]"]
    - ["system.serviceprocess.servicecontroller", "microsoft.powershell.commands.removeservicecommand", "Property[inputobject]"]
    - ["system.security.accesscontrol.commonsecuritydescriptor", "microsoft.powershell.commands.securitydescriptorinfo", "Field[rawdescriptor]"]
    - ["system.nullable<system.boolean>", "microsoft.powershell.commands.computerinfo", "Property[hypervisorpresent]"]
    - ["system.string[]", "microsoft.powershell.commands.stopprocesscommand", "Property[name]"]
    - ["microsoft.powershell.commands.wakeuptype", "microsoft.powershell.commands.wakeuptype!", "Field[modemring]"]
    - ["system.int32", "microsoft.powershell.commands.webrequestsession", "Property[retryintervalinseconds]"]
    - ["microsoft.powershell.commands.cpuavailability", "microsoft.powershell.commands.cpuavailability!", "Field[unknown]"]
    - ["system.string", "microsoft.powershell.commands.psremotingbasecmdlet", "Property[keyfilepath]"]
    - ["system.string[]", "microsoft.powershell.commands.matchinfocontext", "Property[displaypostcontext]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.outfilecommand", "Property[noclobber]"]
    - ["microsoft.powershell.commands.powerplatformrole", "microsoft.powershell.commands.powerplatformrole!", "Field[mobile]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.enablepssessionconfigurationcommand", "Property[skipnetworkprofilecheck]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.startjobcommand", "Property[runasadministrator]"]
    - ["system.string[]", "microsoft.powershell.commands.computerinfo", "Property[bioslistoflanguages]"]
    - ["system.string", "microsoft.powershell.commands.writealiascommandbase", "Property[description]"]
    - ["system.string[]", "microsoft.powershell.commands.importcountercommand", "Property[listset]"]
    - ["system.nullable<system.uint64>", "microsoft.powershell.commands.computerinfo", "Property[csphyicallyinstalledmemory]"]
    - ["system.string", "microsoft.powershell.commands.startprocesscommand", "Property[redirectstandarderror]"]
    - ["system.string[]", "microsoft.powershell.commands.restartcomputercommand", "Property[computername]"]
    - ["system.int32[]", "microsoft.powershell.commands.getrunspacecommand", "Property[id]"]
    - ["system.string", "microsoft.powershell.commands.renameitemcommand", "Property[newname]"]
    - ["system.string", "microsoft.powershell.commands.addtypecompilererror", "Property[errortext]"]
    - ["system.nullable<system.datetime>", "microsoft.powershell.commands.computerinfo", "Property[osinstalldate]"]
    - ["system.string[]", "microsoft.powershell.commands.newmodulemanifestcommand", "Property[requiredassemblies]"]
    - ["system.management.automation.psobject[]", "microsoft.powershell.commands.neweventcommand", "Property[eventarguments]"]
    - ["system.string[]", "microsoft.powershell.commands.limiteventlogcommand", "Property[computername]"]
    - ["system.management.automation.psobject", "microsoft.powershell.commands.webcmdletelementcollection", "Method[findbyname].ReturnValue"]
    - ["system.int32", "microsoft.powershell.commands.webrequestpscmdlet", "Property[connectiontimeoutseconds]"]
    - ["microsoft.powershell.commands.adminpasswordstatus", "microsoft.powershell.commands.adminpasswordstatus!", "Field[notimplemented]"]
    - ["system.management.automation.job[]", "microsoft.powershell.commands.suspendjobcommand", "Property[job]"]
    - ["system.string", "microsoft.powershell.commands.networkadapter", "Property[connectionid]"]
    - ["microsoft.powershell.commands.netconnectionstatus", "microsoft.powershell.commands.netconnectionstatus!", "Field[connecting]"]
    - ["system.exception", "microsoft.powershell.commands.writeorthrowerrorcommand", "Property[exception]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.measureobjectcommand", "Property[ignorewhitespace]"]
    - ["system.nullable<system.uint64>", "microsoft.powershell.commands.computerinfo", "Property[cstotalphysicalmemory]"]
    - ["system.string", "microsoft.powershell.commands.renamecomputercommand", "Property[computername]"]
    - ["system.diagnostics.process[]", "microsoft.powershell.commands.getprocesscommand", "Property[inputobject]"]
    - ["system.net.sockets.unixdomainsocketendpoint", "microsoft.powershell.commands.webrequestpscmdlet", "Property[unixsocket]"]
    - ["system.int32", "microsoft.powershell.commands.convertfromjsoncommand", "Property[depth]"]
    - ["system.string", "microsoft.powershell.commands.securitydescriptorinfo", "Field[owner]"]
    - ["microsoft.powershell.commands.pcsystemtype", "microsoft.powershell.commands.pcsystemtype!", "Field[performanceserver]"]
    - ["system.object[]", "microsoft.powershell.commands.newpssessionconfigurationfilecommand", "Property[visiblefunctions]"]
    - ["system.management.automation.scopeditemoptions", "microsoft.powershell.commands.writealiascommandbase", "Property[option]"]
    - ["microsoft.powershell.commands.powerstate", "microsoft.powershell.commands.powerstate!", "Field[poweroff]"]
    - ["system.string", "microsoft.powershell.commands.pssessionconfigurationcommandbase", "Property[applicationbase]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.compareobjectcommand", "Property[passthru]"]
    - ["system.string[]", "microsoft.powershell.commands.corecommandbase", "Property[exclude]"]
    - ["system.string", "microsoft.powershell.commands.setlocationcommand", "Property[literalpath]"]
    - ["microsoft.powershell.commands.joinoptions", "microsoft.powershell.commands.joinoptions!", "Field[unsecuredjoin]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.webrequestpscmdlet", "Property[skiphttperrorcheck]"]
    - ["system.int32", "microsoft.powershell.commands.newpsworkflowexecutionoptioncommand", "Property[maxdisconnectedsessions]"]
    - ["system.nullable<system.uint16>", "microsoft.powershell.commands.processor", "Property[addresswidth]"]
    - ["system.string", "microsoft.powershell.commands.removeitemcommand", "Property[filter]"]
    - ["microsoft.powershell.commands.operatingsystemsku", "microsoft.powershell.commands.operatingsystemsku!", "Field[homebasicnedition]"]
    - ["system.string[]", "microsoft.powershell.commands.addtypecommand", "Property[assemblyname]"]
    - ["system.string[]", "microsoft.powershell.commands.setitemcommand", "Property[exclude]"]
    - ["system.string", "microsoft.powershell.commands.computerinfo", "Property[csprimaryownername]"]
    - ["microsoft.powershell.commands.cpuavailability", "microsoft.powershell.commands.cpuavailability!", "Field[powersaveunknown]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.exportcountercommand", "Property[circular]"]
    - ["system.string", "microsoft.powershell.commands.computerchangeinfo", "Property[computername]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.sortobjectcommand", "Property[descending]"]
    - ["system.string", "microsoft.powershell.commands.newobjectcommand", "Property[comobject]"]
    - ["system.management.automation.cmsmessagerecipient[]", "microsoft.powershell.commands.protectcmsmessagecommand", "Property[to]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.newpssessionconfigurationfilecommand", "Property[mountuserdrive]"]
    - ["system.object[]", "microsoft.powershell.commands.compareobjectcommand", "property[property]"]
    - ["system.object", "microsoft.powershell.commands.converttojsoncommand", "Property[inputobject]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.enablepsremotingcommand", "Property[skipnetworkprofilecheck]"]
    - ["system.int32", "microsoft.powershell.commands.newpssessionoptioncommand", "Property[idletimeout]"]
    - ["system.int64", "microsoft.powershell.commands.getcontentcommand", "Property[totalcount]"]
    - ["system.int32", "microsoft.powershell.commands.gethistorycommand", "Property[count]"]
    - ["system.string", "microsoft.powershell.commands.startjobcommand", "Property[name]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.measureobjectcommand", "Property[word]"]
    - ["system.boolean", "microsoft.powershell.commands.filesystemcontentreaderdynamicparameters", "Property[delimiterspecified]"]
    - ["system.string[]", "microsoft.powershell.commands.getcomputerinfocommand", "property[property]"]
    - ["microsoft.powershell.commands.osproductsuite", "microsoft.powershell.commands.osproductsuite!", "Field[smallbusinessserver]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.measureobjectcommand", "Property[maximum]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.whereobjectcommand", "Property[not]"]
    - ["system.string", "microsoft.powershell.commands.psrunspacecmdlet!", "Field[instanceidparameterset]"]
    - ["system.string", "microsoft.powershell.commands.geteventpssnapin", "Property[vendorresource]"]
    - ["system.string[]", "microsoft.powershell.commands.resumejobcommand", "Property[command]"]
    - ["system.string[]", "microsoft.powershell.commands.moveitemcommand", "Property[exclude]"]
    - ["system.management.automation.psobject", "microsoft.powershell.commands.showmarkdowncommand", "Property[inputobject]"]
    - ["microsoft.powershell.commands.cpuavailability", "microsoft.powershell.commands.cpuavailability!", "Field[notconfigured]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.passthroughcontentcommandbase", "Property[passthru]"]
    - ["system.nullable<system.boolean>", "microsoft.powershell.commands.computerinfo", "Property[osdataexecutionpreventionavailable]"]
    - ["system.string", "microsoft.powershell.commands.newpsrolecapabilityfilecommand", "Property[author]"]
    - ["system.string", "microsoft.powershell.commands.utilityresources!", "Property[filereaderror]"]
    - ["microsoft.powershell.commands.hardwaresecurity", "microsoft.powershell.commands.hardwaresecurity!", "Field[enabled]"]
    - ["system.string[]", "microsoft.powershell.commands.showcontrolpanelitemcommand", "Property[name]"]
    - ["system.string[]", "microsoft.powershell.commands.removeeventlogcommand", "Property[computername]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.resolvepathcommand", "Property[relative]"]
    - ["system.nullable<system.int32>", "microsoft.powershell.commands.newpstransportoptioncommand", "Property[maxconcurrentusers]"]
    - ["system.string", "microsoft.powershell.commands.addmembercommand", "Property[typename]"]
    - ["system.collections.objectmodel.collection<system.management.automation.psdriveinfo>", "microsoft.powershell.commands.variableprovider", "Method[initializedefaultdrives].ReturnValue"]
    - ["microsoft.powershell.commands.joinoptions", "microsoft.powershell.commands.joinoptions!", "Field[win9xupgrade]"]
    - ["system.string[]", "microsoft.powershell.commands.getverbcommand", "Property[verb]"]
    - ["system.object", "microsoft.powershell.commands.registryprovider", "Method[renamepropertydynamicparameters].ReturnValue"]
    - ["system.string[]", "microsoft.powershell.commands.importlocalizeddata", "Property[supportedcommand]"]
    - ["system.version", "microsoft.powershell.commands.webrequestpscmdlet", "Property[httpversion]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.connectpssessioncommand", "Property[usessl]"]
    - ["system.string", "microsoft.powershell.commands.outfilecommand", "Property[encoding]"]
    - ["microsoft.powershell.commands.powerplatformrole", "microsoft.powershell.commands.powerplatformrole!", "Field[appliancepc]"]
    - ["microsoft.powershell.commands.wakeuptype", "microsoft.powershell.commands.wakeuptype!", "Field[acpowerrestored]"]
    - ["system.string", "microsoft.powershell.commands.importlocalizeddata", "Property[bindingvariable]"]
    - ["system.nullable<system.uint32>", "microsoft.powershell.commands.computerinfo", "Property[osnumberofprocesses]"]
    - ["system.nullable<microsoft.powershell.commands.bootoptionaction>", "microsoft.powershell.commands.computerinfo", "Property[csbootoptiononlimit]"]
    - ["system.string[]", "microsoft.powershell.commands.testconnectioncommand", "Property[computername]"]
    - ["system.string", "microsoft.powershell.commands.variablecommandbase", "Property[scope]"]
    - ["system.management.automation.pscredential", "microsoft.powershell.commands.testconnectioncommand", "Property[credential]"]
    - ["system.management.automation.pscredential", "microsoft.powershell.commands.setservicecommand", "Property[credential]"]
    - ["system.collections.ilist", "microsoft.powershell.commands.sessionstateproviderbasecontentreaderwriter", "Method[read].ReturnValue"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.gethelpcommand", "Property[full]"]
    - ["microsoft.powershell.commands.openmode", "microsoft.powershell.commands.openmode!", "Field[overwrite]"]
    - ["system.object", "microsoft.powershell.commands.registryprovider", "Method[copypropertydynamicparameters].ReturnValue"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.settracesourcecommand", "Property[passthru]"]
    - ["microsoft.powershell.commands.textencodingtype", "microsoft.powershell.commands.textencodingtype!", "Field[bigendianutf32]"]
    - ["system.string[]", "microsoft.powershell.commands.getservicecommand", "Property[name]"]
    - ["microsoft.powershell.commands.servicestartuptype", "microsoft.powershell.commands.servicestartuptype!", "Field[disabled]"]
    - ["system.uint32", "microsoft.powershell.commands.getcommandcommand", "Property[fuzzyminimumdistance]"]
    - ["system.string", "microsoft.powershell.commands.renamecomputercommand", "Property[protocol]"]
    - ["system.management.automation.psmoduleinfo[]", "microsoft.powershell.commands.removemodulecommand", "Property[moduleinfo]"]
    - ["system.string", "microsoft.powershell.commands.psuseragent!", "Property[chrome]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.psremotingbasecmdlet", "Property[usessl]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.suspendjobcommand", "Property[force]"]
    - ["system.string[]", "microsoft.powershell.commands.geteventlogcommand", "Property[username]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.getcommandcommand", "Property[useabbreviationexpansion]"]
    - ["microsoft.powershell.commands.webcmdletelementcollection", "microsoft.powershell.commands.htmlwebresponseobject", "Property[scripts]"]
    - ["system.nullable<microsoft.powershell.commands.osencryptionlevel>", "microsoft.powershell.commands.computerinfo", "Property[osencryptionlevel]"]
    - ["microsoft.powershell.commands.foregroundapplicationboost", "microsoft.powershell.commands.foregroundapplicationboost!", "Field[maximum]"]
    - ["system.string[]", "microsoft.powershell.commands.updatehelpcommand", "Property[literalpath]"]
    - ["system.string", "microsoft.powershell.commands.pushlocationcommand", "Property[stackname]"]
    - ["microsoft.powershell.commands.bootoptionaction", "microsoft.powershell.commands.bootoptionaction!", "Field[donotreboot]"]
    - ["system.int32", "microsoft.powershell.commands.newtimespancommand", "Property[minutes]"]
    - ["system.int32", "microsoft.powershell.commands.receivepssessioncommand", "Property[port]"]
    - ["system.string[]", "microsoft.powershell.commands.clearvariablecommand", "Property[name]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.measureobjectcommand", "Property[character]"]
    - ["system.string", "microsoft.powershell.commands.psexecutioncmdlet!", "Field[filepathvmnameparameterset]"]
    - ["system.string[]", "microsoft.powershell.commands.newpsrolecapabilityfilecommand", "Property[formatstoprocess]"]
    - ["system.string", "microsoft.powershell.commands.moveitemcommand", "Property[destination]"]
    - ["system.management.automation.runspaces.authenticationmechanism", "microsoft.powershell.commands.invokecommandcommand", "Property[authentication]"]
    - ["system.object[]", "microsoft.powershell.commands.selectobjectcommand", "property[property]"]
    - ["system.nullable<system.double>", "microsoft.powershell.commands.genericmeasureinfo", "Property[average]"]
    - ["system.object", "microsoft.powershell.commands.corecommandbase", "Method[getdynamicparameters].ReturnValue"]
    - ["system.string", "microsoft.powershell.commands.neweventlogcommand", "Property[parameterresourcefile]"]
    - ["system.uri", "microsoft.powershell.commands.getmodulecommand", "Property[cimresourceuri]"]
    - ["system.string", "microsoft.powershell.commands.testjsoncommand", "Property[path]"]
    - ["system.object", "microsoft.powershell.commands.genericobjectmeasureinfo", "Property[minimum]"]
    - ["system.nullable<microsoft.powershell.commands.systemelementstate>", "microsoft.powershell.commands.computerinfo", "Property[csthermalstate]"]
    - ["system.int32", "microsoft.powershell.commands.objecteventregistrationbase", "Property[maxtriggercount]"]
    - ["system.nullable<system.boolean>", "microsoft.powershell.commands.computerinfo", "Property[hypervrequirementvmmonitormodeextensions]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.measureobjectcommand", "Property[allstats]"]
    - ["system.string", "microsoft.powershell.commands.newpssessionconfigurationfilecommand", "Property[copyright]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.importaliascommand", "Property[passthru]"]
    - ["system.object[]", "microsoft.powershell.commands.tracecommandcommand", "Property[argumentlist]"]
    - ["system.boolean", "microsoft.powershell.commands.newitemcommand", "Property[providersupportsshouldprocess]"]
    - ["microsoft.powershell.commands.modulespecification[]", "microsoft.powershell.commands.savehelpcommand", "Property[fullyqualifiedmodule]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.addtypecommandbase", "Property[ignorewarnings]"]
    - ["system.string[]", "microsoft.powershell.commands.removevariablecommand", "Property[name]"]
    - ["system.management.automation.remoting.pssessionoption", "microsoft.powershell.commands.getpssessioncommand", "Property[sessionoption]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.importworkflowcommand", "Property[force]"]
    - ["microsoft.powershell.commands.outputmodeoption", "microsoft.powershell.commands.outputmodeoption!", "Field[multiple]"]
    - ["microsoft.powershell.commands.dataexecutionpreventionsupportpolicy", "microsoft.powershell.commands.dataexecutionpreventionsupportpolicy!", "Field[alwaysoff]"]
    - ["microsoft.powershell.commands.bootoptionaction", "microsoft.powershell.commands.bootoptionaction!", "Field[systemutilities]"]
    - ["system.string[]", "microsoft.powershell.commands.addpssnapincommand", "Property[name]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.getprocesscommand", "Property[module]"]
    - ["microsoft.powershell.commands.deviceguardhardwaresecure[]", "microsoft.powershell.commands.computerinfo", "Property[deviceguardrequiredsecurityproperties]"]
    - ["system.management.managementobject", "microsoft.powershell.commands.invokewmimethod", "Property[inputobject]"]
    - ["system.string", "microsoft.powershell.commands.computerinfo", "Property[oswindowsdirectory]"]
    - ["system.string", "microsoft.powershell.commands.getaliascommand", "Property[scope]"]
    - ["system.int32", "microsoft.powershell.commands.waitjobcommand", "Property[timeout]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.whereobjectcommand", "Property[notcontains]"]
    - ["microsoft.powershell.commands.softwareelementstate", "microsoft.powershell.commands.softwareelementstate!", "Field[executable]"]
    - ["system.version", "microsoft.powershell.commands.newpssessionconfigurationfilecommand", "Property[schemaversion]"]
    - ["system.diagnostics.traceoptions", "microsoft.powershell.commands.settracesourcecommand", "Property[listeneroption]"]
    - ["system.management.automation.scriptblock", "microsoft.powershell.commands.psexecutioncmdlet", "Method[getscriptblockfromfile].ReturnValue"]
    - ["system.collections.idictionary", "microsoft.powershell.commands.newpssessionconfigurationfilecommand", "Property[environmentvariables]"]
    - ["system.string", "microsoft.powershell.commands.computerinfo", "Property[biosothertargetos]"]
    - ["system.string", "microsoft.powershell.commands.restartcomputercommand", "Property[protocol]"]
    - ["microsoft.powershell.commands.serverlevel", "microsoft.powershell.commands.serverlevel!", "Field[servercorewithmanagementtools]"]
    - ["system.string", "microsoft.powershell.commands.filehashinfo", "Property[algorithm]"]
    - ["system.string", "microsoft.powershell.commands.geteventlogcommand", "Property[message]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.stopcomputercommand", "Property[asjob]"]
    - ["microsoft.powershell.commands.cpustatus", "microsoft.powershell.commands.cpustatus!", "Field[unknown]"]
    - ["system.string", "microsoft.powershell.commands.psremotingbasecmdlet", "Property[certificatethumbprint]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.converttojsoncommand", "Property[enumsasstrings]"]
    - ["system.guid", "microsoft.powershell.commands.newpssessionconfigurationfilecommand", "Property[guid]"]
    - ["microsoft.powershell.commands.webcmdletelementcollection", "microsoft.powershell.commands.basichtmlwebresponseobject", "Property[links]"]
    - ["system.string[]", "microsoft.powershell.commands.jobcmdletbase", "Property[name]"]
    - ["microsoft.powershell.commands.ostype", "microsoft.powershell.commands.ostype!", "Field[winnt]"]
    - ["system.string[]", "microsoft.powershell.commands.getitempropertyvaluecommand", "Property[path]"]
    - ["system.string[]", "microsoft.powershell.commands.clearhistorycommand", "Property[commandline]"]
    - ["system.string[]", "microsoft.powershell.commands.setservicecommand", "Property[computername]"]
    - ["system.string[]", "microsoft.powershell.commands.removetypedatacommand", "Property[path]"]
    - ["system.string", "microsoft.powershell.commands.bytecollection", "Property[hexbytes]"]
    - ["system.nullable<microsoft.powershell.commands.softwareelementstate>", "microsoft.powershell.commands.computerinfo", "Property[biossoftwareelementstate]"]
    - ["system.string", "microsoft.powershell.commands.variableprovider!", "Field[providername]"]
    - ["system.object", "microsoft.powershell.commands.matchinfocontext", "Method[clone].ReturnValue"]
    - ["system.management.automation.job[]", "microsoft.powershell.commands.waitjobcommand", "Property[job]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.getchilditemcommand", "Property[force]"]
    - ["system.object", "microsoft.powershell.commands.newvariablecommand", "Property[value]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.addcomputercommand", "Property[passthru]"]
    - ["system.collections.hashtable", "microsoft.powershell.commands.receivejobcommand", "Property[filter]"]
    - ["microsoft.powershell.commands.breakpointtype[]", "microsoft.powershell.commands.getpsbreakpointcommand", "Property[type]"]
    - ["system.string", "microsoft.powershell.commands.servicecommandexception", "Property[servicename]"]
    - ["microsoft.powershell.commands.filesystemcmdletproviderencoding", "microsoft.powershell.commands.filesystemcmdletproviderencoding!", "Field[utf32]"]
    - ["system.int32", "microsoft.powershell.commands.newpssessionoptioncommand", "Property[maximumredirection]"]
    - ["system.string", "microsoft.powershell.commands.newmodulemanifestcommand", "Property[defaultcommandprefix]"]
    - ["microsoft.powershell.commands.outputassemblytype", "microsoft.powershell.commands.outputassemblytype!", "Field[windowsapplication]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.measureobjectcommand", "Property[minimum]"]
    - ["system.object", "microsoft.powershell.commands.corecommandbase", "Property[retrieveddynamicparameters]"]
    - ["system.string", "microsoft.powershell.commands.aliasprovider!", "Field[providername]"]
    - ["system.management.automation.psobject", "microsoft.powershell.commands.getmembercommand", "Property[inputobject]"]
    - ["system.string[]", "microsoft.powershell.commands.debugprocesscommand", "Property[name]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.settracesourcecommand", "Property[debugger]"]
    - ["system.management.automation.runspaces.pssessionconfigurationaccessmode", "microsoft.powershell.commands.pssessionconfigurationcommandbase", "Property[accessmode]"]
    - ["system.string", "microsoft.powershell.commands.renamecomputercommand", "Property[newname]"]
    - ["system.collections.generic.ireadonlylist<system.management.automation.runspaces.runspace>", "microsoft.powershell.commands.commonrunspacecommandbase", "Method[getrunspaces].ReturnValue"]
    - ["system.string[]", "microsoft.powershell.commands.gethelpcommand", "Property[functionality]"]
    - ["system.collections.hashtable", "microsoft.powershell.commands.selectxmlcommand", "Property[namespace]"]
    - ["microsoft.powershell.commands.cpuarchitecture", "microsoft.powershell.commands.cpuarchitecture!", "Field[alpha]"]
    - ["system.string[]", "microsoft.powershell.commands.setvariablecommand", "Property[exclude]"]
    - ["microsoft.powershell.commands.modulespecification[]", "microsoft.powershell.commands.removemodulecommand", "Property[fullyqualifiedname]"]
    - ["system.string[]", "microsoft.powershell.commands.newmodulemanifestcommand", "Property[externalmoduledependencies]"]
    - ["microsoft.powershell.commands.ostype", "microsoft.powershell.commands.ostype!", "Field[reliantunix]"]
    - ["system.boolean", "microsoft.powershell.commands.psworkflowexecutionoption", "Property[enablevalidation]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.gettimezonecommand", "Property[listavailable]"]
    - ["system.string", "microsoft.powershell.commands.invokeexpressioncommand", "Property[command]"]
    - ["system.string[]", "microsoft.powershell.commands.removeitemcommand", "Property[literalpath]"]
    - ["system.string", "microsoft.powershell.commands.checkpointcomputercommand", "Property[description]"]
    - ["system.string", "microsoft.powershell.commands.newmodulemanifestcommand", "Property[prerelease]"]
    - ["system.string", "microsoft.powershell.commands.outfilecommand", "Property[literalpath]"]
    - ["system.security.cryptography.x509certificates.x509certificate", "microsoft.powershell.commands.webrequestpscmdlet", "Property[certificate]"]
    - ["system.collections.objectmodel.collection<system.management.automation.psdriveinfo>", "microsoft.powershell.commands.functionprovider", "Method[initializedefaultdrives].ReturnValue"]
    - ["system.string", "microsoft.powershell.commands.filehashinfo", "Property[path]"]
    - ["system.string[]", "microsoft.powershell.commands.unblockfilecommand", "Property[literalpath]"]
    - ["system.string", "microsoft.powershell.commands.renamecomputerchangeinfo", "Property[newcomputername]"]
    - ["system.nullable<system.uint16>", "microsoft.powershell.commands.computerinfo", "Property[biossmbiosminorversion]"]
    - ["microsoft.powershell.commands.filesystemcmdletproviderencoding", "microsoft.powershell.commands.filesystemcmdletproviderencoding!", "Field[string]"]
    - ["system.string[]", "microsoft.powershell.commands.setitemcommand", "Property[literalpath]"]
    - ["system.management.automation.scriptblock", "microsoft.powershell.commands.psexecutioncmdlet", "Property[scriptblock]"]
    - ["system.string[]", "microsoft.powershell.commands.setvariablecommand", "Property[include]"]
    - ["mshtml.ihtmldocument2", "microsoft.powershell.commands.htmlwebresponseobject", "Property[parsedhtml]"]
    - ["system.object[]", "microsoft.powershell.commands.getrandomcommandbase", "Property[inputobject]"]
    - ["microsoft.powershell.commands.processor[]", "microsoft.powershell.commands.computerinfo", "Property[csprocessors]"]
    - ["system.string", "microsoft.powershell.commands.addcomputercommand", "Property[domainname]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.webrequestpscmdlet", "Property[passthru]"]
    - ["system.management.automation.remoting.pssessionoption", "microsoft.powershell.commands.psremotingbasecmdlet", "Property[sessionoption]"]
    - ["microsoft.powershell.commands.adminpasswordstatus", "microsoft.powershell.commands.adminpasswordstatus!", "Field[disabled]"]
    - ["system.char", "microsoft.powershell.commands.basecsvwritingcommand", "Property[delimiter]"]
    - ["system.string[]", "microsoft.powershell.commands.securitydescriptorinfo", "Field[systemacl]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.restartcomputercommand", "Property[force]"]
    - ["system.string[]", "microsoft.powershell.commands.getvariablecommand", "Property[exclude]"]
    - ["system.nullable<system.boolean>", "microsoft.powershell.commands.computerinfo", "Property[hypervrequirementvirtualizationfirmwareenabled]"]
    - ["system.string", "microsoft.powershell.commands.registryprovider!", "Field[providername]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.enablepsremotingcommand", "Property[force]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.moveitemcommand", "Property[force]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.psexecutioncmdlet", "Property[enablenetworkaccess]"]
    - ["system.string", "microsoft.powershell.commands.psremotingcmdlet!", "Field[sshhosthashparameterset]"]
    - ["system.object[]", "microsoft.powershell.commands.foreachobjectcommand", "Property[argumentlist]"]
    - ["system.nullable<system.boolean>", "microsoft.powershell.commands.computerinfo", "Property[cspowermanagementsupported]"]
    - ["system.guid[]", "microsoft.powershell.commands.psexecutioncmdlet", "Property[vmid]"]
    - ["system.management.automation.pscredential", "microsoft.powershell.commands.startprocesscommand", "Property[credential]"]
    - ["system.management.automation.errorrecord", "microsoft.powershell.commands.helpcategoryinvalidexception", "Property[errorrecord]"]
    - ["system.string", "microsoft.powershell.commands.dnsnamerepresentation", "Method[tostring].ReturnValue"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.passthroughitempropertycommandbase", "Property[force]"]
    - ["system.management.automation.configuration.configscope", "microsoft.powershell.commands.enabledisableexperimentalfeaturecommandbase", "Property[scope]"]
    - ["system.management.automation.runspaces.pssession[]", "microsoft.powershell.commands.psremotingbasecmdlet", "Property[session]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.newpssessionoptioncommand", "Property[noencryption]"]
    - ["system.string", "microsoft.powershell.commands.securitydescriptorcommandsbase!", "Method[getpath].ReturnValue"]
    - ["microsoft.powershell.commands.producttype", "microsoft.powershell.commands.producttype!", "Field[domaincontroller]"]
    - ["system.string", "microsoft.powershell.commands.exportcountercommand", "Property[path]"]
    - ["system.int32", "microsoft.powershell.commands.genericmeasureinfo", "Property[count]"]
    - ["system.string", "microsoft.powershell.commands.exportaliascommand", "Property[literalpath]"]
    - ["system.string[]", "microsoft.powershell.commands.setvariablecommand", "Property[name]"]
    - ["system.string", "microsoft.powershell.commands.matchinfo", "Property[line]"]
    - ["system.nullable<system.uint64>", "microsoft.powershell.commands.computerinfo", "Property[ostotalvisiblememorysize]"]
    - ["system.int32", "microsoft.powershell.commands.updatetypedatacommand", "Property[serializationdepth]"]
    - ["system.string[]", "microsoft.powershell.commands.connectpssessioncommand", "Property[name]"]
    - ["system.string", "microsoft.powershell.commands.psremotingcmdlet!", "Field[vmnameparameterset]"]
    - ["microsoft.powershell.commands.filesystemcmdletproviderencoding", "microsoft.powershell.commands.filesystemcontentdynamicparametersbase", "Property[encoding]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.getexecutionpolicycommand", "Property[list]"]
    - ["system.management.automation.psobject", "microsoft.powershell.commands.convertfrommarkdowncommand", "Property[inputobject]"]
    - ["system.int32", "microsoft.powershell.commands.geterrorcommand", "Property[newest]"]
    - ["system.string[]", "microsoft.powershell.commands.newpsrolecapabilityfilecommand", "Property[visibleproviders]"]
    - ["microsoft.powershell.commands.textencodingtype", "microsoft.powershell.commands.textencodingtype!", "Field[unknown]"]
    - ["system.string", "microsoft.powershell.commands.registerwmieventcommand", "Property[query]"]
    - ["system.string", "microsoft.powershell.commands.processor", "Property[socketdesignation]"]
    - ["system.boolean", "microsoft.powershell.commands.getjobcommand", "Property[hasmoredata]"]
    - ["system.int32", "microsoft.powershell.commands.testconnectioncommand", "Property[count]"]
    - ["system.string[]", "microsoft.powershell.commands.updatedata", "Property[prependpath]"]
    - ["system.string", "microsoft.powershell.commands.computerinfo", "Property[logonserver]"]
    - ["system.nullable<system.boolean>", "microsoft.powershell.commands.networkadapter", "Property[dhcpenabled]"]
    - ["system.object[]", "microsoft.powershell.commands.startjobcommand", "Property[argumentlist]"]
    - ["system.string", "microsoft.powershell.commands.testpathcommand", "Property[filter]"]
    - ["system.string", "microsoft.powershell.commands.bytecollection", "Property[ascii]"]
    - ["system.string", "microsoft.powershell.commands.convertfromsddlstringcommand", "Property[sddl]"]
    - ["system.datetime", "microsoft.powershell.commands.getjobcommand", "Property[after]"]
    - ["microsoft.powershell.commands.joinoptions", "microsoft.powershell.commands.joinoptions!", "Field[passwordpass]"]
    - ["system.nullable<microsoft.powershell.commands.systemelementstate>", "microsoft.powershell.commands.computerinfo", "Property[cspowersupplystate]"]
    - ["system.string[]", "microsoft.powershell.commands.copyitemcommand", "Property[include]"]
    - ["microsoft.powershell.commands.operatingsystemsku", "microsoft.powershell.commands.operatingsystemsku!", "Field[standardserveredition]"]
    - ["microsoft.powershell.commands.powermanagementcapabilities[]", "microsoft.powershell.commands.computerinfo", "Property[cspowermanagementcapabilities]"]
    - ["system.boolean", "microsoft.powershell.commands.servicebasecommand", "Method[shouldprocessserviceoperation].ReturnValue"]
    - ["system.string[]", "microsoft.powershell.commands.multipleservicecommandbase", "Property[include]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.writeprogresscommand", "Property[completed]"]
    - ["microsoft.powershell.commands.osproductsuite", "microsoft.powershell.commands.osproductsuite!", "Field[backofficecomponents]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.getpssessioncommand", "Property[usessl]"]
    - ["system.string", "microsoft.powershell.commands.startprocesscommand", "Property[verb]"]
    - ["microsoft.powershell.commands.resetcapability", "microsoft.powershell.commands.resetcapability!", "Field[enabled]"]
    - ["microsoft.powershell.commands.ostype", "microsoft.powershell.commands.ostype!", "Field[gnuhurd]"]
    - ["microsoft.powershell.commands.deviceguardsmartstatus", "microsoft.powershell.commands.deviceguardsmartstatus!", "Field[off]"]
    - ["system.string", "microsoft.powershell.commands.newpsdrivecommand", "Property[psprovider]"]
    - ["system.string", "microsoft.powershell.commands.wmibasecmdlet", "Property[namespace]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.invokecommandcommand", "Property[usessl]"]
    - ["system.object", "microsoft.powershell.commands.writehostcommand", "Property[separator]"]
    - ["system.string", "microsoft.powershell.commands.bytecollection", "Method[tostring].ReturnValue"]
    - ["microsoft.powershell.commands.cpuavailability", "microsoft.powershell.commands.cpuavailability!", "Field[quiesced]"]
    - ["microsoft.powershell.commands.systemelementstate", "microsoft.powershell.commands.systemelementstate!", "Field[unknown]"]
    - ["system.object[]", "microsoft.powershell.commands.newobjectcommand", "Property[argumentlist]"]
    - ["system.string", "microsoft.powershell.commands.setmarkdownoptioncommand", "Property[boldforegroundcolor]"]
    - ["system.nullable<microsoft.powershell.commands.deviceguardconfigcodeintegritystatus>", "microsoft.powershell.commands.deviceguard", "Property[usermodecodeintegritypolicyenforcementstatus]"]
    - ["microsoft.powershell.commands.textencodingtype", "microsoft.powershell.commands.textencodingtype!", "Field[bigendianunicode]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.newpssessionconfigurationfilecommand", "Property[runasvirtualaccount]"]
    - ["system.collections.generic.dictionary<system.guid,system.management.automation.runspaces.pssession>", "microsoft.powershell.commands.psrunspacecmdlet", "Method[getmatchingrunspacesbyname].ReturnValue"]
    - ["microsoft.powershell.commands.pcsystemtype", "microsoft.powershell.commands.pcsystemtype!", "Field[sohoserver]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.outgridviewcommand", "Property[passthru]"]
    - ["system.string", "microsoft.powershell.commands.formobject", "Property[method]"]
    - ["microsoft.powershell.commands.osencryptionlevel", "microsoft.powershell.commands.osencryptionlevel!", "Field[encrypt128bits]"]
    - ["system.string[]", "microsoft.powershell.commands.clearitemcommand", "Property[include]"]
    - ["system.string[]", "microsoft.powershell.commands.settracesourcecommand", "Property[removefilelistener]"]
    - ["system.string", "microsoft.powershell.commands.processor", "Property[manufacturer]"]
    - ["microsoft.powershell.commands.powerstate", "microsoft.powershell.commands.powerstate!", "Field[powersavesoftoff]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.exportformatdatacommand", "Property[force]"]
    - ["system.string[]", "microsoft.powershell.commands.updatetypedatacommand", "Property[defaultkeypropertyset]"]
    - ["microsoft.powershell.commands.webauthenticationtype", "microsoft.powershell.commands.webauthenticationtype!", "Field[oauth]"]
    - ["system.string[]", "microsoft.powershell.commands.importmodulecommand", "Property[name]"]
    - ["system.string", "microsoft.powershell.commands.newservicecommand", "Property[binarypathname]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.getcommandcommand", "Property[syntax]"]
    - ["system.nullable<system.int32>", "microsoft.powershell.commands.newpstransportoptioncommand", "Property[maxconcurrentcommandspersession]"]
    - ["system.collections.generic.ienumerable<system.string>", "microsoft.powershell.commands.internalsymboliclinklinkcodemethods!", "Method[gettarget].ReturnValue"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.getaclcommand", "Property[allcentralaccesspolicies]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.whereobjectcommand", "Property[ne]"]
    - ["system.nullable<system.uint32>", "microsoft.powershell.commands.computerinfo", "Property[osmaxnumberofprocesses]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.getpssessioncapabilitycommand", "Property[full]"]
    - ["system.string", "microsoft.powershell.commands.importmodulecommand", "Property[prefix]"]
    - ["microsoft.powershell.commands.webcmdletelementcollection", "microsoft.powershell.commands.basichtmlwebresponseobject", "Property[images]"]
    - ["microsoft.powershell.commands.cpuavailability", "microsoft.powershell.commands.cpuavailability!", "Field[installerror]"]
    - ["system.globalization.cultureinfo[]", "microsoft.powershell.commands.updatablehelpcommandbase", "Property[uiculture]"]
    - ["system.int32", "microsoft.powershell.commands.connectpssessioncommand", "Property[port]"]
    - ["system.string", "microsoft.powershell.commands.computerinfo", "Property[osversion]"]
    - ["system.string[]", "microsoft.powershell.commands.convertpathcommand", "Property[literalpath]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.getcommandcommand", "Property[usefuzzymatching]"]
    - ["system.string", "microsoft.powershell.commands.startjobcommand", "Property[definitionpath]"]
    - ["system.boolean", "microsoft.powershell.commands.filesystemcontentdynamicparametersbase", "Property[wasstreamtypespecified]"]
    - ["system.string", "microsoft.powershell.commands.converttoxmlcommand", "Property[as]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.selectstringcommand", "Property[allmatches]"]
    - ["system.string[]", "microsoft.powershell.commands.setaclcommand", "Property[literalpath]"]
    - ["system.nullable<system.int32>", "microsoft.powershell.commands.wsmanconfigurationoption", "Property[maxsessionsperuser]"]
    - ["system.version", "microsoft.powershell.commands.importmodulecommand", "Property[requiredversion]"]
    - ["system.string[]", "microsoft.powershell.commands.newpsrolecapabilityfilecommand", "Property[visiblealiases]"]
    - ["microsoft.powershell.commands.networkadapter[]", "microsoft.powershell.commands.computerinfo", "Property[csnetworkadapters]"]
    - ["microsoft.powershell.commands.cpuarchitecture", "microsoft.powershell.commands.cpuarchitecture!", "Field[powerpc]"]
    - ["system.guid", "microsoft.powershell.commands.newmodulemanifestcommand", "Property[guid]"]
    - ["system.management.automation.runspaces.typedata[]", "microsoft.powershell.commands.updatetypedatacommand", "Property[typedata]"]
    - ["system.string", "microsoft.powershell.commands.writeeventlogcommand", "Property[computername]"]
    - ["microsoft.powershell.commands.deviceguardsoftwaresecure[]", "microsoft.powershell.commands.computerinfo", "Property[deviceguardsecurityservicesrunning]"]
    - ["system.string", "microsoft.powershell.commands.computerinfo", "Property[cscaption]"]
    - ["system.nullable<microsoft.powershell.commands.deviceguardconfigcodeintegritystatus>", "microsoft.powershell.commands.computerinfo", "Property[deviceguardcodeintegritypolicyenforcementstatus]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.getuniquecommand", "Property[asstring]"]
    - ["system.string[]", "microsoft.powershell.commands.unblockfilecommand", "Property[path]"]
    - ["system.management.automation.pscredential", "microsoft.powershell.commands.webrequestpscmdlet", "Property[credential]"]
    - ["system.string", "microsoft.powershell.commands.computerinfo", "Property[keyboardlayout]"]
    - ["system.string[]", "microsoft.powershell.commands.newmodulemanifestcommand", "Property[compatiblepseditions]"]
    - ["system.nullable<microsoft.powershell.commands.deviceguardconfigcodeintegritystatus>", "microsoft.powershell.commands.computerinfo", "Property[deviceguardusermodecodeintegritypolicyenforcementstatus]"]
    - ["microsoft.powershell.commands.operatingsystemsku", "microsoft.powershell.commands.operatingsystemsku!", "Field[storagestandardserveredition]"]
    - ["microsoft.powershell.commands.ostype", "microsoft.powershell.commands.ostype!", "Field[freebsd]"]
    - ["system.string", "microsoft.powershell.commands.exportcsvcommand", "Property[encoding]"]
    - ["microsoft.powershell.commands.operatingsystemsku", "microsoft.powershell.commands.operatingsystemsku!", "Field[serverfoundation]"]
    - ["system.management.automation.pscredential", "microsoft.powershell.commands.getcredentialcommand", "Property[credential]"]
    - ["microsoft.powershell.commands.operatingsystemsku", "microsoft.powershell.commands.operatingsystemsku!", "Field[datacenterserveredition]"]
    - ["system.string", "microsoft.powershell.commands.psexecutioncmdlet", "Property[filepath]"]
    - ["system.string", "microsoft.powershell.commands.invokewmimethod", "Property[class]"]
    - ["system.string[]", "microsoft.powershell.commands.sendmailmessage", "Property[attachments]"]
    - ["system.string[]", "microsoft.powershell.commands.getchilditemcommand", "Property[path]"]
    - ["system.string[]", "microsoft.powershell.commands.setpsbreakpointcommand", "Property[command]"]
    - ["system.string[]", "microsoft.powershell.commands.itempropertycommandbase", "Property[include]"]
    - ["system.string[]", "microsoft.powershell.commands.sendmailmessage", "Property[replyto]"]
    - ["system.string[]", "microsoft.powershell.commands.psbreakpointcreationbase", "Property[command]"]
    - ["system.datetime", "microsoft.powershell.commands.newtimespancommand", "Property[end]"]
    - ["system.string", "microsoft.powershell.commands.settimezonecommand", "Property[id]"]
    - ["system.int32", "microsoft.powershell.commands.webrequestpscmdlet", "Property[operationtimeoutseconds]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.debugrunspacecommand", "Property[breakall]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.startjobcommand", "Property[usessl]"]
    - ["system.string", "microsoft.powershell.commands.testconnectioncommand", "Property[protocol]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.getwmiobjectcommand", "Property[recurse]"]
    - ["microsoft.powershell.commands.pcsystemtypeex", "microsoft.powershell.commands.pcsystemtypeex!", "Field[workstation]"]
    - ["system.string[]", "microsoft.powershell.commands.getpshostprocessinfocommand", "Property[name]"]
    - ["microsoft.powershell.commands.language", "microsoft.powershell.commands.language!", "Field[visualbasic]"]
    - ["microsoft.powershell.commands.wmistate", "microsoft.powershell.commands.wmistate!", "Field[stopped]"]
    - ["microsoft.powershell.commands.wmistate", "microsoft.powershell.commands.wmistate!", "Field[completed]"]
    - ["system.object", "microsoft.powershell.commands.writehostcommand", "Property[object]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.renamecomputercommand", "Property[restart]"]
    - ["system.string[]", "microsoft.powershell.commands.clearitempropertycommand", "Property[literalpath]"]
    - ["system.string[]", "microsoft.powershell.commands.itempropertycommandbase", "Property[exclude]"]
    - ["system.string", "microsoft.powershell.commands.stopcomputercommand", "Property[wsmanauthentication]"]
    - ["system.string[]", "microsoft.powershell.commands.getitempropertyvaluecommand", "Property[literalpath]"]
    - ["system.string[]", "microsoft.powershell.commands.startjobcommand", "Property[containerid]"]
    - ["system.string", "microsoft.powershell.commands.addtypecompilererror", "Property[errornumber]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.convertfromjsoncommand", "Property[noenumerate]"]
    - ["system.int32[]", "microsoft.powershell.commands.clearhistorycommand", "Property[id]"]
    - ["system.string[]", "microsoft.powershell.commands.psbreakpointcreationbase", "Property[script]"]
    - ["microsoft.powershell.commands.domainrole", "microsoft.powershell.commands.domainrole!", "Field[memberworkstation]"]
    - ["microsoft.powershell.commands.testpathtype", "microsoft.powershell.commands.testpathtype!", "Field[leaf]"]
    - ["system.collections.generic.list<system.management.automation.job>", "microsoft.powershell.commands.getjobcommand", "Method[findjobs].ReturnValue"]
    - ["microsoft.powershell.commands.textencodingtype", "microsoft.powershell.commands.textencodingtype!", "Field[ascii]"]
    - ["system.uri", "microsoft.powershell.commands.newmodulemanifestcommand", "Property[projecturi]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.setaclcommand", "Property[passthru]"]
    - ["microsoft.powershell.commands.pcsystemtype", "microsoft.powershell.commands.pcsystemtype!", "Field[unspecified]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.selectstringcommand", "Property[quiet]"]
    - ["system.string[]", "microsoft.powershell.commands.startjobcommand", "Property[hostname]"]
    - ["system.string", "microsoft.powershell.commands.newmodulemanifestcommand", "Property[powershellhostname]"]
    - ["system.string[]", "microsoft.powershell.commands.importpowershelldatafilecommand", "Property[literalpath]"]
    - ["system.string[]", "microsoft.powershell.commands.joinpathcommand", "Property[path]"]
    - ["microsoft.powershell.commands.cpustatus", "microsoft.powershell.commands.cpustatus!", "Field[other]"]
    - ["system.nullable<microsoft.powershell.commands.powerstate>", "microsoft.powershell.commands.computerinfo", "Property[cspowerstate]"]
    - ["system.string", "microsoft.powershell.commands.writeorthrowerrorcommand", "Property[categorytargetname]"]
    - ["system.management.automation.psobject", "microsoft.powershell.commands.startjobcommand", "Property[inputobject]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.formatwidecommand", "Property[autosize]"]
    - ["microsoft.powershell.commands.cpuavailability", "microsoft.powershell.commands.cpuavailability!", "Field[degraded]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.newpsdrivecommand", "Property[persist]"]
    - ["system.uint16[]", "microsoft.powershell.commands.computerinfo", "Property[bioscharacteristics]"]
    - ["system.collections.hashtable", "microsoft.powershell.commands.psremotingbasecmdlet", "Property[options]"]
    - ["system.string[]", "microsoft.powershell.commands.getlocationcommand", "Property[psprovider]"]
    - ["microsoft.powershell.commands.formobjectcollection", "microsoft.powershell.commands.htmlwebresponseobject", "Property[forms]"]
    - ["microsoft.powershell.commands.operatingsystemsku", "microsoft.powershell.commands.operatingsystemsku!", "Field[windowsserverhypercorev]"]
    - ["system.string", "microsoft.powershell.commands.computerinfo", "Property[csinitialloadinfo]"]
    - ["microsoft.powershell.commands.pspropertyexpression", "microsoft.powershell.commands.pspropertyexpressionResult", "Property[resolvedexpression]"]
    - ["system.nullable<system.boolean>", "microsoft.powershell.commands.computerinfo", "Property[osdebug]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.startprocesscommand", "Property[usenewenvironment]"]
    - ["microsoft.powershell.commands.operatingsystemsku", "microsoft.powershell.commands.operatingsystemsku!", "Field[windowsserverdatacenternohypervcore]"]
    - ["microsoft.powershell.commands.netconnectionstatus", "microsoft.powershell.commands.netconnectionstatus!", "Field[mediadisconnected]"]
    - ["microsoft.powershell.commands.softwareelementstate", "microsoft.powershell.commands.softwareelementstate!", "Field[running]"]
    - ["system.string[]", "microsoft.powershell.commands.testconnectioncommand", "Property[source]"]
    - ["system.object[]", "microsoft.powershell.commands.newmodulemanifestcommand", "Property[nestedmodules]"]
    - ["system.guid[]", "microsoft.powershell.commands.removepssessioncommand", "Property[vmid]"]
    - ["system.int32", "microsoft.powershell.commands.restartcomputercommand", "Property[timeout]"]
    - ["system.int32", "microsoft.powershell.commands.newpsworkflowexecutionoptioncommand", "Property[remotenodesessionidletimeoutsec]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.setpsdebugcommand", "Property[strict]"]
    - ["system.string[]", "microsoft.powershell.commands.importpowershelldatafilecommand", "Property[path]"]
    - ["system.management.automation.psobject[]", "microsoft.powershell.commands.writeoutputcommand", "Property[inputobject]"]
    - ["system.boolean", "microsoft.powershell.commands.renameitemcommand", "Property[providersupportsshouldprocess]"]
    - ["system.string", "microsoft.powershell.commands.invokewmimethod", "Property[name]"]
    - ["system.int32", "microsoft.powershell.commands.addtypecompilererror", "Property[column]"]
    - ["system.net.webresponse", "microsoft.powershell.commands.webresponseobject", "Property[baseresponse]"]
    - ["microsoft.powershell.commands.displayhinttype", "microsoft.powershell.commands.getdatecommand", "Property[displayhint]"]
    - ["system.string", "microsoft.powershell.commands.addtypecommandbase", "Property[name]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.exportaliascommand", "Property[append]"]
    - ["system.string[]", "microsoft.powershell.commands.getpsbreakpointcommand", "Property[command]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.connectpssessioncommand", "Property[allowredirection]"]
    - ["microsoft.powershell.commands.cpuavailability", "microsoft.powershell.commands.cpuavailability!", "Field[runningorfullpower]"]
    - ["system.management.automation.errorrecord", "microsoft.powershell.commands.helpnotfoundexception", "Property[errorrecord]"]
    - ["system.object", "microsoft.powershell.commands.filesystemprovider", "Method[getchilditemsdynamicparameters].ReturnValue"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.newpssessionoptioncommand", "Property[nocompression]"]
    - ["microsoft.powershell.commands.clipboardformat", "microsoft.powershell.commands.clipboardformat!", "Field[audio]"]
    - ["system.byte[]", "microsoft.powershell.commands.writeeventlogcommand", "Property[rawdata]"]
    - ["system.string", "microsoft.powershell.commands.writeeventlogcommand", "Property[message]"]
    - ["system.object", "microsoft.powershell.commands.registerobjecteventcommand", "Method[getsourceobject].ReturnValue"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.converttoxmlcommand", "Property[notypeinformation]"]
    - ["system.version", "microsoft.powershell.commands.importmodulecommand", "Property[minimumversion]"]
    - ["system.int64", "microsoft.powershell.commands.registerwmieventcommand", "Property[timeout]"]
    - ["microsoft.powershell.commands.ostype", "microsoft.powershell.commands.ostype!", "Field[irix]"]
    - ["system.boolean", "microsoft.powershell.commands.certificateprovider", "Method[haschilditems].ReturnValue"]
    - ["system.int32", "microsoft.powershell.commands.receivepssessioncommand", "Property[id]"]
    - ["microsoft.management.infrastructure.cimsession", "microsoft.powershell.commands.importmodulecommand", "Property[cimsession]"]
    - ["system.object", "microsoft.powershell.commands.addmembercommand", "Property[notepropertyvalue]"]
    - ["microsoft.powershell.commands.modulespecification[]", "microsoft.powershell.commands.importmodulecommand", "Property[fullyqualifiedname]"]
    - ["microsoft.powershell.commands.exportaliasformat", "microsoft.powershell.commands.exportaliasformat!", "Field[csv]"]
    - ["system.guid[]", "microsoft.powershell.commands.connectpssessioncommand", "Property[instanceid]"]
    - ["system.nullable<microsoft.powershell.commands.pcsystemtype>", "microsoft.powershell.commands.computerinfo", "Property[cspcsystemtype]"]
    - ["system.int32", "microsoft.powershell.commands.psworkflowexecutionoption", "Property[maxsessionsperremotenode]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.splitpathcommand", "Property[extension]"]
    - ["newtonsoft.json.stringescapehandling", "microsoft.powershell.commands.converttojsoncommand", "Property[escapehandling]"]
    - ["system.string[]", "microsoft.powershell.commands.getchilditemcommand", "Property[literalpath]"]
    - ["system.string[]", "microsoft.powershell.commands.receivejobcommand", "Property[command]"]
    - ["system.string[]", "microsoft.powershell.commands.startjobcommand", "Property[computername]"]
    - ["system.boolean", "microsoft.powershell.commands.sessionstateproviderbase", "Method[itemexists].ReturnValue"]
    - ["system.string", "microsoft.powershell.commands.filesystemprovider", "Method[gethelpmaml].ReturnValue"]
    - ["system.string[]", "microsoft.powershell.commands.gethelpcommand", "Property[component]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.whereobjectcommand", "Property[cgt]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.receivejobcommand", "Property[norecurse]"]
    - ["system.string", "microsoft.powershell.commands.setmarkdownoptioncommand", "Property[header1color]"]
    - ["system.string[]", "microsoft.powershell.commands.copyitemcommand", "Property[literalpath]"]
    - ["system.string", "microsoft.powershell.commands.registryprovider", "Method[getparentpath].ReturnValue"]
    - ["system.management.automation.scopeditemoptions", "microsoft.powershell.commands.newvariablecommand", "Property[option]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.corecommandbase", "Property[force]"]
    - ["microsoft.powershell.commands.ostype", "microsoft.powershell.commands.ostype!", "Field[macros]"]
    - ["system.object", "microsoft.powershell.commands.filesystemprovider", "Method[setpropertydynamicparameters].ReturnValue"]
    - ["system.byte", "microsoft.powershell.commands.newwineventcommand", "Property[version]"]
    - ["system.string", "microsoft.powershell.commands.groupinfo", "Property[name]"]
    - ["system.string", "microsoft.powershell.commands.enhancedkeyusagerepresentation", "Property[friendlyname]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.convertfromcsvcommand", "Property[useculture]"]
    - ["microsoft.powershell.commands.waitforservicetypes", "microsoft.powershell.commands.waitforservicetypes!", "Field[powershell]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.newpssessioncommand", "Property[enablenetworkaccess]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.starttranscriptcommand", "Property[includeinvocationheader]"]
    - ["system.string", "microsoft.powershell.commands.exportaliascommand", "Property[description]"]
    - ["microsoft.powershell.commands.ostype", "microsoft.powershell.commands.ostype!", "Field[win3x]"]
    - ["system.string[]", "microsoft.powershell.commands.getpssessioncommand", "Property[computername]"]
    - ["system.string", "microsoft.powershell.commands.newobjectcommand", "Property[typename]"]
    - ["system.string[]", "microsoft.powershell.commands.importmodulecommand", "Property[variable]"]
    - ["system.string[]", "microsoft.powershell.commands.getaclcommand", "Property[literalpath]"]
    - ["microsoft.powershell.commands.openmode", "microsoft.powershell.commands.openmode!", "Field[add]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.whereobjectcommand", "Property[cne]"]
    - ["system.string", "microsoft.powershell.commands.moveitempropertycommand", "Property[destination]"]
    - ["system.int32", "microsoft.powershell.commands.psworkflowexecutionoption", "Property[maxdisconnectedsessions]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.getmembercommand", "Property[force]"]
    - ["system.string[]", "microsoft.powershell.commands.newpsrolecapabilityfilecommand", "Property[visibleexternalcommands]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.invokecommandcommand", "Property[indisconnectedsession]"]
    - ["system.uri", "microsoft.powershell.commands.importmodulecommand", "Property[cimresourceuri]"]
    - ["system.management.authenticationlevel", "microsoft.powershell.commands.stopcomputercommand", "Property[dcomauthentication]"]
    - ["system.string", "microsoft.powershell.commands.securitydescriptorcommandsbase!", "Method[getowner].ReturnValue"]
    - ["system.management.automation.runspaces.pssession[]", "microsoft.powershell.commands.connectpssessioncommand", "Property[session]"]
    - ["system.string[]", "microsoft.powershell.commands.sendmailmessage", "Property[cc]"]
    - ["microsoft.powershell.commands.ostype", "microsoft.powershell.commands.ostype!", "Field[nextstep]"]
    - ["system.string", "microsoft.powershell.commands.setservicecommand", "Property[displayname]"]
    - ["system.management.automation.runspaces.pipelinestate", "microsoft.powershell.commands.historyinfo", "Property[executionstatus]"]
    - ["system.boolean", "microsoft.powershell.commands.registryprovider", "Method[isitemcontainer].ReturnValue"]
    - ["system.string", "microsoft.powershell.commands.addcomputercommand", "Property[oupath]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.addmembercommand", "Property[passthru]"]
    - ["microsoft.powershell.commands.netconnectionstatus", "microsoft.powershell.commands.netconnectionstatus!", "Field[authenticationfailed]"]
    - ["system.int32", "microsoft.powershell.commands.writeprogresscommand", "Property[percentcomplete]"]
    - ["system.string", "microsoft.powershell.commands.computerinfo", "Property[oscsdversion]"]
    - ["system.string[]", "microsoft.powershell.commands.convertpathcommand", "Property[path]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.starttranscriptcommand", "Property[useminimalheader]"]
    - ["system.nullable<microsoft.powershell.commands.domainrole>", "microsoft.powershell.commands.computerinfo", "Property[csdomainrole]"]
    - ["microsoft.powershell.commands.clipboardformat", "microsoft.powershell.commands.clipboardformat!", "Field[text]"]
    - ["system.uri", "microsoft.powershell.commands.webrequestpscmdlet", "Property[proxy]"]
    - ["system.string[]", "microsoft.powershell.commands.startjobcommand", "Property[vmname]"]
    - ["system.string", "microsoft.powershell.commands.updatetypedatacommand", "Property[membername]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.removejobcommand", "Property[force]"]
    - ["system.string", "microsoft.powershell.commands.computerinfo", "Property[windowssystemroot]"]
    - ["microsoft.powershell.commands.producttype", "microsoft.powershell.commands.producttype!", "Field[server]"]
    - ["system.collections.hashtable[]", "microsoft.powershell.commands.enterpssessioncommand", "Property[sshconnection]"]
    - ["system.string[]", "microsoft.powershell.commands.getcountercommand", "Property[listset]"]
    - ["microsoft.powershell.commands.ostype", "microsoft.powershell.commands.ostype!", "Field[bsdunix]"]
    - ["system.nullable<system.uint64>", "microsoft.powershell.commands.computerinfo", "Property[osfreephysicalmemory]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.stopprocesscommand", "Property[passthru]"]
    - ["system.object", "microsoft.powershell.commands.certificateprovider", "Method[getitemdynamicparameters].ReturnValue"]
    - ["system.string", "microsoft.powershell.commands.connectpssessioncommand", "Property[applicationname]"]
    - ["system.nullable<system.uint16>", "microsoft.powershell.commands.computerinfo", "Property[biossmbiosmajorversion]"]
    - ["system.string[]", "microsoft.powershell.commands.importcsvcommand", "Property[path]"]
    - ["system.string", "microsoft.powershell.commands.writeprogresscommand", "Property[activity]"]
    - ["microsoft.powershell.commands.powerstate", "microsoft.powershell.commands.powerstate!", "Field[powersavehibernate]"]
    - ["system.string", "microsoft.powershell.commands.newpsrolecapabilityfilecommand", "Property[path]"]
    - ["microsoft.powershell.commands.operatingsystemsku", "microsoft.powershell.commands.operatingsystemsku!", "Field[enterpriseserveria64edition]"]
    - ["system.management.automation.psobject", "microsoft.powershell.commands.whereobjectcommand", "Property[inputobject]"]
    - ["system.nullable<system.boolean>", "microsoft.powershell.commands.computerinfo", "Property[osdataexecutionprevention32bitapplications]"]
    - ["system.boolean", "microsoft.powershell.commands.copyitemcommand", "Property[providersupportsshouldprocess]"]
    - ["microsoft.powershell.commands.deviceguardsoftwaresecure[]", "microsoft.powershell.commands.deviceguard", "Property[securityservicesrunning]"]
    - ["system.boolean", "microsoft.powershell.commands.addtypecompilererror", "Property[iswarning]"]
    - ["system.string", "microsoft.powershell.commands.removetypedatacommand", "Property[typename]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.showcommandcommand", "Property[nocommonparameter]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.converttojsoncommand", "Property[compress]"]
    - ["system.string", "microsoft.powershell.commands.processor", "Property[description]"]
    - ["system.int32", "microsoft.powershell.commands.psworkflowexecutionoption", "Property[maxactivityprocesses]"]
    - ["system.string[]", "microsoft.powershell.commands.gettimezonecommand", "Property[id]"]
    - ["system.string[]", "microsoft.powershell.commands.receivejobcommand", "Property[location]"]
    - ["system.string", "microsoft.powershell.commands.commonrunspacecommandbase!", "Field[runspaceidparameterset]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.getvariablecommand", "Property[valueonly]"]
    - ["system.int32", "microsoft.powershell.commands.getdatecommand", "Property[minute]"]
    - ["system.string", "microsoft.powershell.commands.clearitemcommand", "Property[filter]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.startprocesscommand", "Property[loaduserprofile]"]
    - ["microsoft.powershell.commands.operatingsystemsku", "microsoft.powershell.commands.operatingsystemsku!", "Field[windowshomeserver]"]
    - ["system.nullable<system.boolean>", "microsoft.powershell.commands.updatetypedatacommand", "Property[inheritpropertyserializationset]"]
    - ["microsoft.powershell.commands.ostype", "microsoft.powershell.commands.ostype!", "Field[hp_mpe]"]
    - ["system.int32", "microsoft.powershell.commands.disconnectpssessioncommand", "Property[throttlelimit]"]
    - ["microsoft.powershell.commands.operatingsystemsku", "microsoft.powershell.commands.operatingsystemsku!", "Field[webserveredition]"]
    - ["microsoft.powershell.commands.exportaliasformat", "microsoft.powershell.commands.exportaliasformat!", "Field[script]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.receivejobcommand", "Property[autoremovejob]"]
    - ["system.string", "microsoft.powershell.commands.addtypecommand", "Property[typedefinition]"]
    - ["system.int32", "microsoft.powershell.commands.newpsworkflowexecutionoptioncommand", "Property[maxconnectedsessions]"]
    - ["system.int32", "microsoft.powershell.commands.psworkflowexecutionoption", "Property[workflowshutdowntimeoutmsec]"]
    - ["system.nullable<system.datetime>", "microsoft.powershell.commands.computerinfo", "Property[biosreleasedate]"]
    - ["system.diagnostics.processwindowstyle", "microsoft.powershell.commands.startprocesscommand", "Property[windowstyle]"]
    - ["system.string[]", "microsoft.powershell.commands.savehelpcommand", "Property[destinationpath]"]
    - ["system.string", "microsoft.powershell.commands.writeorthrowerrorcommand", "Property[errorid]"]
    - ["system.boolean", "microsoft.powershell.commands.filesystemprovider", "Method[itemexists].ReturnValue"]
    - ["system.collections.generic.dictionary<system.string,system.string>", "microsoft.powershell.commands.webresponseobject", "Property[relationlink]"]
    - ["system.string[]", "microsoft.powershell.commands.connectpssessioncommand", "Property[containerid]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.converttojsoncommand", "Property[asarray]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.exportclixmlcommand", "Property[noclobber]"]
    - ["system.string", "microsoft.powershell.commands.exportformatdatacommand", "Property[path]"]
    - ["microsoft.powershell.commands.pcsystemtypeex", "microsoft.powershell.commands.pcsystemtypeex!", "Field[desktop]"]
    - ["microsoft.powershell.commands.powermanagementcapabilities", "microsoft.powershell.commands.powermanagementcapabilities!", "Field[powercyclingsupported]"]
    - ["system.string", "microsoft.powershell.commands.newwebserviceproxy", "Property[namespace]"]
    - ["system.string[]", "microsoft.powershell.commands.getfilehashcommand", "Property[path]"]
    - ["system.management.automation.runspaces.pssession", "microsoft.powershell.commands.receivepssessioncommand", "Property[session]"]
    - ["system.management.automation.psobject", "microsoft.powershell.commands.basecsvwritingcommand", "Property[inputobject]"]
    - ["system.string", "microsoft.powershell.commands.computerinfo", "Property[biosdescription]"]
    - ["system.management.automation.scriptblock", "microsoft.powershell.commands.foreachobjectcommand", "Property[begin]"]
    - ["system.object[]", "microsoft.powershell.commands.newpssessionconfigurationfilecommand", "Property[visiblecmdlets]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.setaclcommand", "Property[clearcentralaccesspolicy]"]
    - ["system.management.impersonationlevel", "microsoft.powershell.commands.restartcomputercommand", "Property[impersonation]"]
    - ["system.string", "microsoft.powershell.commands.controlpanelitem", "Method[tostring].ReturnValue"]
    - ["system.string", "microsoft.powershell.commands.psremotingcmdlet!", "Field[sshhostparameterset]"]
    - ["system.management.automation.pscredential", "microsoft.powershell.commands.startjobcommand", "Property[credential]"]
    - ["system.string", "microsoft.powershell.commands.contentcommandbase", "Property[filter]"]
    - ["system.string", "microsoft.powershell.commands.importlocalizeddata", "Property[basedirectory]"]
    - ["system.string", "microsoft.powershell.commands.getpssessioncommand", "Property[applicationname]"]
    - ["system.object", "microsoft.powershell.commands.registryprovider", "Method[setpropertydynamicparameters].ReturnValue"]
    - ["microsoft.powershell.commands.controlpanelitem[]", "microsoft.powershell.commands.showcontrolpanelitemcommand", "Property[inputobject]"]
    - ["microsoft.powershell.commands.cpuavailability", "microsoft.powershell.commands.cpuavailability!", "Field[intest]"]
    - ["system.string", "microsoft.powershell.commands.invokeitemcommand", "Property[filter]"]
    - ["microsoft.powershell.commands.ostype", "microsoft.powershell.commands.ostype!", "Field[dgux]"]
    - ["system.string", "microsoft.powershell.commands.psexecutioncmdlet!", "Field[filepathsessionparameterset]"]
    - ["system.version", "microsoft.powershell.commands.exportpssessioncommand!", "Property[versionofscriptgenerator]"]
    - ["microsoft.powershell.commands.wmistate", "microsoft.powershell.commands.wmistate!", "Field[running]"]
    - ["system.management.automation.pscredential", "microsoft.powershell.commands.stopcomputercommand", "Property[credential]"]
    - ["system.object", "microsoft.powershell.commands.filesystemprovider", "Method[getitemdynamicparameters].ReturnValue"]
    - ["system.string", "microsoft.powershell.commands.computerinfo", "Property[timezone]"]
    - ["system.management.automation.psdriveinfo", "microsoft.powershell.commands.filesystemprovider", "Method[newdrive].ReturnValue"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.suspendjobcommand", "Property[wait]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.starttranscriptcommand", "Property[noclobber]"]
    - ["system.string", "microsoft.powershell.commands.showcommandcommand", "Property[name]"]
    - ["system.string", "microsoft.powershell.commands.setmarkdownoptioncommand", "Property[header3color]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.setexecutionpolicycommand", "Property[force]"]
    - ["system.string[]", "microsoft.powershell.commands.getcountercommand", "Property[counter]"]
    - ["system.nullable<microsoft.powershell.commands.hardwaresecurity>", "microsoft.powershell.commands.computerinfo", "Property[csadminpasswordstatus]"]
    - ["system.string", "microsoft.powershell.commands.newmodulemanifestcommand", "Property[author]"]
    - ["system.string", "microsoft.powershell.commands.renameitempropertycommand", "Property[name]"]
    - ["system.management.automation.remoting.sessiontype", "microsoft.powershell.commands.newpssessionconfigurationfilecommand", "Property[sessiontype]"]
    - ["system.string", "microsoft.powershell.commands.invokerestmethodcommand", "Property[custommethod]"]
    - ["system.version", "microsoft.powershell.commands.newmodulemanifestcommand", "Property[powershellhostversion]"]
    - ["system.string", "microsoft.powershell.commands.computerinfo", "Property[csdnshostname]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.exportaliascommand", "Property[noclobber]"]
    - ["system.collections.generic.list<microsoft.powershell.commands.pspropertyexpression>", "microsoft.powershell.commands.pspropertyexpression", "Method[resolvenames].ReturnValue"]
    - ["system.string", "microsoft.powershell.commands.pshostprocessinfo", "Property[mainwindowtitle]"]
    - ["system.string", "microsoft.powershell.commands.getwineventcommand", "Property[filterxpath]"]
    - ["system.string", "microsoft.powershell.commands.computerchangeinfo", "Method[tostring].ReturnValue"]
    - ["system.version", "microsoft.powershell.commands.newpssessionconfigurationfilecommand", "Property[powershellversion]"]
    - ["system.string[]", "microsoft.powershell.commands.removepsdrivecommand", "Property[psprovider]"]
    - ["system.string[]", "microsoft.powershell.commands.importcsvcommand", "Property[literalpath]"]
    - ["system.string[]", "microsoft.powershell.commands.multipleservicecommandbase", "Property[suppliedcomputername]"]
    - ["system.string[]", "microsoft.powershell.commands.newservicecommand", "Property[dependson]"]
    - ["microsoft.powershell.executionpolicyscope", "microsoft.powershell.commands.getexecutionpolicycommand", "Property[scope]"]
    - ["system.guid[]", "microsoft.powershell.commands.getrunspacecommand", "Property[instanceid]"]
    - ["system.string", "microsoft.powershell.commands.joinpathcommand", "Property[childpath]"]
    - ["system.string[]", "microsoft.powershell.commands.networkadapter", "Property[ipaddresses]"]
    - ["system.int32", "microsoft.powershell.commands.psworkflowexecutionoption", "Property[sessionthrottlelimit]"]
    - ["system.security.cryptography.x509certificates.x509certificate2", "microsoft.powershell.commands.setauthenticodesignaturecommand", "Property[certificate]"]
    - ["system.string", "microsoft.powershell.commands.writeorthrowerrorcommand", "Property[message]"]
    - ["system.string[]", "microsoft.powershell.commands.enablecomputerrestorecommand", "Property[drive]"]
    - ["system.string[]", "microsoft.powershell.commands.newitempropertycommand", "Property[path]"]
    - ["system.string", "microsoft.powershell.commands.invokewmimethod", "Property[path]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.getexperimentalfeaturecommand", "Property[listavailable]"]
    - ["system.int32", "microsoft.powershell.commands.webrequestpscmdlet", "Property[retryintervalsec]"]
    - ["microsoft.powershell.commands.deviceguardsoftwaresecure", "microsoft.powershell.commands.deviceguardsoftwaresecure!", "Field[credentialguard]"]
    - ["system.string", "microsoft.powershell.commands.invokecommandcommand", "Property[jobname]"]
    - ["system.collections.generic.list<microsoft.powershell.commands.enhancedkeyusagerepresentation>", "microsoft.powershell.commands.enhancedkeyusageproperty", "Property[enhancedkeyusagelist]"]
    - ["system.string", "microsoft.powershell.commands.settimezonecommand", "Property[name]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.objecteventregistrationbase", "Property[supportevent]"]
    - ["system.string", "microsoft.powershell.commands.unprotectcmsmessagecommand", "Property[literalpath]"]
    - ["system.int64", "microsoft.powershell.commands.formathex", "Property[offset]"]
    - ["system.datetime", "microsoft.powershell.commands.setdatecommand", "Property[date]"]
    - ["system.int32", "microsoft.powershell.commands.debugjobcommand", "Property[id]"]
    - ["system.guid", "microsoft.powershell.commands.enterpssessioncommand", "Property[instanceid]"]
    - ["system.string", "microsoft.powershell.commands.psuseragent!", "Property[opera]"]
    - ["microsoft.powershell.commands.ostype", "microsoft.powershell.commands.ostype!", "Field[hpux]"]
    - ["system.int32", "microsoft.powershell.commands.psbreakpointcreationbase", "Property[column]"]
    - ["microsoft.powershell.commands.ostype", "microsoft.powershell.commands.ostype!", "Field[win95]"]
    - ["system.string[]", "microsoft.powershell.commands.clearrecyclebincommand", "Property[driveletter]"]
    - ["system.int32", "microsoft.powershell.commands.selectobjectcommand", "Property[skiplast]"]
    - ["system.string[]", "microsoft.powershell.commands.importcountercommand", "Property[path]"]
    - ["system.string", "microsoft.powershell.commands.copyitempropertycommand", "Property[name]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.getjobcommand", "Property[includechildjob]"]
    - ["system.string", "microsoft.powershell.commands.getpssessioncapabilitycommand", "Property[configurationname]"]
    - ["system.string", "microsoft.powershell.commands.selectxmlinfo", "Method[tostring].ReturnValue"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.getwmiobjectcommand", "Property[amended]"]
    - ["system.string", "microsoft.powershell.commands.computerinfo", "Property[bioscurrentlanguage]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.selectstringcommand", "Property[simplematch]"]
    - ["system.string", "microsoft.powershell.commands.pssessionconfigurationcommandbase", "Property[path]"]
    - ["system.string", "microsoft.powershell.commands.registerengineeventcommand", "Property[sourceidentifier]"]
    - ["system.nullable<system.int32>", "microsoft.powershell.commands.wsmanconfigurationoption", "Property[maxconcurrentcommandspersession]"]
    - ["system.string", "microsoft.powershell.commands.pushlocationcommand", "Property[path]"]
    - ["system.string", "microsoft.powershell.commands.processor", "Property[role]"]
    - ["system.string", "microsoft.powershell.commands.geteventpssnapin", "Property[descriptionresource]"]
    - ["system.string", "microsoft.powershell.commands.showeventlogcommand", "Property[computername]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.newmodulemanifestcommand", "Property[passthru]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.getmodulecommand", "Property[skipeditioncheck]"]
    - ["microsoft.powershell.commands.pcsystemtypeex", "microsoft.powershell.commands.pcsystemtypeex!", "Field[maximum]"]
    - ["system.string[]", "microsoft.powershell.commands.invokeitemcommand", "Property[literalpath]"]
    - ["system.diagnostics.eventlogentrytype", "microsoft.powershell.commands.writeeventlogcommand", "Property[entrytype]"]
    - ["system.string[]", "microsoft.powershell.commands.enabledisableexperimentalfeaturecommandbase", "Property[name]"]
    - ["system.codedom.compiler.compilerparameters", "microsoft.powershell.commands.addtypecommand", "Property[compilerparameters]"]
    - ["system.string[]", "microsoft.powershell.commands.getformatdatacommand", "Property[typename]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.exportcsvcommand", "Property[append]"]
    - ["system.string[]", "microsoft.powershell.commands.splitpathcommand", "Property[path]"]
    - ["microsoft.powershell.commands.ostype", "microsoft.powershell.commands.ostype!", "Field[unknown]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.getuniquecommand", "Property[ontype]"]
    - ["system.string", "microsoft.powershell.commands.enterpssessioncommand", "Property[computername]"]
    - ["system.management.automation.signature", "microsoft.powershell.commands.getauthenticodesignaturecommand", "Method[performaction].ReturnValue"]
    - ["system.nullable<system.boolean>", "microsoft.powershell.commands.computerinfo", "Property[ospaeenabled]"]
    - ["system.string", "microsoft.powershell.commands.unprotectcmsmessagecommand", "Property[path]"]
    - ["system.int32", "microsoft.powershell.commands.stopcomputercommand", "Property[throttlelimit]"]
    - ["microsoft.powershell.commands.ostype", "microsoft.powershell.commands.ostype!", "Field[other]"]
    - ["system.boolean", "microsoft.powershell.commands.pssessionconfigurationcommandbase", "Property[runasvirtualaccount]"]
    - ["system.int64", "microsoft.powershell.commands.limiteventlogcommand", "Property[maximumsize]"]
    - ["system.string[]", "microsoft.powershell.commands.geteventpssnapin", "Property[formats]"]
    - ["system.string[]", "microsoft.powershell.commands.receivejobcommand", "Property[computername]"]
    - ["system.net.mail.mailpriority", "microsoft.powershell.commands.sendmailmessage", "Property[priority]"]
    - ["system.string[]", "microsoft.powershell.commands.commonrunspacecommandbase", "Property[runspacename]"]
    - ["system.timespan", "microsoft.powershell.commands.webresponseobject", "Field[perreadtimeout]"]
    - ["system.string", "microsoft.powershell.commands.psrunspacecmdlet!", "Field[containeridinstanceidparameterset]"]
    - ["system.int32", "microsoft.powershell.commands.writeprogresscommand", "Property[parentid]"]
    - ["microsoft.powershell.commands.dataexecutionpreventionsupportpolicy", "microsoft.powershell.commands.dataexecutionpreventionsupportpolicy!", "Field[optout]"]
    - ["microsoft.powershell.commands.operatingsystemsku", "microsoft.powershell.commands.operatingsystemsku!", "Field[smallbusinessserverpremiumedition]"]
    - ["system.object[]", "microsoft.powershell.commands.updatelistcommand", "Property[replace]"]
    - ["system.object[]", "microsoft.powershell.commands.formatcustomcommand", "property[property]"]
    - ["system.string[]", "microsoft.powershell.commands.computerinfo", "Property[ospagingfiles]"]
    - ["system.object", "microsoft.powershell.commands.setitemcommand", "Property[value]"]
    - ["system.string", "microsoft.powershell.commands.computerinfo", "Property[biossmbiosbiosversion]"]
    - ["system.string", "microsoft.powershell.commands.restartcomputercommand", "Property[wsmanauthentication]"]
    - ["system.string", "microsoft.powershell.commands.newvariablecommand", "Property[description]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.addtypecommand", "Property[ignorewarnings]"]
    - ["system.string", "microsoft.powershell.commands.filesystemcontentreaderdynamicparameters", "Property[delimiter]"]
    - ["system.boolean", "microsoft.powershell.commands.certificateprovider", "Method[isvalidpath].ReturnValue"]
    - ["system.string[]", "microsoft.powershell.commands.importclixmlcommand", "Property[path]"]
    - ["system.string", "microsoft.powershell.commands.basichtmlwebresponseobject", "Property[content]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.gethelpcommand", "Property[showwindow]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.getcommandcommand", "Property[showcommandinfo]"]
    - ["system.object", "microsoft.powershell.commands.newpssessionconfigurationfilecommand", "Property[variabledefinitions]"]
    - ["system.nullable<microsoft.powershell.commands.cpustatus>", "microsoft.powershell.commands.processor", "Property[cpustatus]"]
    - ["system.management.automation.psobject", "microsoft.powershell.commands.getaclcommand", "Property[inputobject]"]
    - ["microsoft.powershell.commands.frontpanelresetstatus", "microsoft.powershell.commands.frontpanelresetstatus!", "Field[notimplemented]"]
    - ["system.string", "microsoft.powershell.commands.newmodulemanifestcommand", "Property[path]"]
    - ["system.string", "microsoft.powershell.commands.importaliascommand", "Property[scope]"]
    - ["system.boolean", "microsoft.powershell.commands.sessionstateproviderbase", "Method[isvalidpath].ReturnValue"]
    - ["system.nullable<system.boolean>", "microsoft.powershell.commands.computerinfo", "Property[biossmbiospresent]"]
    - ["system.string[]", "microsoft.powershell.commands.showmarkdowncommand", "Property[literalpath]"]
    - ["microsoft.powershell.commands.formobject", "microsoft.powershell.commands.formobjectcollection", "Property[item]"]
    - ["system.char", "microsoft.powershell.commands.convertfromcsvcommand", "Property[delimiter]"]
    - ["system.string", "microsoft.powershell.commands.converttosecurestringcommand", "Property[string]"]
    - ["system.double", "microsoft.powershell.commands.showcommandcommand", "Property[width]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.testcomputersecurechannelcommand", "Property[repair]"]
    - ["system.string[]", "microsoft.powershell.commands.addtypecommand", "Property[path]"]
    - ["system.object[]", "microsoft.powershell.commands.invokewmimethod", "Property[argumentlist]"]
    - ["system.boolean", "microsoft.powershell.commands.passthroughcontentcommandbase", "Property[providersupportsshouldprocess]"]
    - ["system.string[]", "microsoft.powershell.commands.variablecommandbase", "Property[excludefilters]"]
    - ["system.string", "microsoft.powershell.commands.writealiascommandbase", "Property[name]"]
    - ["microsoft.powershell.commands.powerplatformrole", "microsoft.powershell.commands.powerplatformrole!", "Field[maximumenumvalue]"]
    - ["system.string", "microsoft.powershell.commands.helpcategoryinvalidexception", "Property[message]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.serviceoperationbasecommand", "Property[passthru]"]
    - ["system.string", "microsoft.powershell.commands.computerinfo", "Property[csworkgroup]"]
    - ["system.string", "microsoft.powershell.commands.computerinfo", "Property[cssystemfamily]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.invokecommandcommand", "Property[asjob]"]
    - ["system.string", "microsoft.powershell.commands.modulespecification", "Method[tostring].ReturnValue"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.getmodulecommand", "Property[listavailable]"]
    - ["system.string[]", "microsoft.powershell.commands.removemodulecommand", "Property[name]"]
    - ["microsoft.powershell.commands.ostype", "microsoft.powershell.commands.ostype!", "Field[inferno]"]
    - ["system.nullable<system.int32>", "microsoft.powershell.commands.wsmanconfigurationoption", "Property[maxmemorypersessionmb]"]
    - ["system.object", "microsoft.powershell.commands.filesystemprovider", "Method[clearcontentdynamicparameters].ReturnValue"]
    - ["system.string[]", "microsoft.powershell.commands.moveitempropertycommand", "Property[path]"]
    - ["system.security.cryptography.x509certificates.x509certificatecollection", "microsoft.powershell.commands.webrequestsession", "Property[certificates]"]
    - ["system.management.automation.job[]", "microsoft.powershell.commands.resumejobcommand", "Property[job]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.setmarkdownoptioncommand", "Property[passthru]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.filesystemcontentdynamicparametersbase", "Property[asbytestream]"]
    - ["microsoft.powershell.commands.ostype", "microsoft.powershell.commands.ostype!", "Field[osf]"]
    - ["system.string", "microsoft.powershell.commands.modulespecification", "Property[name]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.exportformatdatacommand", "Property[includescriptblock]"]
    - ["system.int32", "microsoft.powershell.commands.getcountercommand", "Property[sampleinterval]"]
    - ["system.string", "microsoft.powershell.commands.webrequestsession", "Property[useragent]"]
    - ["system.int32", "microsoft.powershell.commands.psworkflowexecutionoption", "Property[maxrunningworkflows]"]
    - ["system.codedom.compiler.codedomprovider", "microsoft.powershell.commands.addtypecommand", "Property[codedomprovider]"]
    - ["system.string[]", "microsoft.powershell.commands.matchinfocontext", "Property[precontext]"]
    - ["system.string[]", "microsoft.powershell.commands.addtypecommandbase", "Property[referencedassemblies]"]
    - ["system.string[]", "microsoft.powershell.commands.getaliascommand", "Property[definition]"]
    - ["system.security.accesscontrol.objectsecurity", "microsoft.powershell.commands.registryprovider", "Method[newsecuritydescriptoroftype].ReturnValue"]
    - ["system.nullable<microsoft.powershell.commands.producttype>", "microsoft.powershell.commands.computerinfo", "Property[osproducttype]"]
    - ["system.management.automation.runspaces.pssession", "microsoft.powershell.commands.importmodulecommand", "Property[pssession]"]
    - ["system.collections.hashtable", "microsoft.powershell.commands.x509storelocation", "Property[storenames]"]
    - ["system.string[]", "microsoft.powershell.commands.getaclcommand", "Property[path]"]
    - ["system.string", "microsoft.powershell.commands.importworkflowcommand!", "Property[unabletostartworkflowmessagemessage]"]
    - ["system.string[]", "microsoft.powershell.commands.enablepssessionconfigurationcommand", "Property[name]"]
    - ["system.string[]", "microsoft.powershell.commands.getpssnapincommand", "Property[name]"]
    - ["system.string", "microsoft.powershell.commands.getchilditemcommand", "Property[filter]"]
    - ["system.security.accesscontrol.authorizationrulecollection", "microsoft.powershell.commands.securitydescriptorcommandsbase!", "Method[getaccess].ReturnValue"]
    - ["system.version", "microsoft.powershell.commands.getformatdatacommand", "Property[powershellversion]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.whereobjectcommand", "Property[cnotmatch]"]
    - ["system.boolean", "microsoft.powershell.commands.clearitemcommand", "Property[providersupportsshouldprocess]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.tracecommandcommand", "Property[pshost]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.disablepsremotingcommand", "Property[force]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.webrequestpscmdlet", "Property[disablekeepalive]"]
    - ["system.int32[]", "microsoft.powershell.commands.jobcmdletbase", "Property[id]"]
    - ["system.string[]", "microsoft.powershell.commands.newmodulemanifestcommand", "Property[cmdletstoexport]"]
    - ["microsoft.powershell.commands.operatingsystemsku", "microsoft.powershell.commands.operatingsystemsku!", "Field[smallbusinessserverpremiumcore]"]
    - ["system.string", "microsoft.powershell.commands.setmarkdownoptioncommand", "Property[linkforegroundcolor]"]
    - ["microsoft.powershell.commands.operatingsystemsku", "microsoft.powershell.commands.operatingsystemsku!", "Field[enterpriseservercoreedition]"]
    - ["microsoft.powershell.commands.joinoptions", "microsoft.powershell.commands.joinoptions!", "Field[deferspnset]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.newpssessionconfigurationfilecommand", "Property[full]"]
    - ["system.string[]", "microsoft.powershell.commands.testpathcommand", "Property[exclude]"]
    - ["system.int64", "microsoft.powershell.commands.newpssessionconfigurationfilecommand", "Property[userdrivemaximumsize]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.stopcomputercommand", "Property[force]"]
    - ["system.string[]", "microsoft.powershell.commands.invokeitemcommand", "Property[include]"]
    - ["system.int64", "microsoft.powershell.commands.getcontentcommand", "Property[readcount]"]
    - ["system.collections.idictionary", "microsoft.powershell.commands.newpsrolecapabilityfilecommand", "Property[environmentvariables]"]
    - ["system.nullable<system.int32>", "microsoft.powershell.commands.textmeasureinfo", "Property[words]"]
    - ["microsoft.powershell.commands.powermanagementcapabilities", "microsoft.powershell.commands.powermanagementcapabilities!", "Field[disabled]"]
    - ["system.management.managementobject", "microsoft.powershell.commands.setwmiinstance", "Property[inputobject]"]
    - ["system.string", "microsoft.powershell.commands.computerinfo", "Property[osname]"]
    - ["system.string", "microsoft.powershell.commands.processor", "Property[processorid]"]
    - ["system.string", "microsoft.powershell.commands.filesystemprovider!", "Method[modewithouthardlink].ReturnValue"]
    - ["system.nullable<system.boolean>", "microsoft.powershell.commands.computerinfo", "Property[cspartofdomain]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.wmibasecmdlet", "Property[asjob]"]
    - ["system.threading.apartmentstate", "microsoft.powershell.commands.pssessionconfigurationcommandbase", "Property[threadapartmentstate]"]
    - ["system.string", "microsoft.powershell.commands.formobject", "Property[action]"]
    - ["system.int32", "microsoft.powershell.commands.foreachobjectcommand", "Property[throttlelimit]"]
    - ["system.boolean", "microsoft.powershell.commands.newpsdrivecommand", "Property[providersupportsshouldprocess]"]
    - ["system.datetime", "microsoft.powershell.commands.newtimespancommand", "Property[start]"]
    - ["system.nullable<system.uint32>", "microsoft.powershell.commands.processor", "Property[currentclockspeed]"]
    - ["system.int32[]", "microsoft.powershell.commands.selectstringcommand", "Property[context]"]
    - ["system.int32", "microsoft.powershell.commands.limiteventlogcommand", "Property[retentiondays]"]
    - ["system.string", "microsoft.powershell.commands.hotfix", "Property[description]"]
    - ["system.string[]", "microsoft.powershell.commands.removeeventlogcommand", "Property[source]"]
    - ["system.string[]", "microsoft.powershell.commands.selectxmlcommand", "Property[literalpath]"]
    - ["system.string", "microsoft.powershell.commands.tracecommandcommand", "Property[command]"]
    - ["system.string", "microsoft.powershell.commands.measureinfo", "property[property]"]
    - ["system.string", "microsoft.powershell.commands.controlpanelitem", "Property[name]"]
    - ["system.string[]", "microsoft.powershell.commands.getculturecommand", "Property[name]"]
    - ["system.boolean", "microsoft.powershell.commands.passthroughitempropertycommandbase", "Property[providersupportsshouldprocess]"]
    - ["system.string", "microsoft.powershell.commands.registerobjecteventcommand", "Property[eventname]"]
    - ["system.nullable<system.boolean>", "microsoft.powershell.commands.computerinfo", "Property[cshypervisorpresent]"]
    - ["system.string", "microsoft.powershell.commands.copyitemcommand", "Property[destination]"]
    - ["microsoft.powershell.commands.netconnectionstatus", "microsoft.powershell.commands.netconnectionstatus!", "Field[hardwarenotpresent]"]
    - ["system.string", "microsoft.powershell.commands.selectxmlinfo", "Property[pattern]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.exportaliascommand", "Property[force]"]
    - ["system.int32", "microsoft.powershell.commands.newpssessionoptioncommand", "Property[operationtimeout]"]
    - ["system.string", "microsoft.powershell.commands.importworkflowcommand!", "Property[invalidpsparametercollectionentryerrormessage]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.invokerestmethodcommand", "Property[followrellink]"]
    - ["system.string", "microsoft.powershell.commands.startjobcommand", "Property[applicationname]"]
    - ["system.string", "microsoft.powershell.commands.psexecutioncmdlet!", "Field[filepathvmidparameterset]"]
    - ["system.string[]", "microsoft.powershell.commands.neweventlogcommand", "Property[source]"]
    - ["system.string", "microsoft.powershell.commands.computerinfo", "Property[osbuildtype]"]
    - ["microsoft.powershell.commands.netconnectionstatus", "microsoft.powershell.commands.netconnectionstatus!", "Field[invalidaddress]"]
    - ["system.string", "microsoft.powershell.commands.newpsdrivecommand", "Property[scope]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.restartservicecommand", "Property[force]"]
    - ["system.boolean", "microsoft.powershell.commands.filesystemprovider", "Method[isitemcontainer].ReturnValue"]
    - ["system.string", "microsoft.powershell.commands.gethelpcodemethods!", "Method[gethelpuri].ReturnValue"]
    - ["system.management.automation.pscredential", "microsoft.powershell.commands.addcomputercommand", "Property[unjoindomaincredential]"]
    - ["system.net.icredentials", "microsoft.powershell.commands.webrequestsession", "Property[credentials]"]
    - ["system.string", "microsoft.powershell.commands.startprocesscommand", "Property[redirectstandardoutput]"]
    - ["system.type", "microsoft.powershell.commands.updatetypedatacommand", "Property[typeconverter]"]
    - ["microsoft.powershell.commands.ostype", "microsoft.powershell.commands.ostype!", "Field[dc_os]"]
    - ["system.string[]", "microsoft.powershell.commands.addtypecommandbase", "Property[usingnamespace]"]
    - ["system.string", "microsoft.powershell.commands.pssessionconfigurationcommandbase", "Property[startupscript]"]
    - ["system.management.automation.psobject", "microsoft.powershell.commands.registerobjecteventcommand", "Property[inputobject]"]
    - ["system.int64[]", "microsoft.powershell.commands.geteventlogcommand", "Property[instanceid]"]
    - ["system.string", "microsoft.powershell.commands.memberdefinition", "Property[name]"]
    - ["system.string[]", "microsoft.powershell.commands.getwineventcommand", "Property[listprovider]"]
    - ["microsoft.powershell.commands.operatingsystemsku", "microsoft.powershell.commands.operatingsystemsku!", "Field[storageenterpriseserveredition]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.getculturecommand", "Property[listavailable]"]
    - ["microsoft.powershell.commands.powerplatformrole", "microsoft.powershell.commands.powerplatformrole!", "Field[enterpriseserver]"]
    - ["system.management.automation.runspaces.pssessiontype", "microsoft.powershell.commands.registerpssessionconfigurationcommand", "Property[sessiontype]"]
    - ["system.string[]", "microsoft.powershell.commands.gethotfixcommand", "Property[computername]"]
    - ["system.string", "microsoft.powershell.commands.registerengineeventcommand", "Method[getsourceobjecteventname].ReturnValue"]
    - ["microsoft.powershell.commands.ostype", "microsoft.powershell.commands.ostype!", "Field[vm_esa]"]
    - ["system.string", "microsoft.powershell.commands.computerinfo", "Property[csusername]"]
    - ["system.string[]", "microsoft.powershell.commands.newmodulecommand", "Property[function]"]
    - ["system.object", "microsoft.powershell.commands.setitempropertycommand", "Property[value]"]
    - ["system.int32", "microsoft.powershell.commands.clearhistorycommand", "Property[count]"]
    - ["system.string", "microsoft.powershell.commands.securitydescriptorinfo", "Field[group]"]
    - ["system.string", "microsoft.powershell.commands.invokecommandcommand", "Property[filepath]"]
    - ["system.boolean", "microsoft.powershell.commands.computerchangeinfo", "Property[hassucceeded]"]
    - ["microsoft.powershell.commands.webauthenticationtype", "microsoft.powershell.commands.webauthenticationtype!", "Field[none]"]
    - ["microsoft.powershell.commands.testpathtype", "microsoft.powershell.commands.testpathcommand", "Property[pathtype]"]
    - ["system.int32", "microsoft.powershell.commands.selectobjectcommand", "Property[first]"]
    - ["system.diagnostics.process[]", "microsoft.powershell.commands.processbasecommand", "Property[inputobject]"]
    - ["system.datetime", "microsoft.powershell.commands.historyinfo", "Property[endexecutiontime]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.exportconsolecommand", "Property[force]"]
    - ["system.boolean", "microsoft.powershell.commands.matchinfo", "Property[ignorecase]"]
    - ["system.int32", "microsoft.powershell.commands.psworkflowexecutionoption", "Property[maxconnectedsessions]"]
    - ["microsoft.powershell.commands.powerstate", "microsoft.powershell.commands.powerstate!", "Field[powersaveunknown]"]
    - ["microsoft.powershell.commands.clipboardformat", "microsoft.powershell.commands.clipboardformat!", "Field[filedroplist]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.pssessionconfigurationcommandbase", "Property[force]"]
    - ["system.string", "microsoft.powershell.commands.newitemcommand", "Property[name]"]
    - ["system.uint32", "microsoft.powershell.commands.getchilditemcommand", "Property[depth]"]
    - ["system.string[]", "microsoft.powershell.commands.psworkflowexecutionoption", "Property[outofprocessactivity]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.webrequestpscmdlet", "Property[allowunencryptedauthentication]"]
    - ["microsoft.powershell.commands.cpustatus", "microsoft.powershell.commands.cpustatus!", "Field[idle]"]
    - ["system.nullable<system.uint32>", "microsoft.powershell.commands.computerinfo", "Property[osnumberoflicensedusers]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.whereobjectcommand", "Property[cle]"]
    - ["system.string", "microsoft.powershell.commands.clearitempropertycommand", "Property[name]"]
    - ["system.nullable<system.int32>", "microsoft.powershell.commands.getrandomcommand", "Property[setseed]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.webrequestpscmdlet", "Property[usedefaultcredentials]"]
    - ["microsoft.powershell.commands.websslprotocol", "microsoft.powershell.commands.websslprotocol!", "Field[tls13]"]
    - ["system.string[]", "microsoft.powershell.commands.psworkflowexecutionoption", "Property[allowedactivity]"]
    - ["system.string[]", "microsoft.powershell.commands.getvariablecommand", "Property[include]"]
    - ["system.string[]", "microsoft.powershell.commands.disconnectpssessioncommand", "Property[vmname]"]
    - ["microsoft.powershell.commands.ostype", "microsoft.powershell.commands.ostype!", "Field[tandemnsk]"]
    - ["system.string", "microsoft.powershell.commands.writeeventlogcommand", "Property[logname]"]
    - ["system.string", "microsoft.powershell.commands.environmentprovider!", "Field[providername]"]
    - ["system.string[]", "microsoft.powershell.commands.removeitempropertycommand", "Property[literalpath]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.updatehelpcommand", "Property[recurse]"]
    - ["system.string", "microsoft.powershell.commands.starttranscriptcommand", "Property[outputdirectory]"]
    - ["system.nullable<system.double>", "microsoft.powershell.commands.genericobjectmeasureinfo", "Property[standarddeviation]"]
    - ["microsoft.powershell.commands.netconnectionstatus", "microsoft.powershell.commands.netconnectionstatus!", "Field[authenticationsucceeded]"]
    - ["system.boolean", "microsoft.powershell.commands.modulespecification!", "Method[tryparse].ReturnValue"]
    - ["microsoft.powershell.commands.resetcapability", "microsoft.powershell.commands.resetcapability!", "Field[unknown]"]
    - ["system.string", "microsoft.powershell.commands.webrequestpscmdlet", "Property[transferencoding]"]
    - ["system.string", "microsoft.powershell.commands.enterpshostprocesscommand", "Property[custompipename]"]
    - ["system.string[]", "microsoft.powershell.commands.gethotfixcommand", "Property[description]"]
    - ["system.string[]", "microsoft.powershell.commands.setpsbreakpointcommand", "Property[variable]"]
    - ["system.string", "microsoft.powershell.commands.enterpssessioncommand", "Property[configurationname]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.whereobjectcommand", "Property[cnotlike]"]
    - ["system.nullable<microsoft.powershell.commands.operatingsystemsku>", "microsoft.powershell.commands.computerinfo", "Property[osoperatingsystemsku]"]
    - ["system.string", "microsoft.powershell.commands.getwmiobjectcommand", "Property[query]"]
    - ["system.string", "microsoft.powershell.commands.computerinfo", "Property[windowsversion]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.updatablehelpcommandbase", "Property[force]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.getculturecommand", "Property[nouseroverrides]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.gethelpcommand", "Property[online]"]
    - ["microsoft.powershell.commands.matchinfocontext", "microsoft.powershell.commands.matchinfo", "Property[context]"]
    - ["system.string", "microsoft.powershell.commands.utilityresources!", "Property[pathdoesnotexist]"]
    - ["microsoft.powershell.commands.ostype", "microsoft.powershell.commands.ostype!", "Field[mvs]"]
    - ["system.string[]", "microsoft.powershell.commands.contentcommandbase", "Property[include]"]
    - ["system.nullable<system.boolean>", "microsoft.powershell.commands.computerinfo", "Property[csbootromsupported]"]
    - ["system.nullable<system.uint16>", "microsoft.powershell.commands.computerinfo", "Property[osservicepackminorversion]"]
    - ["system.string[]", "microsoft.powershell.commands.getprocesscommand", "Property[name]"]
    - ["system.string", "microsoft.powershell.commands.selectobjectcommand", "Property[expandproperty]"]
    - ["system.string", "microsoft.powershell.commands.exportclixmlcommand", "Property[literalpath]"]
    - ["system.string", "microsoft.powershell.commands.registerwmieventcommand", "Property[class]"]
    - ["system.windows.forms.textdataformat", "microsoft.powershell.commands.getclipboardcommand", "Property[textformattype]"]
    - ["system.string[]", "microsoft.powershell.commands.getchilditemcommand", "Property[include]"]
    - ["microsoft.powershell.commands.pcsystemtype", "microsoft.powershell.commands.pcsystemtype!", "Field[mobile]"]
    - ["system.string[]", "microsoft.powershell.commands.testconnectioncommand", "Property[targetname]"]
    - ["system.string", "microsoft.powershell.commands.getcredentialcommand", "Property[username]"]
    - ["system.object", "microsoft.powershell.commands.getrandomcommand", "Property[maximum]"]
    - ["system.management.automation.switchparameter", "microsoft.powershell.commands.geteventlogcommand", "Property[asbaseobject]"]
    - ["system.string", "microsoft.powershell.commands.memberdefinition", "Method[tostring].ReturnValue"]
    - ["system.management.automation.scriptblock", "microsoft.powershell.commands.setpsbreakpointcommand", "Property[action]"]
    - ["system.string", "microsoft.powershell.commands.addtypecommandbase", "Property[namespace]"]
    - ["system.management.automation.psobject", "microsoft.powershell.commands.exportcsvcommand", "Property[inputobject]"]
    - ["microsoft.powershell.commands.operatingsystemsku", "microsoft.powershell.commands.operatingsystemsku!", "Field[webservercore]"]
    - ["system.string", "microsoft.powershell.commands.renameitempropertycommand", "Property[path]"]
    - ["system.string", "microsoft.powershell.commands.computerinfo", "Property[csmodel]"]
    - ["microsoft.powershell.commands.operatingsystemsku", "microsoft.powershell.commands.operatingsystemsku!", "Field[standardservercoreedition]"]
    - ["system.string[]", "microsoft.powershell.commands.formathex", "Property[path]"]
    - ["microsoft.powershell.commands.websslprotocol", "microsoft.powershell.commands.webrequestpscmdlet", "Property[sslprotocol]"]
    - ["system.nullable<system.uint64>", "microsoft.powershell.commands.computerinfo", "Property[osmaxprocessmemorysize]"]
    - ["system.string[]", "microsoft.powershell.commands.removepssnapincommand", "Property[name]"]
    - ["system.string", "microsoft.powershell.commands.receivejobcommand!", "Field[locationparameterset]"]
    - ["system.string", "microsoft.powershell.commands.computerinfo", "Property[biosseralnumber]"]
    - ["microsoft.powershell.commands.hardwaresecurity", "microsoft.powershell.commands.hardwaresecurity!", "Field[unknown]"]
    - ["system.string[]", "microsoft.powershell.commands.savehelpcommand", "Property[literalpath]"]
    - ["system.string", "microsoft.powershell.commands.starttranscriptcommand", "Property[literalpath]"]
    - ["system.nullable<microsoft.powershell.commands.deviceguardsmartstatus>", "microsoft.powershell.commands.computerinfo", "Property[deviceguardsmartstatus]"]
    - ["system.collections.idictionary[]", "microsoft.powershell.commands.newpssessionconfigurationfilecommand", "Property[functiondefinitions]"]
    - ["system.management.automation.scriptblock[]", "microsoft.powershell.commands.foreachobjectcommand", "Property[process]"]
    - ["system.string", "microsoft.powershell.commands.exportaliascommand", "Property[path]"]
    - ["system.nullable<system.double>", "microsoft.powershell.commands.pssessionconfigurationcommandbase", "Property[maximumreceiveddatasizepercommandmb]"]
    - ["system.string", "microsoft.powershell.commands.setwmiinstance", "Property[class]"]
    - ["microsoft.powershell.commands.operatingsystemsku", "microsoft.powershell.commands.operatingsystemsku!", "Field[smallbusinessserveredition]"]
    - ["system.int32[]", "microsoft.powershell.commands.psrunspacecmdlet", "Property[id]"]

  - addsTo:
      pack: microsoft-sdl/powershell-all
      extensible: summaryModel
    data:
      - ["microsoft.powershell.commands.basichtmlwebresponseobject", "Method[basichtmlwebresponseobject]", "Argument[0]", "Argument[this]", "taint"]
      - ["microsoft.powershell.commands.basichtmlwebresponseobject", "Method[get_images]", "Argument[this]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.basichtmlwebresponseobject", "Method[get_inputfields]", "Argument[this]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.basichtmlwebresponseobject", "Method[get_links]", "Argument[this]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.bytecollection", "Method[bytecollection]", "Argument[0].Element", "Argument[this]", "taint"]
      - ["microsoft.powershell.commands.bytecollection", "Method[bytecollection]", "Argument[1].Element", "Argument[this]", "taint"]
      - ["microsoft.powershell.commands.bytecollection", "Method[bytecollection]", "Argument[1]", "Argument[this]", "taint"]
      - ["microsoft.powershell.commands.bytecollection", "Method[bytecollection]", "Argument[2]", "Argument[this]", "taint"]
      - ["microsoft.powershell.commands.bytecollection", "Method[get_ascii]", "Argument[this]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.bytecollection", "Method[get_hexbytes]", "Argument[this]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.commonrunspacecommandbase", "Method[getdebuggerfromrunspace]", "Argument[0]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.commonrunspacecommandbase", "Method[getrunspaces]", "Argument[this]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.corecommandbase", "Method[get_retrieveddynamicparameters]", "Argument[this]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.filesystemprovider!", "Method[namestring]", "Argument[0]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.formobject", "Method[formobject]", "Argument[0]", "Argument[this]", "taint"]
      - ["microsoft.powershell.commands.formobject", "Method[formobject]", "Argument[1]", "Argument[this]", "taint"]
      - ["microsoft.powershell.commands.formobject", "Method[formobject]", "Argument[2]", "Argument[this]", "taint"]
      - ["microsoft.powershell.commands.formobjectcollection", "Method[get_item]", "Argument[this]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.getjobcommand", "Method[findjobs]", "Argument[this]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.helpcategoryinvalidexception", "Method[get_helpcategory]", "Argument[this]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.helpcategoryinvalidexception", "Method[get_message]", "Argument[this]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.helpcategoryinvalidexception", "Method[helpcategoryinvalidexception]", "Argument[0]", "Argument[this]", "taint"]
      - ["microsoft.powershell.commands.helpnotfoundexception", "Method[get_helptopic]", "Argument[this]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.helpnotfoundexception", "Method[get_message]", "Argument[this]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.helpnotfoundexception", "Method[helpnotfoundexception]", "Argument[0]", "Argument[this]", "taint"]
      - ["microsoft.powershell.commands.historyinfo", "Method[clone]", "Argument[this]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.historyinfo", "Method[tostring]", "Argument[this]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.httpresponseexception", "Method[httpresponseexception]", "Argument[1]", "Argument[this]", "taint"]
      - ["microsoft.powershell.commands.internalsymboliclinklinkcodemethods!", "Method[gettarget]", "Argument[0]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.internalsymboliclinklinkcodemethods!", "Method[resolvedtarget]", "Argument[0]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.jsonobject!", "Method[convertfromjson]", "Argument[0]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.jsonobject!", "Method[converttojson]", "Argument[0]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.matchinfo", "Method[relativepath]", "Argument[this]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.matchinfo", "Method[toemphasizedstring]", "Argument[this]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.matchinfo", "Method[tostring]", "Argument[this]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.matchinfocontext", "Method[clone]", "Argument[this]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.memberdefinition", "Method[memberdefinition]", "Argument[0]", "Argument[this]", "taint"]
      - ["microsoft.powershell.commands.memberdefinition", "Method[memberdefinition]", "Argument[1]", "Argument[this]", "taint"]
      - ["microsoft.powershell.commands.memberdefinition", "Method[memberdefinition]", "Argument[3]", "Argument[this]", "taint"]
      - ["microsoft.powershell.commands.memberdefinition", "Method[tostring]", "Argument[this]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.modulespecification", "Method[modulespecification]", "Argument[0].Element", "Argument[this]", "taint"]
      - ["microsoft.powershell.commands.modulespecification", "Method[modulespecification]", "Argument[0]", "Argument[this]", "taint"]
      - ["microsoft.powershell.commands.modulespecification", "Method[tostring]", "Argument[this]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.objecteventregistrationbase", "Method[get_newsubscriber]", "Argument[this]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.objecteventregistrationbase", "Method[getsourceobject]", "Argument[this]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.objecteventregistrationbase", "Method[getsourceobjecteventname]", "Argument[this]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.pshostprocessinfo", "Method[getpipenamefilepath]", "Argument[this]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.pspropertyexpression", "Method[getvalues]", "Argument[this]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.pspropertyexpression", "Method[pspropertyexpression]", "Argument[0]", "Argument[this]", "taint"]
      - ["microsoft.powershell.commands.pspropertyexpression", "Method[resolvenames]", "Argument[this]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.pspropertyexpression", "Method[tostring]", "Argument[this]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.pspropertyexpressionresult", "Method[pspropertyexpressionresult]", "Argument[0]", "Argument[this]", "taint"]
      - ["microsoft.powershell.commands.pspropertyexpressionresult", "Method[pspropertyexpressionresult]", "Argument[1]", "Argument[this]", "taint"]
      - ["microsoft.powershell.commands.pspropertyexpressionresult", "Method[pspropertyexpressionresult]", "Argument[2]", "Argument[this]", "taint"]
      - ["microsoft.powershell.commands.psremotingbasecmdlet", "Method[parsesshhostname]", "Argument[0]", "Argument[1]", "taint"]
      - ["microsoft.powershell.commands.psremotingbasecmdlet", "Method[parsesshhostname]", "Argument[0]", "Argument[2]", "taint"]
      - ["microsoft.powershell.commands.psremotingbasecmdlet", "Method[parsesshhostname]", "Argument[this]", "Argument[2]", "taint"]
      - ["microsoft.powershell.commands.psremotingcmdlet", "Method[resolveappname]", "Argument[0]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.psremotingcmdlet", "Method[resolvecomputername]", "Argument[0]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.psremotingcmdlet", "Method[resolveshell]", "Argument[0]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.psrunspacecmdlet", "Method[getmatchingrunspaces]", "Argument[this]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.psrunspacecmdlet", "Method[getmatchingrunspacesbyname]", "Argument[this]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.psrunspacecmdlet", "Method[getmatchingrunspacesbyrunspaceid]", "Argument[this]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.psrunspacedebug", "Method[psrunspacedebug]", "Argument[2]", "Argument[this]", "taint"]
      - ["microsoft.powershell.commands.securestringcommandbase", "Method[securestringcommandbase]", "Argument[0]", "Argument[this]", "taint"]
      - ["microsoft.powershell.commands.securitydescriptorcommandsbase!", "Method[getpath]", "Argument[0]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.selectxmlinfo", "Method[tostring]", "Argument[this]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.signaturecommandsbase", "Method[performaction]", "Argument[0]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.signaturecommandsbase", "Method[signaturecommandsbase]", "Argument[0]", "Argument[this]", "taint"]
      - ["microsoft.powershell.commands.webcmdletelementcollection", "Method[find]", "Argument[this]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.webcmdletelementcollection", "Method[findbyid]", "Argument[this]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.webcmdletelementcollection", "Method[findbyname]", "Argument[this]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.webresponseobject", "Method[tostring]", "Argument[this]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.webresponseobject", "Method[webresponseobject]", "Argument[0]", "Argument[this]", "taint"]
      - ["microsoft.powershell.commands.webresponseobject", "Method[webresponseobject]", "Argument[1]", "Argument[this]", "taint"]
      - ["microsoft.powershell.commands.webresponseobject", "Method[webresponseobject]", "Argument[2]", "Argument[this]", "taint"]
      - ["microsoft.powershell.commands.webresponseobject", "Method[webresponseobject]", "Argument[3]", "Argument[this]", "taint"]
      - ["microsoft.powershell.commands.basichtmlwebresponseobject", "Method[basichtmlwebresponseobject]", "Argument[0]", "Argument[this]", "taint"]
      - ["microsoft.powershell.commands.basichtmlwebresponseobject", "Method[get_images]", "Argument[this]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.basichtmlwebresponseobject", "Method[get_inputfields]", "Argument[this]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.basichtmlwebresponseobject", "Method[get_links]", "Argument[this]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.bytecollection", "Method[bytecollection]", "Argument[0].Element", "Argument[this]", "taint"]
      - ["microsoft.powershell.commands.bytecollection", "Method[bytecollection]", "Argument[1].Element", "Argument[this]", "taint"]
      - ["microsoft.powershell.commands.bytecollection", "Method[bytecollection]", "Argument[1]", "Argument[this]", "taint"]
      - ["microsoft.powershell.commands.bytecollection", "Method[bytecollection]", "Argument[2]", "Argument[this]", "taint"]
      - ["microsoft.powershell.commands.bytecollection", "Method[get_ascii]", "Argument[this]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.bytecollection", "Method[get_hexbytes]", "Argument[this]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.commonrunspacecommandbase", "Method[getdebuggerfromrunspace]", "Argument[0]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.commonrunspacecommandbase", "Method[getrunspaces]", "Argument[this]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.corecommandbase", "Method[get_retrieveddynamicparameters]", "Argument[this]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.filesystemprovider!", "Method[namestring]", "Argument[0]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.formobject", "Method[formobject]", "Argument[0]", "Argument[this]", "taint"]
      - ["microsoft.powershell.commands.formobject", "Method[formobject]", "Argument[1]", "Argument[this]", "taint"]
      - ["microsoft.powershell.commands.formobject", "Method[formobject]", "Argument[2]", "Argument[this]", "taint"]
      - ["microsoft.powershell.commands.formobjectcollection", "Method[get_item]", "Argument[this]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.getjobcommand", "Method[findjobs]", "Argument[this]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.helpcategoryinvalidexception", "Method[get_helpcategory]", "Argument[this]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.helpcategoryinvalidexception", "Method[get_message]", "Argument[this]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.helpcategoryinvalidexception", "Method[helpcategoryinvalidexception]", "Argument[0]", "Argument[this]", "taint"]
      - ["microsoft.powershell.commands.helpnotfoundexception", "Method[get_helptopic]", "Argument[this]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.helpnotfoundexception", "Method[get_message]", "Argument[this]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.helpnotfoundexception", "Method[helpnotfoundexception]", "Argument[0]", "Argument[this]", "taint"]
      - ["microsoft.powershell.commands.historyinfo", "Method[clone]", "Argument[this]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.historyinfo", "Method[tostring]", "Argument[this]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.httpresponseexception", "Method[httpresponseexception]", "Argument[1]", "Argument[this]", "taint"]
      - ["microsoft.powershell.commands.internalsymboliclinklinkcodemethods!", "Method[gettarget]", "Argument[0]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.internalsymboliclinklinkcodemethods!", "Method[resolvedtarget]", "Argument[0]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.jsonobject!", "Method[convertfromjson]", "Argument[0]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.jsonobject!", "Method[converttojson]", "Argument[0]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.matchinfo", "Method[relativepath]", "Argument[this]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.matchinfo", "Method[toemphasizedstring]", "Argument[this]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.matchinfo", "Method[tostring]", "Argument[this]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.matchinfocontext", "Method[clone]", "Argument[this]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.memberdefinition", "Method[memberdefinition]", "Argument[0]", "Argument[this]", "taint"]
      - ["microsoft.powershell.commands.memberdefinition", "Method[memberdefinition]", "Argument[1]", "Argument[this]", "taint"]
      - ["microsoft.powershell.commands.memberdefinition", "Method[memberdefinition]", "Argument[3]", "Argument[this]", "taint"]
      - ["microsoft.powershell.commands.memberdefinition", "Method[tostring]", "Argument[this]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.modulespecification", "Method[modulespecification]", "Argument[0].Element", "Argument[this]", "taint"]
      - ["microsoft.powershell.commands.modulespecification", "Method[modulespecification]", "Argument[0]", "Argument[this]", "taint"]
      - ["microsoft.powershell.commands.modulespecification", "Method[tostring]", "Argument[this]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.objecteventregistrationbase", "Method[get_newsubscriber]", "Argument[this]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.objecteventregistrationbase", "Method[getsourceobject]", "Argument[this]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.objecteventregistrationbase", "Method[getsourceobjecteventname]", "Argument[this]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.pshostprocessinfo", "Method[getpipenamefilepath]", "Argument[this]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.pspropertyexpression", "Method[getvalues]", "Argument[this]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.pspropertyexpression", "Method[pspropertyexpression]", "Argument[0]", "Argument[this]", "taint"]
      - ["microsoft.powershell.commands.pspropertyexpression", "Method[resolvenames]", "Argument[this]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.pspropertyexpression", "Method[tostring]", "Argument[this]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.pspropertyexpressionresult", "Method[pspropertyexpressionresult]", "Argument[0]", "Argument[this]", "taint"]
      - ["microsoft.powershell.commands.pspropertyexpressionresult", "Method[pspropertyexpressionresult]", "Argument[1]", "Argument[this]", "taint"]
      - ["microsoft.powershell.commands.pspropertyexpressionresult", "Method[pspropertyexpressionresult]", "Argument[2]", "Argument[this]", "taint"]
      - ["microsoft.powershell.commands.psremotingbasecmdlet", "Method[parsesshhostname]", "Argument[0]", "Argument[1]", "taint"]
      - ["microsoft.powershell.commands.psremotingbasecmdlet", "Method[parsesshhostname]", "Argument[0]", "Argument[2]", "taint"]
      - ["microsoft.powershell.commands.psremotingbasecmdlet", "Method[parsesshhostname]", "Argument[this]", "Argument[2]", "taint"]
      - ["microsoft.powershell.commands.psremotingcmdlet", "Method[resolveappname]", "Argument[0]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.psremotingcmdlet", "Method[resolvecomputername]", "Argument[0]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.psremotingcmdlet", "Method[resolveshell]", "Argument[0]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.psrunspacecmdlet", "Method[getmatchingrunspaces]", "Argument[this]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.psrunspacecmdlet", "Method[getmatchingrunspacesbyname]", "Argument[this]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.psrunspacecmdlet", "Method[getmatchingrunspacesbyrunspaceid]", "Argument[this]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.psrunspacedebug", "Method[psrunspacedebug]", "Argument[2]", "Argument[this]", "taint"]
      - ["microsoft.powershell.commands.securestringcommandbase", "Method[securestringcommandbase]", "Argument[0]", "Argument[this]", "taint"]
      - ["microsoft.powershell.commands.securitydescriptorcommandsbase!", "Method[getpath]", "Argument[0]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.selectxmlinfo", "Method[tostring]", "Argument[this]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.signaturecommandsbase", "Method[performaction]", "Argument[0]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.signaturecommandsbase", "Method[signaturecommandsbase]", "Argument[0]", "Argument[this]", "taint"]
      - ["microsoft.powershell.commands.webcmdletelementcollection", "Method[find]", "Argument[this]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.webcmdletelementcollection", "Method[findbyid]", "Argument[this]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.webcmdletelementcollection", "Method[findbyname]", "Argument[this]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.webresponseobject", "Method[tostring]", "Argument[this]", "ReturnValue", "taint"]
      - ["microsoft.powershell.commands.webresponseobject", "Method[webresponseobject]", "Argument[0]", "Argument[this]", "taint"]
      - ["microsoft.powershell.commands.webresponseobject", "Method[webresponseobject]", "Argument[1]", "Argument[this]", "taint"]
      - ["microsoft.powershell.commands.webresponseobject", "Method[webresponseobject]", "Argument[2]", "Argument[this]", "taint"]
      - ["microsoft.powershell.commands.webresponseobject", "Method[webresponseobject]", "Argument[3]", "Argument[this]", "taint"]