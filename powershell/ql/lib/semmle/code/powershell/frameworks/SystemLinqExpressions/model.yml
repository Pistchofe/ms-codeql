extensions:
  - addsTo:
      pack: microsoft-sdl/powershell-all
      extensible: typeModel
    data:
    - ["System.Linq.Expressions.LabelExpression", "System.Linq.Expressions.LabelExpression", "Method[Update].ReturnValue"]
    - ["System.Collections.ObjectModel.ReadOnlyCollection<System.Linq.Expressions.Expression>", "System.Linq.Expressions.InvocationExpression", "Property[Arguments]"]
    - ["System.Boolean", "System.Linq.Expressions.Expression", "Property[CanReduce]"]
    - ["System.Reflection.MethodInfo", "System.Linq.Expressions.BinaryExpression", "Property[Method]"]
    - ["System.Int32", "System.Linq.Expressions.DebugInfoExpression", "Property[EndColumn]"]
    - ["System.Linq.Expressions.MemberExpression", "System.Linq.Expressions.MemberExpression", "Method[Update].ReturnValue"]
    - ["System.Linq.Expressions.SwitchExpression", "System.Linq.Expressions.SwitchExpression", "Method[Update].ReturnValue"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ExpressionType!", "Field[Assign]"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ExpressionType!", "Field[IsTrue]"]
    - ["System.Linq.Expressions.UnaryExpression", "System.Linq.Expressions.Expression!", "Method[Convert].ReturnValue"]
    - ["System.Linq.Expressions.BinaryExpression", "System.Linq.Expressions.Expression!", "Method[LeftShift].ReturnValue"]
    - ["System.Linq.Expressions.BinaryExpression", "System.Linq.Expressions.Expression!", "Method[ReferenceEqual].ReturnValue"]
    - ["System.Type", "System.Linq.Expressions.RuntimeVariablesExpression", "Property[Type]"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ExpressionType!", "Field[Try]"]
    - ["System.Linq.Expressions.DefaultExpression", "System.Linq.Expressions.Expression!", "Method[Empty].ReturnValue"]
    - ["System.Type", "System.Linq.Expressions.TypeBinaryExpression", "Property[Type]"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ExpressionType!", "Field[Negate]"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.TryExpression", "Method[Accept].ReturnValue"]
    - ["System.Linq.Expressions.MemberMemberBinding", "System.Linq.Expressions.MemberMemberBinding", "Method[Update].ReturnValue"]
    - ["System.Collections.ObjectModel.ReadOnlyCollection<System.Linq.Expressions.ParameterExpression>", "System.Linq.Expressions.RuntimeVariablesExpression", "Property[Variables]"]
    - ["System.Collections.ObjectModel.ReadOnlyCollection<System.Linq.Expressions.Expression>", "System.Linq.Expressions.IndexExpression", "Property[Arguments]"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.GotoExpression", "Property[NodeType]"]
    - ["System.Linq.Expressions.ElementInit", "System.Linq.Expressions.ElementInit", "Method[Update].ReturnValue"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.NewArrayExpression", "Method[Accept].ReturnValue"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.ExpressionVisitor", "Method[VisitDynamic].ReturnValue"]
    - ["System.Linq.Expressions.UnaryExpression", "System.Linq.Expressions.Expression!", "Method[OnesComplement].ReturnValue"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.Expression", "Method[VisitChildren].ReturnValue"]
    - ["System.Collections.ObjectModel.ReadOnlyCollection<System.Linq.Expressions.CatchBlock>", "System.Linq.Expressions.TryExpression", "Property[Handlers]"]
    - ["System.Linq.Expressions.UnaryExpression", "System.Linq.Expressions.Expression!", "Method[Decrement].ReturnValue"]
    - ["System.Linq.Expressions.UnaryExpression", "System.Linq.Expressions.Expression!", "Method[PostDecrementAssign].ReturnValue"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.IndexExpression", "Property[Object]"]
    - ["System.Linq.Expressions.TryExpression", "System.Linq.Expressions.Expression!", "Method[MakeTry].ReturnValue"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.Expression", "Method[Accept].ReturnValue"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.ExpressionVisitor", "Method[VisitDebugInfo].ReturnValue"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.InvocationExpression", "Property[NodeType]"]
    - ["System.String", "System.Linq.Expressions.Expression", "Method[ToString].ReturnValue"]
    - ["System.Linq.Expressions.TryExpression", "System.Linq.Expressions.Expression!", "Method[TryCatch].ReturnValue"]
    - ["System.Linq.Expressions.UnaryExpression", "System.Linq.Expressions.Expression!", "Method[UnaryPlus].ReturnValue"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ExpressionType!", "Field[Goto]"]
    - ["System.Linq.Expressions.MemberAssignment", "System.Linq.Expressions.ExpressionVisitor", "Method[VisitMemberAssignment].ReturnValue"]
    - ["System.Linq.Expressions.LambdaExpression", "System.Linq.Expressions.BinaryExpression", "Property[Conversion]"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.DynamicExpressionVisitor", "Method[VisitDynamic].ReturnValue"]
    - ["System.Linq.Expressions.BinaryExpression", "System.Linq.Expressions.Expression!", "Method[SubtractAssign].ReturnValue"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.ExpressionVisitor", "Method[VisitGoto].ReturnValue"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.Expression", "Property[NodeType]"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ExpressionType!", "Field[ExclusiveOr]"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ConditionalExpression", "Property[NodeType]"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.ExpressionVisitor", "Method[Visit].ReturnValue"]
    - ["System.Linq.Expressions.BinaryExpression", "System.Linq.Expressions.Expression!", "Method[AddChecked].ReturnValue"]
    - ["System.Linq.Expressions.UnaryExpression", "System.Linq.Expressions.Expression!", "Method[Not].ReturnValue"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.SwitchExpression", "Property[SwitchValue]"]
    - ["System.Reflection.MemberInfo", "System.Linq.Expressions.MemberExpression", "Property[Member]"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ExpressionType!", "Field[Modulo]"]
    - ["System.Linq.Expressions.BinaryExpression", "System.Linq.Expressions.Expression!", "Method[And].ReturnValue"]
    - ["System.Guid", "System.Linq.Expressions.SymbolDocumentInfo", "Property[DocumentType]"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.BinaryExpression", "Property[Right]"]
    - ["System.Linq.Expressions.LoopExpression", "System.Linq.Expressions.LoopExpression", "Method[Update].ReturnValue"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ExpressionType!", "Field[Power]"]
    - ["System.Linq.Expressions.BinaryExpression", "System.Linq.Expressions.Expression!", "Method[MultiplyAssign].ReturnValue"]
    - ["System.Linq.Expressions.NewArrayExpression", "System.Linq.Expressions.Expression!", "Method[NewArrayInit].ReturnValue"]
    - ["System.Linq.Expressions.MemberExpression", "System.Linq.Expressions.Expression!", "Method[Property].ReturnValue"]
    - ["System.Boolean", "System.Linq.Expressions.BinaryExpression", "Property[IsLiftedToNull]"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ExpressionType!", "Field[SubtractAssignChecked]"]
    - ["System.Linq.Expressions.BinaryExpression", "System.Linq.Expressions.Expression!", "Method[ModuloAssign].ReturnValue"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ExpressionType!", "Field[Call]"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.DynamicExpression", "Property[NodeType]"]
    - ["System.Linq.Expressions.ConstantExpression", "System.Linq.Expressions.Expression!", "Method[Constant].ReturnValue"]
    - ["System.Linq.Expressions.BinaryExpression", "System.Linq.Expressions.Expression!", "Method[MultiplyChecked].ReturnValue"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ExpressionType!", "Field[GreaterThanOrEqual]"]
    - ["System.Linq.Expressions.LabelTarget", "System.Linq.Expressions.ExpressionVisitor", "Method[VisitLabelTarget].ReturnValue"]
    - ["System.Object", "System.Linq.Expressions.IDynamicExpression", "Method[CreateCallSite].ReturnValue"]
    - ["System.Linq.Expressions.TypeBinaryExpression", "System.Linq.Expressions.TypeBinaryExpression", "Method[Update].ReturnValue"]
    - ["System.Linq.Expressions.BinaryExpression", "System.Linq.Expressions.Expression!", "Method[SubtractChecked].ReturnValue"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.BlockExpression", "Property[NodeType]"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.BlockExpression", "Property[Result]"]
    - ["System.Linq.Expressions.MemberExpression", "System.Linq.Expressions.Expression!", "Method[Field].ReturnValue"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.ConditionalExpression", "Property[IfFalse]"]
    - ["System.Linq.Expressions.IndexExpression", "System.Linq.Expressions.Expression!", "Method[Property].ReturnValue"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.ExpressionVisitor", "Method[VisitLabel].ReturnValue"]
    - ["System.Boolean", "System.Linq.Expressions.BinaryExpression", "Property[IsLifted]"]
    - ["System.Boolean", "System.Linq.Expressions.DebugInfoExpression", "Property[IsClear]"]
    - ["System.Linq.Expressions.BinaryExpression", "System.Linq.Expressions.Expression!", "Method[ExclusiveOr].ReturnValue"]
    - ["System.Linq.Expressions.BinaryExpression", "System.Linq.Expressions.Expression!", "Method[MultiplyAssignChecked].ReturnValue"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ListInitExpression", "Property[NodeType]"]
    - ["System.Linq.Expressions.IndexExpression", "System.Linq.Expressions.IndexExpression", "Method[Update].ReturnValue"]
    - ["System.Collections.ObjectModel.ReadOnlyCollection<System.Linq.Expressions.Expression>", "System.Linq.Expressions.ElementInit", "Property[Arguments]"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.IndexExpression", "Property[NodeType]"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.SwitchExpression", "Property[NodeType]"]
    - ["System.Linq.Expressions.BinaryExpression", "System.Linq.Expressions.Expression!", "Method[SubtractAssignChecked].ReturnValue"]
    - ["System.Collections.ObjectModel.ReadOnlyCollection<System.Linq.Expressions.Expression>", "System.Linq.Expressions.DynamicExpression", "Property[Arguments]"]
    - ["System.Reflection.MethodInfo", "System.Linq.Expressions.SwitchExpression", "Property[Comparison]"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.InvocationExpression", "Property[Expression]"]
    - ["System.Type", "System.Linq.Expressions.NewArrayExpression", "Property[Type]"]
    - ["System.Linq.Expressions.DynamicExpression", "System.Linq.Expressions.DynamicExpression!", "Method[MakeDynamic].ReturnValue"]
    - ["System.Linq.Expressions.TypeBinaryExpression", "System.Linq.Expressions.Expression!", "Method[TypeEqual].ReturnValue"]
    - ["System.Linq.Expressions.BinaryExpression", "System.Linq.Expressions.Expression!", "Method[ReferenceNotEqual].ReturnValue"]
    - ["System.String", "System.Linq.Expressions.ElementInit", "Method[ToString].ReturnValue"]
    - ["System.Linq.Expressions.SymbolDocumentInfo", "System.Linq.Expressions.DebugInfoExpression", "Property[Document]"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.ExpressionVisitor", "Method[VisitSwitch].ReturnValue"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ExpressionType!", "Field[LeftShift]"]
    - ["System.Linq.Expressions.SwitchCase", "System.Linq.Expressions.SwitchCase", "Method[Update].ReturnValue"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.ExpressionVisitor", "Method[VisitMemberInit].ReturnValue"]
    - ["System.Int32", "System.Linq.Expressions.MethodCallExpression", "Property[System.Linq.Expressions.IArgumentProvider.ArgumentCount]"]
    - ["System.Type", "System.Linq.Expressions.MethodCallExpression", "Property[Type]"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.CatchBlock", "Property[Filter]"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ExpressionType!", "Field[Constant]"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ExpressionType!", "Field[ConvertChecked]"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.TryExpression", "Property[NodeType]"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.NewExpression", "Method[System.Linq.Expressions.IArgumentProvider.GetArgument].ReturnValue"]
    - ["System.Type", "System.Linq.Expressions.Expression", "Property[Type]"]
    - ["System.Linq.Expressions.MemberBindingType", "System.Linq.Expressions.MemberBinding", "Property[BindingType]"]
    - ["System.Linq.Expressions.BinaryExpression", "System.Linq.Expressions.Expression!", "Method[LeftShiftAssign].ReturnValue"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ExpressionType!", "Field[Lambda]"]
    - ["System.Linq.Expressions.TryExpression", "System.Linq.Expressions.Expression!", "Method[TryFinally].ReturnValue"]
    - ["System.Collections.ObjectModel.ReadOnlyCollection<System.Linq.Expressions.Expression>", "System.Linq.Expressions.MethodCallExpression", "Property[Arguments]"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ExpressionType!", "Field[RuntimeVariables]"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ExpressionType!", "Field[ModuloAssign]"]
    - ["System.Linq.Expressions.BinaryExpression", "System.Linq.Expressions.Expression!", "Method[RightShift].ReturnValue"]
    - ["System.Linq.Expressions.UnaryExpression", "System.Linq.Expressions.UnaryExpression", "Method[Update].ReturnValue"]
    - ["System.Int32", "System.Linq.Expressions.DebugInfoExpression", "Property[StartColumn]"]
    - ["System.Linq.Expressions.CatchBlock", "System.Linq.Expressions.Expression!", "Method[Catch].ReturnValue"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ExpressionType!", "Field[Conditional]"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ExpressionType!", "Field[MemberInit]"]
    - ["System.Linq.Expressions.DebugInfoExpression", "System.Linq.Expressions.Expression!", "Method[DebugInfo].ReturnValue"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ExpressionType!", "Field[Switch]"]
    - ["System.Linq.Expressions.GotoExpressionKind", "System.Linq.Expressions.GotoExpressionKind!", "Field[Break]"]
    - ["System.Collections.ObjectModel.ReadOnlyCollection<System.Linq.Expressions.Expression>", "System.Linq.Expressions.BlockExpression", "Property[Expressions]"]
    - ["System.Collections.ObjectModel.ReadOnlyCollection<System.Linq.Expressions.Expression>", "System.Linq.Expressions.ExpressionVisitor", "Method[Visit].ReturnValue"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ExpressionType!", "Field[Block]"]
    - ["System.Type", "System.Linq.Expressions.LambdaExpression", "Property[Type]"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.DefaultExpression", "Property[NodeType]"]
    - ["System.Reflection.MethodInfo", "System.Linq.Expressions.ElementInit", "Property[AddMethod]"]
    - ["System.Object", "System.Linq.Expressions.ConstantExpression", "Property[Value]"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ExpressionType!", "Field[Dynamic]"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ExpressionType!", "Field[NegateChecked]"]
    - ["System.Linq.Expressions.BinaryExpression", "System.Linq.Expressions.Expression!", "Method[Power].ReturnValue"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.ExpressionVisitor", "Method[VisitIndex].ReturnValue"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.LoopExpression", "Property[Body]"]
    - ["System.Collections.ObjectModel.ReadOnlyCollection<System.Linq.Expressions.MemberBinding>", "System.Linq.Expressions.MemberMemberBinding", "Property[Bindings]"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.DynamicExpression", "Method[Accept].ReturnValue"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.ExpressionVisitor", "Method[VisitNewArray].ReturnValue"]
    - ["System.Linq.Expressions.SwitchCase", "System.Linq.Expressions.ExpressionVisitor", "Method[VisitSwitchCase].ReturnValue"]
    - ["System.Linq.Expressions.NewArrayExpression", "System.Linq.Expressions.Expression!", "Method[NewArrayBounds].ReturnValue"]
    - ["System.Linq.Expressions.MemberBindingType", "System.Linq.Expressions.MemberBindingType!", "Field[ListBinding]"]
    - ["System.Linq.Expressions.SwitchExpression", "System.Linq.Expressions.Expression!", "Method[Switch].ReturnValue"]
    - ["System.Linq.Expressions.MethodCallExpression", "System.Linq.Expressions.Expression!", "Method[Call].ReturnValue"]
    - ["System.Linq.Expressions.BinaryExpression", "System.Linq.Expressions.Expression!", "Method[AddAssign].ReturnValue"]
    - ["System.Boolean", "System.Linq.Expressions.UnaryExpression", "Property[IsLifted]"]
    - ["System.Linq.Expressions.BinaryExpression", "System.Linq.Expressions.Expression!", "Method[Multiply].ReturnValue"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ExpressionType!", "Field[Default]"]
    - ["System.String", "System.Linq.Expressions.LabelTarget", "Property[Name]"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.ConditionalExpression", "Property[Test]"]
    - ["System.Collections.ObjectModel.ReadOnlyCollection<T>", "System.Linq.Expressions.ExpressionVisitor!", "Method[Visit<T>].ReturnValue"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ExpressionType!", "Field[Subtract]"]
    - ["System.Linq.Expressions.ListInitExpression", "System.Linq.Expressions.Expression!", "Method[ListInit].ReturnValue"]
    - ["System.Int32", "System.Linq.Expressions.IndexExpression", "Property[System.Linq.Expressions.IArgumentProvider.ArgumentCount]"]
    - ["System.Linq.Expressions.MethodCallExpression", "System.Linq.Expressions.MethodCallExpression", "Method[Update].ReturnValue"]
    - ["System.Linq.Expressions.MemberAssignment", "System.Linq.Expressions.MemberAssignment", "Method[Update].ReturnValue"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ExpressionType!", "Field[SubtractAssign]"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.MemberInitExpression", "Property[NodeType]"]
    - ["System.String", "System.Linq.Expressions.LambdaExpression", "Property[Name]"]
    - ["System.Linq.Expressions.GotoExpression", "System.Linq.Expressions.Expression!", "Method[Return].ReturnValue"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.NewExpression", "Method[Accept].ReturnValue"]
    - ["System.Linq.Expressions.TryExpression", "System.Linq.Expressions.Expression!", "Method[TryFault].ReturnValue"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.TryExpression", "Property[Finally]"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.MemberInitExpression", "Method[Accept].ReturnValue"]
    - ["System.Boolean", "System.Linq.Expressions.Expression!", "Method[TryGetActionType].ReturnValue"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ExpressionType!", "Field[NewArrayInit]"]
    - ["System.String", "System.Linq.Expressions.SymbolDocumentInfo", "Property[FileName]"]
    - ["System.Type", "System.Linq.Expressions.CatchBlock", "Property[Test]"]
    - ["System.Collections.ObjectModel.ReadOnlyCollection<System.Linq.Expressions.ParameterExpression>", "System.Linq.Expressions.LambdaExpression", "Property[Parameters]"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ExpressionType!", "Field[PostIncrementAssign]"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.GotoExpression", "Property[Value]"]
    - ["System.Linq.Expressions.NewExpression", "System.Linq.Expressions.NewExpression", "Method[Update].ReturnValue"]
    - ["System.Linq.Expressions.UnaryExpression", "System.Linq.Expressions.Expression!", "Method[MakeUnary].ReturnValue"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.UnaryExpression", "Property[Operand]"]
    - ["System.Type", "System.Linq.Expressions.LabelExpression", "Property[Type]"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ExpressionType!", "Field[MemberAccess]"]
    - ["System.Linq.Expressions.UnaryExpression", "System.Linq.Expressions.Expression!", "Method[PreDecrementAssign].ReturnValue"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ExpressionType!", "Field[TypeAs]"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.ConstantExpression", "Method[Accept].ReturnValue"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ExpressionType!", "Field[Convert]"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.BinaryExpression", "Property[Left]"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.MethodCallExpression", "Method[Accept].ReturnValue"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.TypeBinaryExpression", "Property[Expression]"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.ExpressionVisitor", "Method[VisitParameter].ReturnValue"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ExpressionType!", "Field[AddAssignChecked]"]
    - ["System.Linq.Expressions.ParameterExpression", "System.Linq.Expressions.Expression!", "Method[Parameter].ReturnValue"]
    - ["System.Linq.Expressions.BinaryExpression", "System.Linq.Expressions.Expression!", "Method[PowerAssign].ReturnValue"]
    - ["System.Reflection.MemberInfo", "System.Linq.Expressions.MemberBinding", "Property[Member]"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.ListInitExpression", "Method[Accept].ReturnValue"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ExpressionType!", "Field[UnaryPlus]"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ExpressionType!", "Field[LeftShiftAssign]"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ExpressionType!", "Field[PostDecrementAssign]"]
    - ["System.Type", "System.Linq.Expressions.LambdaExpression", "Property[ReturnType]"]
    - ["System.Linq.Expressions.BinaryExpression", "System.Linq.Expressions.Expression!", "Method[Equal].ReturnValue"]
    - ["System.Linq.Expressions.MemberInitExpression", "System.Linq.Expressions.Expression!", "Method[MemberInit].ReturnValue"]
    - ["System.Delegate", "System.Linq.Expressions.LambdaExpression", "Method[Compile].ReturnValue"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.ExpressionVisitor", "Method[VisitMember].ReturnValue"]
    - ["System.Type", "System.Linq.Expressions.ListInitExpression", "Property[Type]"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.UnaryExpression", "Method[Accept].ReturnValue"]
    - ["System.Object", "System.Linq.Expressions.DynamicExpression", "Method[System.Linq.Expressions.IDynamicExpression.CreateCallSite].ReturnValue"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.RuntimeVariablesExpression", "Property[NodeType]"]
    - ["System.Linq.Expressions.BinaryExpression", "System.Linq.Expressions.Expression!", "Method[LessThanOrEqual].ReturnValue"]
    - ["System.Linq.Expressions.GotoExpressionKind", "System.Linq.Expressions.GotoExpressionKind!", "Field[Goto]"]
    - ["System.Linq.Expressions.BinaryExpression", "System.Linq.Expressions.Expression!", "Method[LessThan].ReturnValue"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ExpressionType!", "Field[ArrayLength]"]
    - ["System.Linq.Expressions.IndexExpression", "System.Linq.Expressions.Expression!", "Method[MakeIndex].ReturnValue"]
    - ["System.Linq.Expressions.DynamicExpression", "System.Linq.Expressions.DynamicExpression", "Method[Update].ReturnValue"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.TypeBinaryExpression", "Method[Accept].ReturnValue"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.SwitchCase", "Property[Body]"]
    - ["System.Linq.Expressions.MemberBinding", "System.Linq.Expressions.ExpressionVisitor", "Method[VisitMemberBinding].ReturnValue"]
    - ["System.Linq.Expressions.LabelExpression", "System.Linq.Expressions.Expression!", "Method[Label].ReturnValue"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ExpressionType!", "Field[LessThanOrEqual]"]
    - ["System.Linq.Expressions.NewExpression", "System.Linq.Expressions.MemberInitExpression", "Property[NewExpression]"]
    - ["System.Boolean", "System.Linq.Expressions.MemberInitExpression", "Property[CanReduce]"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ExpressionType!", "Field[DebugInfo]"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ExpressionType!", "Field[MultiplyChecked]"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ExpressionType!", "Field[Invoke]"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.DynamicExpression", "Method[System.Linq.Expressions.IArgumentProvider.GetArgument].ReturnValue"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.TryExpression", "Property[Body]"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ExpressionType!", "Field[PowerAssign]"]
    - ["System.Linq.Expressions.LabelTarget", "System.Linq.Expressions.LoopExpression", "Property[BreakLabel]"]
    - ["System.Boolean", "System.Linq.Expressions.ParameterExpression", "Property[IsByRef]"]
    - ["System.Linq.Expressions.UnaryExpression", "System.Linq.Expressions.Expression!", "Method[IsTrue].ReturnValue"]
    - ["System.Reflection.MethodInfo", "System.Linq.Expressions.UnaryExpression", "Property[Method]"]
    - ["System.Linq.Expressions.MemberBindingType", "System.Linq.Expressions.MemberBindingType!", "Field[Assignment]"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ExpressionType!", "Field[NotEqual]"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ExpressionType!", "Field[AddChecked]"]
    - ["System.Linq.Expressions.ElementInit", "System.Linq.Expressions.ExpressionVisitor", "Method[VisitElementInit].ReturnValue"]
    - ["System.String", "System.Linq.Expressions.LabelTarget", "Method[ToString].ReturnValue"]
    - ["System.Linq.Expressions.GotoExpressionKind", "System.Linq.Expressions.GotoExpressionKind!", "Field[Continue]"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.GotoExpression", "Method[Accept].ReturnValue"]
    - ["System.Linq.Expressions.DynamicExpression", "System.Linq.Expressions.Expression!", "Method[MakeDynamic].ReturnValue"]
    - ["System.Boolean", "System.Linq.Expressions.BinaryExpression", "Property[CanReduce]"]
    - ["System.Linq.Expressions.BinaryExpression", "System.Linq.Expressions.BinaryExpression", "Method[Update].ReturnValue"]
    - ["System.Linq.Expressions.NewExpression", "System.Linq.Expressions.Expression!", "Method[New].ReturnValue"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ExpressionType!", "Field[AndAssign]"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ExpressionType!", "Field[OrElse]"]
    - ["System.Linq.Expressions.SwitchCase", "System.Linq.Expressions.Expression!", "Method[SwitchCase].ReturnValue"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.Expression", "Method[ReduceAndCheck].ReturnValue"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ExpressionType!", "Field[AndAlso]"]
    - ["System.Linq.Expressions.MemberMemberBinding", "System.Linq.Expressions.Expression!", "Method[MemberBind].ReturnValue"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ExpressionType!", "Field[RightShiftAssign]"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ExpressionType!", "Field[Extension]"]
    - ["System.Linq.Expressions.ConditionalExpression", "System.Linq.Expressions.Expression!", "Method[IfThen].ReturnValue"]
    - ["System.Linq.Expressions.MemberListBinding", "System.Linq.Expressions.MemberListBinding", "Method[Update].ReturnValue"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.TypeBinaryExpression", "Property[NodeType]"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.LambdaExpression", "Property[Body]"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.CatchBlock", "Property[Body]"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.IArgumentProvider", "Method[GetArgument].ReturnValue"]
    - ["System.Linq.Expressions.GotoExpression", "System.Linq.Expressions.Expression!", "Method[Goto].ReturnValue"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ExpressionType!", "Field[LessThan]"]
    - ["System.Type", "System.Linq.Expressions.Expression!", "Method[GetDelegateType].ReturnValue"]
    - ["System.Linq.Expressions.CatchBlock", "System.Linq.Expressions.Expression!", "Method[MakeCatchBlock].ReturnValue"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.ExpressionVisitor", "Method[VisitConstant].ReturnValue"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ExpressionType!", "Field[TypeIs]"]
    - ["System.Linq.Expressions.BinaryExpression", "System.Linq.Expressions.Expression!", "Method[Coalesce].ReturnValue"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ExpressionType!", "Field[Equal]"]
    - ["System.Linq.Expressions.LoopExpression", "System.Linq.Expressions.Expression!", "Method[Loop].ReturnValue"]
    - ["System.String", "System.Linq.Expressions.CatchBlock", "Method[ToString].ReturnValue"]
    - ["System.Linq.Expressions.CatchBlock", "System.Linq.Expressions.CatchBlock", "Method[Update].ReturnValue"]
    - ["System.Linq.Expressions.ParameterExpression", "System.Linq.Expressions.Expression!", "Method[Variable].ReturnValue"]
    - ["System.Type", "System.Linq.Expressions.UnaryExpression", "Property[Type]"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ParameterExpression", "Property[NodeType]"]
    - ["System.Linq.Expressions.MemberExpression", "System.Linq.Expressions.Expression!", "Method[MakeMemberAccess].ReturnValue"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.ConditionalExpression", "Method[Accept].ReturnValue"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.UnaryExpression", "Property[NodeType]"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.ExpressionVisitor", "Method[VisitConditional].ReturnValue"]
    - ["System.Collections.ObjectModel.ReadOnlyCollection<System.Linq.Expressions.ParameterExpression>", "System.Linq.Expressions.BlockExpression", "Property[Variables]"]
    - ["System.Linq.Expressions.TryExpression", "System.Linq.Expressions.TryExpression", "Method[Update].ReturnValue"]
    - ["System.Linq.Expressions.DynamicExpression", "System.Linq.Expressions.DynamicExpression!", "Method[Dynamic].ReturnValue"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ExpressionType!", "Field[Coalesce]"]
    - ["System.Linq.Expressions.TryExpression", "System.Linq.Expressions.Expression!", "Method[TryCatchFinally].ReturnValue"]
    - ["System.Linq.Expressions.GotoExpression", "System.Linq.Expressions.GotoExpression", "Method[Update].ReturnValue"]
    - ["System.Linq.Expressions.InvocationExpression", "System.Linq.Expressions.InvocationExpression", "Method[Update].ReturnValue"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.InvocationExpression", "Method[System.Linq.Expressions.IArgumentProvider.GetArgument].ReturnValue"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.InvocationExpression", "Method[Accept].ReturnValue"]
    - ["System.Boolean", "System.Linq.Expressions.Expression!", "Method[TryGetFuncType].ReturnValue"]
    - ["T", "System.Linq.Expressions.ExpressionVisitor", "Method[VisitAndConvert<T>].ReturnValue"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.IndexExpression", "Method[System.Linq.Expressions.IArgumentProvider.GetArgument].ReturnValue"]
    - ["System.Type", "System.Linq.Expressions.LoopExpression", "Property[Type]"]
    - ["System.Int32", "System.Linq.Expressions.IArgumentProvider", "Property[ArgumentCount]"]
    - ["System.Type", "System.Linq.Expressions.TypeBinaryExpression", "Property[TypeOperand]"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.ExpressionVisitor", "Method[VisitUnary].ReturnValue"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ExpressionType!", "Field[SubtractChecked]"]
    - ["System.Linq.Expressions.MemberExpression", "System.Linq.Expressions.Expression!", "Method[PropertyOrField].ReturnValue"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ExpressionType!", "Field[NewArrayBounds]"]
    - ["System.Linq.Expressions.LabelTarget", "System.Linq.Expressions.LoopExpression", "Property[ContinueLabel]"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ExpressionType!", "Field[Or]"]
    - ["System.Type", "System.Linq.Expressions.MemberInitExpression", "Property[Type]"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.DebugInfoExpression", "Method[Accept].ReturnValue"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ExpressionType!", "Field[GreaterThan]"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.MemberExpression", "Method[Accept].ReturnValue"]
    - ["System.Linq.Expressions.BinaryExpression", "System.Linq.Expressions.Expression!", "Method[RightShiftAssign].ReturnValue"]
    - ["System.Linq.Expressions.BinaryExpression", "System.Linq.Expressions.Expression!", "Method[Add].ReturnValue"]
    - ["System.Linq.Expressions.UnaryExpression", "System.Linq.Expressions.Expression!", "Method[IsFalse].ReturnValue"]
    - ["System.Linq.Expressions.BlockExpression", "System.Linq.Expressions.BlockExpression", "Method[Update].ReturnValue"]
    - ["System.Boolean", "System.Linq.Expressions.UnaryExpression", "Property[CanReduce]"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ExpressionType!", "Field[MultiplyAssignChecked]"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ExpressionType!", "Field[IsFalse]"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ExpressionType!", "Field[Not]"]
    - ["System.Linq.Expressions.NewExpression", "System.Linq.Expressions.ListInitExpression", "Property[NewExpression]"]
    - ["System.Linq.Expressions.BinaryExpression", "System.Linq.Expressions.Expression!", "Method[AndAssign].ReturnValue"]
    - ["System.Linq.Expressions.BinaryExpression", "System.Linq.Expressions.Expression!", "Method[GreaterThanOrEqual].ReturnValue"]
    - ["System.Int32", "System.Linq.Expressions.NewExpression", "Property[System.Linq.Expressions.IArgumentProvider.ArgumentCount]"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.MemberInitExpression", "Method[Reduce].ReturnValue"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.TryExpression", "Property[Fault]"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.DynamicExpression", "Method[System.Linq.Expressions.IDynamicExpression.Rewrite].ReturnValue"]
    - ["System.Linq.Expressions.UnaryExpression", "System.Linq.Expressions.Expression!", "Method[Negate].ReturnValue"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ExpressionType!", "Field[Quote]"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.MethodCallExpression", "Property[Object]"]
    - ["System.Linq.Expressions.BinaryExpression", "System.Linq.Expressions.Expression!", "Method[ExclusiveOrAssign].ReturnValue"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.ExpressionVisitor", "Method[VisitInvocation].ReturnValue"]
    - ["System.Collections.ObjectModel.ReadOnlyCollection<T>", "System.Linq.Expressions.ExpressionVisitor", "Method[VisitAndConvert<T>].ReturnValue"]
    - ["System.Linq.Expressions.GotoExpression", "System.Linq.Expressions.Expression!", "Method[Continue].ReturnValue"]
    - ["System.Runtime.CompilerServices.CallSiteBinder", "System.Linq.Expressions.DynamicExpression", "Property[Binder]"]
    - ["System.Linq.Expressions.BinaryExpression", "System.Linq.Expressions.Expression!", "Method[OrAssign].ReturnValue"]
    - ["System.Linq.Expressions.RuntimeVariablesExpression", "System.Linq.Expressions.Expression!", "Method[RuntimeVariables].ReturnValue"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ExpressionType!", "Field[Divide]"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ExpressionType!", "Field[Decrement]"]
    - ["System.Linq.Expressions.ListInitExpression", "System.Linq.Expressions.ListInitExpression", "Method[Update].ReturnValue"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ExpressionType!", "Field[And]"]
    - ["System.Linq.Expressions.UnaryExpression", "System.Linq.Expressions.Expression!", "Method[Quote].ReturnValue"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.ExpressionVisitor", "Method[VisitTry].ReturnValue"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.Expression", "Method[Reduce].ReturnValue"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ExpressionType!", "Field[ListInit]"]
    - ["System.Type", "System.Linq.Expressions.Expression!", "Method[GetFuncType].ReturnValue"]
    - ["System.Linq.Expressions.MethodCallExpression", "System.Linq.Expressions.Expression!", "Method[ArrayIndex].ReturnValue"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.ExpressionVisitor", "Method[VisitListInit].ReturnValue"]
    - ["System.Type", "System.Linq.Expressions.SwitchExpression", "Property[Type]"]
    - ["System.Linq.Expressions.LabelTarget", "System.Linq.Expressions.GotoExpression", "Property[Target]"]
    - ["System.Linq.Expressions.InvocationExpression", "System.Linq.Expressions.Expression!", "Method[Invoke].ReturnValue"]
    - ["System.Linq.Expressions.BinaryExpression", "System.Linq.Expressions.Expression!", "Method[Modulo].ReturnValue"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.ListInitExpression", "Method[Reduce].ReturnValue"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.ExpressionVisitor", "Method[VisitTypeBinary].ReturnValue"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ExpressionType!", "Field[PreIncrementAssign]"]
    - ["System.Linq.Expressions.ElementInit", "System.Linq.Expressions.Expression!", "Method[ElementInit].ReturnValue"]
    - ["System.Linq.Expressions.MemberBindingType", "System.Linq.Expressions.MemberBindingType!", "Field[MemberBinding]"]
    - ["System.Boolean", "System.Linq.Expressions.UnaryExpression", "Property[IsLiftedToNull]"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ExpressionType!", "Field[Label]"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.UnaryExpression", "Method[Reduce].ReturnValue"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ExpressionType!", "Field[ExclusiveOrAssign]"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.MethodCallExpression", "Method[System.Linq.Expressions.IArgumentProvider.GetArgument].ReturnValue"]
    - ["System.Int32", "System.Linq.Expressions.ElementInit", "Property[System.Linq.Expressions.IArgumentProvider.ArgumentCount]"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.MethodCallExpression", "Property[NodeType]"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ExpressionType!", "Field[Increment]"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ExpressionType!", "Field[TypeEqual]"]
    - ["System.Type", "System.Linq.Expressions.BlockExpression", "Property[Type]"]
    - ["System.Linq.Expressions.GotoExpressionKind", "System.Linq.Expressions.GotoExpression", "Property[Kind]"]
    - ["System.Linq.Expressions.GotoExpressionKind", "System.Linq.Expressions.GotoExpressionKind!", "Field[Return]"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ExpressionType!", "Field[Throw]"]
    - ["System.Linq.Expressions.BinaryExpression", "System.Linq.Expressions.Expression!", "Method[OrElse].ReturnValue"]
    - ["System.Type", "System.Linq.Expressions.InvocationExpression", "Property[Type]"]
    - ["System.Linq.Expressions.TypeBinaryExpression", "System.Linq.Expressions.Expression!", "Method[TypeIs].ReturnValue"]
    - ["System.Linq.Expressions.ParameterExpression", "System.Linq.Expressions.CatchBlock", "Property[Variable]"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.LoopExpression", "Method[Accept].ReturnValue"]
    - ["System.Linq.Expressions.UnaryExpression", "System.Linq.Expressions.Expression!", "Method[ArrayLength].ReturnValue"]
    - ["System.Linq.Expressions.ConditionalExpression", "System.Linq.Expressions.Expression!", "Method[Condition].ReturnValue"]
    - ["System.Linq.Expressions.BinaryExpression", "System.Linq.Expressions.Expression!", "Method[DivideAssign].ReturnValue"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ExpressionType!", "Field[PreDecrementAssign]"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.MemberExpression", "Property[NodeType]"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.LabelExpression", "Property[DefaultValue]"]
    - ["System.Int32", "System.Linq.Expressions.DebugInfoExpression", "Property[EndLine]"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ExpressionType!", "Field[ArrayIndex]"]
    - ["System.Linq.Expressions.MemberListBinding", "System.Linq.Expressions.Expression!", "Method[ListBind].ReturnValue"]
    - ["System.Linq.Expressions.MemberMemberBinding", "System.Linq.Expressions.ExpressionVisitor", "Method[VisitMemberMemberBinding].ReturnValue"]
    - ["System.Linq.Expressions.MemberListBinding", "System.Linq.Expressions.ExpressionVisitor", "Method[VisitMemberListBinding].ReturnValue"]
    - ["System.Collections.ObjectModel.ReadOnlyCollection<System.Linq.Expressions.Expression>", "System.Linq.Expressions.SwitchCase", "Property[TestValues]"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.IndexExpression", "Method[Accept].ReturnValue"]
    - ["System.Collections.ObjectModel.ReadOnlyCollection<System.Linq.Expressions.ElementInit>", "System.Linq.Expressions.ListInitExpression", "Property[Initializers]"]
    - ["System.Boolean", "System.Linq.Expressions.LambdaExpression", "Property[TailCall]"]
    - ["System.Linq.Expressions.UnaryExpression", "System.Linq.Expressions.Expression!", "Method[PreIncrementAssign].ReturnValue"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.MemberExpression", "Property[Expression]"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.SwitchExpression", "Method[Accept].ReturnValue"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ExpressionType!", "Field[MultiplyAssign]"]
    - ["System.Linq.Expressions.ConditionalExpression", "System.Linq.Expressions.Expression!", "Method[IfThenElse].ReturnValue"]
    - ["System.Linq.Expressions.UnaryExpression", "System.Linq.Expressions.Expression!", "Method[ConvertChecked].ReturnValue"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.LoopExpression", "Property[NodeType]"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ExpressionType!", "Field[RightShift]"]
    - ["System.Type", "System.Linq.Expressions.GotoExpression", "Property[Type]"]
    - ["System.Type", "System.Linq.Expressions.NewExpression", "Property[Type]"]
    - ["System.Type", "System.Linq.Expressions.ConstantExpression", "Property[Type]"]
    - ["System.Type", "System.Linq.Expressions.IndexExpression", "Property[Type]"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ExpressionType!", "Field[OrAssign]"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.ExpressionVisitor", "Method[VisitLoop].ReturnValue"]
    - ["System.Linq.Expressions.MemberAssignment", "System.Linq.Expressions.Expression!", "Method[Bind].ReturnValue"]
    - ["System.Linq.Expressions.SymbolDocumentInfo", "System.Linq.Expressions.Expression!", "Method[SymbolDocument].ReturnValue"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.NewExpression", "Property[NodeType]"]
    - ["System.Linq.Expressions.BinaryExpression", "System.Linq.Expressions.Expression!", "Method[Or].ReturnValue"]
    - ["System.Linq.Expressions.GotoExpression", "System.Linq.Expressions.Expression!", "Method[MakeGoto].ReturnValue"]
    - ["System.Linq.Expressions.ConditionalExpression", "System.Linq.Expressions.ConditionalExpression", "Method[Update].ReturnValue"]
    - ["System.Linq.Expressions.RuntimeVariablesExpression", "System.Linq.Expressions.RuntimeVariablesExpression", "Method[Update].ReturnValue"]
    - ["System.Collections.ObjectModel.ReadOnlyCollection<System.Linq.Expressions.SwitchCase>", "System.Linq.Expressions.SwitchExpression", "Property[Cases]"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.ElementInit", "Method[System.Linq.Expressions.IArgumentProvider.GetArgument].ReturnValue"]
    - ["System.Type", "System.Linq.Expressions.DynamicExpression", "Property[Type]"]
    - ["System.Linq.Expressions.UnaryExpression", "System.Linq.Expressions.Expression!", "Method[Throw].ReturnValue"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.ConditionalExpression", "Property[IfTrue]"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ConstantExpression", "Property[NodeType]"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.ExpressionVisitor", "Method[VisitNew].ReturnValue"]
    - ["System.Collections.ObjectModel.ReadOnlyCollection<System.Reflection.MemberInfo>", "System.Linq.Expressions.NewExpression", "Property[Members]"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.MemberAssignment", "Property[Expression]"]
    - ["System.Int32", "System.Linq.Expressions.DynamicExpression", "Property[System.Linq.Expressions.IArgumentProvider.ArgumentCount]"]
    - ["System.Linq.Expressions.GotoExpression", "System.Linq.Expressions.Expression!", "Method[Break].ReturnValue"]
    - ["System.Int32", "System.Linq.Expressions.InvocationExpression", "Property[System.Linq.Expressions.IArgumentProvider.ArgumentCount]"]
    - ["System.Reflection.PropertyInfo", "System.Linq.Expressions.IndexExpression", "Property[Indexer]"]
    - ["System.Linq.Expressions.BinaryExpression", "System.Linq.Expressions.Expression!", "Method[AddAssignChecked].ReturnValue"]
    - ["System.Linq.Expressions.NewArrayExpression", "System.Linq.Expressions.NewArrayExpression", "Method[Update].ReturnValue"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.DefaultExpression", "Method[Accept].ReturnValue"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.ExpressionVisitor", "Method[VisitBinary].ReturnValue"]
    - ["System.Collections.ObjectModel.ReadOnlyCollection<System.Linq.Expressions.Expression>", "System.Linq.Expressions.NewExpression", "Property[Arguments]"]
    - ["System.Linq.Expressions.BinaryExpression", "System.Linq.Expressions.Expression!", "Method[NotEqual].ReturnValue"]
    - ["System.Collections.ObjectModel.ReadOnlyCollection<System.Linq.Expressions.MemberBinding>", "System.Linq.Expressions.MemberInitExpression", "Property[Bindings]"]
    - ["System.Linq.Expressions.UnaryExpression", "System.Linq.Expressions.Expression!", "Method[Unbox].ReturnValue"]
    - ["System.Guid", "System.Linq.Expressions.SymbolDocumentInfo", "Property[Language]"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ExpressionType!", "Field[OnesComplement]"]
    - ["System.String", "System.Linq.Expressions.SwitchCase", "Method[ToString].ReturnValue"]
    - ["System.Linq.Expressions.DefaultExpression", "System.Linq.Expressions.Expression!", "Method[Default].ReturnValue"]
    - ["System.Linq.Expressions.BinaryExpression", "System.Linq.Expressions.Expression!", "Method[Assign].ReturnValue"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.BinaryExpression", "Method[Reduce].ReturnValue"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ExpressionType!", "Field[Unbox]"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.ParameterExpression", "Method[Accept].ReturnValue"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ExpressionType!", "Field[Loop]"]
    - ["System.Type", "System.Linq.Expressions.Expression!", "Method[GetActionType].ReturnValue"]
    - ["System.Type", "System.Linq.Expressions.ConditionalExpression", "Property[Type]"]
    - ["System.String", "System.Linq.Expressions.MemberBinding", "Method[ToString].ReturnValue"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.LabelExpression", "Property[NodeType]"]
    - ["System.Linq.Expressions.DebugInfoExpression", "System.Linq.Expressions.Expression!", "Method[ClearDebugInfo].ReturnValue"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ExpressionType!", "Field[Multiply]"]
    - ["System.Type", "System.Linq.Expressions.ParameterExpression", "Property[Type]"]
    - ["System.Linq.Expressions.UnaryExpression", "System.Linq.Expressions.Expression!", "Method[Rethrow].ReturnValue"]
    - ["System.Linq.Expressions.Expression<TDelegate>", "System.Linq.Expressions.Expression!", "Method[Lambda<TDelegate>].ReturnValue"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.LambdaExpression", "Property[NodeType]"]
    - ["System.Int32", "System.Linq.Expressions.DebugInfoExpression", "Property[StartLine]"]
    - ["System.Linq.Expressions.UnaryExpression", "System.Linq.Expressions.Expression!", "Method[NegateChecked].ReturnValue"]
    - ["System.Type", "System.Linq.Expressions.DynamicExpression", "Property[DelegateType]"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.ExpressionVisitor", "Method[VisitDefault].ReturnValue"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.ExpressionVisitor", "Method[VisitBlock].ReturnValue"]
    - ["System.Linq.Expressions.UnaryExpression", "System.Linq.Expressions.Expression!", "Method[TypeAs].ReturnValue"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.BinaryExpression", "Method[Accept].ReturnValue"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ExpressionType!", "Field[AddAssign]"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.LabelExpression", "Method[Accept].ReturnValue"]
    - ["System.Boolean", "System.Linq.Expressions.ListInitExpression", "Property[CanReduce]"]
    - ["System.Type", "System.Linq.Expressions.TryExpression", "Property[Type]"]
    - ["System.Collections.ObjectModel.ReadOnlyCollection<System.Linq.Expressions.Expression>", "System.Linq.Expressions.NewArrayExpression", "Property[Expressions]"]
    - ["System.String", "System.Linq.Expressions.ParameterExpression", "Property[Name]"]
    - ["System.Linq.Expressions.BinaryExpression", "System.Linq.Expressions.Expression!", "Method[ArrayIndex].ReturnValue"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.ExpressionVisitor", "Method[VisitMethodCall].ReturnValue"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.DebugInfoExpression", "Property[NodeType]"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ExpressionType!", "Field[Index]"]
    - ["System.Type", "System.Linq.Expressions.LabelTarget", "Property[Type]"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.BlockExpression", "Method[Accept].ReturnValue"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.Expression", "Method[ReduceExtensions].ReturnValue"]
    - ["System.Reflection.MethodInfo", "System.Linq.Expressions.MethodCallExpression", "Property[Method]"]
    - ["System.Linq.Expressions.LambdaExpression", "System.Linq.Expressions.Expression!", "Method[Lambda].ReturnValue"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ExpressionType!", "Field[DivideAssign]"]
    - ["System.Linq.Expressions.CatchBlock", "System.Linq.Expressions.ExpressionVisitor", "Method[VisitCatchBlock].ReturnValue"]
    - ["System.Linq.Expressions.BinaryExpression", "System.Linq.Expressions.Expression!", "Method[GreaterThan].ReturnValue"]
    - ["System.Type", "System.Linq.Expressions.DefaultExpression", "Property[Type]"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ExpressionType!", "Field[Add]"]
    - ["System.Guid", "System.Linq.Expressions.SymbolDocumentInfo", "Property[LanguageVendor]"]
    - ["System.Linq.Expressions.UnaryExpression", "System.Linq.Expressions.Expression!", "Method[PostIncrementAssign].ReturnValue"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ExpressionType!", "Field[Parameter]"]
    - ["System.Type", "System.Linq.Expressions.DebugInfoExpression", "Property[Type]"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.RuntimeVariablesExpression", "Method[Accept].ReturnValue"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.ExpressionVisitor", "Method[VisitLambda<T>].ReturnValue"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.ExpressionVisitor", "Method[VisitRuntimeVariables].ReturnValue"]
    - ["System.Reflection.ConstructorInfo", "System.Linq.Expressions.NewExpression", "Property[Constructor]"]
    - ["System.Linq.Expressions.UnaryExpression", "System.Linq.Expressions.Expression!", "Method[Increment].ReturnValue"]
    - ["System.Linq.Expressions.BinaryExpression", "System.Linq.Expressions.Expression!", "Method[AndAlso].ReturnValue"]
    - ["System.Linq.Expressions.MemberInitExpression", "System.Linq.Expressions.MemberInitExpression", "Method[Update].ReturnValue"]
    - ["System.Linq.Expressions.BinaryExpression", "System.Linq.Expressions.Expression!", "Method[Subtract].ReturnValue"]
    - ["System.Type", "System.Linq.Expressions.IDynamicExpression", "Property[DelegateType]"]
    - ["System.Linq.Expressions.DynamicExpression", "System.Linq.Expressions.Expression!", "Method[Dynamic].ReturnValue"]
    - ["System.Linq.Expressions.ExpressionType", "System.Linq.Expressions.ExpressionType!", "Field[New]"]
    - ["System.Linq.Expressions.BinaryExpression", "System.Linq.Expressions.Expression!", "Method[MakeBinary].ReturnValue"]
    - ["System.Linq.Expressions.IndexExpression", "System.Linq.Expressions.Expression!", "Method[ArrayAccess].ReturnValue"]
    - ["System.Linq.Expressions.LabelTarget", "System.Linq.Expressions.Expression!", "Method[Label].ReturnValue"]
    - ["System.Linq.Expressions.LabelTarget", "System.Linq.Expressions.LabelExpression", "Property[Target]"]
    - ["System.Linq.Expressions.BinaryExpression", "System.Linq.Expressions.Expression!", "Method[Divide].ReturnValue"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.SwitchExpression", "Property[DefaultBody]"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.ExpressionVisitor", "Method[VisitExtension].ReturnValue"]
    - ["System.Collections.ObjectModel.ReadOnlyCollection<System.Linq.Expressions.ElementInit>", "System.Linq.Expressions.MemberListBinding", "Property[Initializers]"]
    - ["System.Linq.Expressions.BlockExpression", "System.Linq.Expressions.Expression!", "Method[Block].ReturnValue"]
    - ["System.Linq.Expressions.Expression", "System.Linq.Expressions.IDynamicExpression", "Method[Rewrite].ReturnValue"]
