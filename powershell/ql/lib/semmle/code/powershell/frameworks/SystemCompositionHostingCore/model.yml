extensions:
  - addsTo:
      pack: microsoft-sdl/powershell-all
      extensible: typeModel
    data:
    - ["system.string", "system.composition.hosting.core.exportdescriptorpromise", "Method[tostring].ReturnValue"]
    - ["system.boolean", "system.composition.hosting.core.dependencyaccessor", "Method[tryresolveoptionaldependency].ReturnValue"]
    - ["system.composition.hosting.core.exportdescriptor", "system.composition.hosting.core.exportdescriptorPromise", "Method[getdescriptor].ReturnValue"]
    - ["system.string", "system.composition.hosting.core.compositioncontract", "Member[contractname]"]
    - ["system.collections.objectmodel.readonlycollection<system.composition.hosting.core.compositiondependency>", "system.composition.hosting.core.exportdescriptorpromise", "Member[dependencies]"]
    - ["system.composition.hosting.core.lifetimecontext", "system.composition.hosting.core.lifetimecontext", "Method[findcontextwithin].ReturnValue"]
    - ["system.composition.hosting.core.compositeactivator", "system.composition.hosting.core.exportdescriptor", "Member[activator]"]
    - ["system.type", "system.composition.hosting.core.compositioncontract", "Member[contracttype]"]
    - ["system.int32", "system.composition.hosting.core.compositioncontract", "Method[gethashcode].ReturnValue"]
    - ["system.boolean", "system.composition.hosting.core.lifetimecontext", "Method[trygetexport].ReturnValue"]
    - ["system.boolean", "system.composition.hosting.core.exportdescriptorpromise", "Member[isshared]"]
    - ["system.collections.generic.ienumerable<system.composition.hosting.core.exportdescriptorpromise>", "system.composition.hosting.core.exportdescriptorprovider!", "Member[noexportdescriptors]"]
    - ["system.composition.hosting.core.compositioncontract", "system.composition.hosting.core.compositioncontract", "Method[changetype].ReturnValue"]
    - ["system.composition.hosting.core.compositiondependency", "system.composition.hosting.core.dependencyaccessor", "Method[resolverequireddependency].ReturnValue"]
    - ["system.composition.hosting.core.compositiondependency", "system.composition.hosting.core.compositiondependency!", "Method[satisfied].ReturnValue"]
    - ["system.collections.generic.ienumerable<system.collections.generic.keyvaluepair<system.string,system.object>>", "system.composition.hosting.core.compositioncontract", "Member[metadataconstraints]"]
    - ["system.string", "system.composition.hosting.core.compositioncontract", "Method[tostring].ReturnValue"]
    - ["system.collections.generic.ienumerable<system.composition.hosting.core.exportdescriptorpromise>", "system.composition.hosting.core.dependencyaccessor", "Method[getpromises].ReturnValue"]
    - ["system.composition.hosting.core.compositiondependency", "system.composition.hosting.core.compositiondependency!", "Method[oversupplied].ReturnValue"]
    - ["system.composition.hosting.core.compositioncontract", "system.composition.hosting.core.compositiondependency", "Member[contract]"]
    - ["system.string", "system.composition.hosting.core.compositiondependency", "Method[tostring].ReturnValue"]
    - ["system.object", "system.composition.hosting.core.lifetimecontext", "Method[getorcreate].ReturnValue"]
    - ["system.int32", "system.composition.hosting.core.lifetimecontext!", "Method[allocatesharingid].ReturnValue"]
    - ["system.boolean", "system.composition.hosting.core.compositioncontract", "Method[tryunwrapmetadataconstraint<t>].ReturnValue"]
    - ["system.collections.generic.ienumerable<system.composition.hosting.core.exportdescriptorpromise>", "system.composition.hosting.core.exportdescriptorprovider", "Method[getexportdescriptors].ReturnValue"]
    - ["system.string", "system.composition.hosting.core.exportdescriptorpromise", "Member[origin]"]
    - ["system.object", "system.composition.hosting.core.compositiondependency", "Member[site]"]
    - ["system.composition.hosting.core.compositioncontract", "system.composition.hosting.core.exportdescriptorpromise", "Member[contract]"]
    - ["system.boolean", "system.composition.hosting.core.compositiondependency", "Member[isprerequisite]"]
    - ["system.composition.hosting.core.compositiondependency", "system.composition.hosting.core.compositiondependency!", "Method[missing].ReturnValue"]
    - ["system.composition.hosting.core.exportdescriptorpromise", "system.composition.hosting.core.compositiondependency", "Member[target]"]
    - ["system.collections.generic.idictionary<system.string,system.object>", "system.composition.hosting.core.exportdescriptor", "Member[metadata]"]
    - ["system.collections.generic.ienumerable<system.composition.hosting.core.compositiondependency>", "system.composition.hosting.core.dependencyaccessor", "Method[resolvedependencies].ReturnValue"]
    - ["system.boolean", "system.composition.hosting.core.compositioncontract", "Method[equals].ReturnValue"]
    - ["system.string", "system.composition.hosting.core.lifetimecontext", "Method[tostring].ReturnValue"]
    - ["system.func<system.collections.generic.ienumerable<system.composition.hosting.core.compositiondependency>>", "system.composition.hosting.core.exportdescriptorprovider!", "Member[nodependencies]"]
    - ["system.object", "system.composition.hosting.core.compositionoperation!", "Method[run].ReturnValue"]
    - ["system.collections.generic.idictionary<system.string,system.object>", "system.composition.hosting.core.exportdescriptorprovider!", "Member[nometadata]"]
    - ["system.composition.hosting.core.exportdescriptor", "system.composition.hosting.core.exportdescriptor!", "Method[create].ReturnValue"]
