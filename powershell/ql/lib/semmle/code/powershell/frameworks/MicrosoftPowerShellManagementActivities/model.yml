extensions:
  - addsTo:
      pack: microsoft-sdl/powershell-all
      extensible: typeModel
    data:
    - ["system.string", "microsoft.powershell.management.activities.restartservice", "Property[pscommandname]"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.resolvepath", "Property[credential]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.stopprocess", "Property[name]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.removeitemproperty", "Property[name]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.addcomputer", "Property[unsecure]"]
    - ["system.boolean", "microsoft.powershell.management.activities.getservice", "Property[supportscustomremoting]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.removeitem", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.setwmiinstance", "Property[computername]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.setitemproperty", "Property[literalpath]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.getcontent", "Property[wait]"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.removecomputer", "Property[unjoindomaincredential]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.getcomputerrestorepoint", "Property[laststatus]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.startprocess", "Property[argumentlist]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.splitpath", "Property[noqualifier]"]
    - ["system.string", "microsoft.powershell.management.activities.clearitem", "Property[pscommandname]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.setitemproperty", "Property[passthru]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.cleareventlog", "Property[logname]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.addcontent", "Property[nonewline]"]
    - ["system.string", "microsoft.powershell.management.activities.setservice", "Property[pscommandname]"]
    - ["system.boolean", "microsoft.powershell.management.activities.setservice", "Property[supportscustomremoting]"]
    - ["system.activities.inargument<system.management.automation.runspaces.pssession>", "microsoft.powershell.management.activities.copyitem", "Property[fromsession]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.copyitemproperty", "Property[filter]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.getitempropertyvalue", "Property[exclude]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.setservice", "Property[description]"]
    - ["system.activities.inargument<system.int32>", "microsoft.powershell.management.activities.testconnection", "Property[count]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.newitem", "Property[name]"]
    - ["system.string", "microsoft.powershell.management.activities.copyitem", "Property[pscommandname]"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.testcomputersecurechannel", "Property[credential]"]
    - ["system.activities.inargument<system.serviceprocess.servicestartmode>", "microsoft.powershell.management.activities.setservice", "Property[startuptype]"]
    - ["system.boolean", "microsoft.powershell.management.activities.geteventlog", "Property[supportscustomremoting]"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.setcontent", "Property[credential]"]
    - ["system.string", "microsoft.powershell.management.activities.neweventlog", "Property[pscommandname]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.suspendservice", "Property[passthru]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.addcomputer", "Property[force]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.setcontent", "Property[nonewline]"]
    - ["system.activities.inargument<system.int32[]>", "microsoft.powershell.management.activities.geteventlog", "Property[index]"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.moveitemproperty", "Property[credential]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.stopcomputer", "Property[force]"]
    - ["system.string", "microsoft.powershell.management.activities.removewmiobject", "Property[pscommandname]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.clearrecyclebin", "Property[driveletter]"]
    - ["system.activities.inargument<system.int32>", "microsoft.powershell.management.activities.registerwmievent", "Property[maxtriggercount]"]
    - ["system.activities.inargument<system.int32[]>", "microsoft.powershell.management.activities.stopprocess", "Property[processid]"]
    - ["system.boolean", "microsoft.powershell.management.activities.gethotfix", "Property[supportscustomremoting]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.setservice", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.getchilditem", "Property[name]"]
    - ["system.activities.inargument<system.serviceprocess.servicecontroller[]>", "microsoft.powershell.management.activities.suspendservice", "Property[inputobject]"]
    - ["system.string", "microsoft.powershell.management.activities.removecomputer", "Property[pscommandname]"]
    - ["system.activities.inargument<system.int32[]>", "microsoft.powershell.management.activities.getprocess", "Property[processid]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.getitemproperty", "Property[name]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.moveitem", "Property[passthru]"]
    - ["system.activities.inargument<system.management.impersonationlevel>", "microsoft.powershell.management.activities.restartcomputer", "Property[impersonation]"]
    - ["system.activities.inargument<system.management.automation.psobject>", "microsoft.powershell.management.activities.registerwmievent", "Property[messagedata]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.getpsdrive", "Property[scope]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.writeeventlog", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.removewmiobject", "Property[locale]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.getservice", "Property[include]"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.removeitem", "Property[credential]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.copyitem", "Property[filter]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.clearrecyclebin", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.registerwmievent", "Property[namespace]"]
    - ["system.string", "microsoft.powershell.management.activities.registerwmievent", "Property[pscommandname]"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.stopcomputer", "Property[credential]"]
    - ["system.string", "microsoft.powershell.management.activities.disablecomputerrestore", "Property[pscommandname]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.disablecomputerrestore", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.suspendservice", "Property[name]"]
    - ["system.string", "microsoft.powershell.management.activities.stopprocess", "Property[pscommandname]"]
    - ["system.activities.inargument<system.int32>", "microsoft.powershell.management.activities.writeeventlog", "Property[eventid]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.clearcontent", "Property[filter]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.getitem", "Property[exclude]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.clearitem", "Property[force]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.restartcomputer", "Property[force]"]
    - ["system.activities.inargument<system.object>", "microsoft.powershell.management.activities.newitem", "Property[value]"]
    - ["system.activities.inargument<system.diagnostics.process[]>", "microsoft.powershell.management.activities.stopprocess", "Property[inputobject]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.resumeservice", "Property[servicedisplayname]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.moveitem", "Property[include]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.invokeitem", "Property[path]"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.testconnection", "Property[credential]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.getprocess", "Property[module]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.resolvepath", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.int32[]>", "microsoft.powershell.management.activities.getcomputerrestorepoint", "Property[restorepoint]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.setitem", "Property[exclude]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.moveitem", "Property[filter]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.removecomputer", "Property[workgroupname]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.startservice", "Property[servicedisplayname]"]
    - ["system.string", "microsoft.powershell.management.activities.convertpath", "Property[pscommandname]"]
    - ["system.string", "microsoft.powershell.management.activities.renameitemproperty", "Property[pscommandname]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.addcontent", "Property[force]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.registerwmievent", "Property[sourceidentifier]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.setservice", "Property[passthru]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.removeitemproperty", "Property[force]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.neweventlog", "Property[source]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.addcontent", "Property[exclude]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.setitemproperty", "Property[include]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.writeeventlog", "Property[logname]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.startprocess", "Property[redirectstandarderror]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.invokeitem", "Property[literalpath]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.setwmiinstance", "Property[authority]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.joinpath", "Property[path]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.getservice", "Property[requiredservices]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.newwebserviceproxy", "Property[class]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.startprocess", "Property[loaduserprofile]"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.addcomputer", "Property[localcredential]"]
    - ["system.boolean", "microsoft.powershell.management.activities.getprocess", "Property[supportscustomremoting]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.splitpath", "Property[literalpath]"]
    - ["system.string", "microsoft.powershell.management.activities.enablecomputerrestore", "Property[pscommandname]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.restartservice", "Property[passthru]"]
    - ["system.boolean", "microsoft.powershell.management.activities.renamecomputer", "Property[supportscustomremoting]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.registerwmievent", "Property[supportevent]"]
    - ["system.string", "microsoft.powershell.management.activities.clearrecyclebin", "Property[pscommandname]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.clearitemproperty", "Property[name]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.removewmiobject", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.geteventlog", "Property[message]"]
    - ["system.activities.inargument<system.int32>", "microsoft.powershell.management.activities.geteventlog", "Property[newest]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.suspendservice", "Property[include]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.resumeservice", "Property[exclude]"]
    - ["system.activities.inargument<system.management.authenticationlevel>", "microsoft.powershell.management.activities.testconnection", "Property[dcomauthentication]"]
    - ["system.activities.inargument<system.serviceprocess.servicestartmode>", "microsoft.powershell.management.activities.newservice", "Property[startuptype]"]
    - ["system.activities.inargument<system.int32>", "microsoft.powershell.management.activities.restartcomputer", "Property[throttlelimit]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.getitempropertyvalue", "Property[include]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.getchilditem", "Property[literalpath]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.resetcomputermachinepassword", "Property[server]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.setwmiinstance", "Property[namespace]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.setitemproperty", "Property[force]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.moveitemproperty", "Property[exclude]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.convertpath", "Property[path]"]
    - ["system.activities.inargument<system.int16>", "microsoft.powershell.management.activities.restartcomputer", "Property[delay]"]
    - ["system.string", "microsoft.powershell.management.activities.newwebserviceproxy", "Property[pscommandname]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.newitemproperty", "Property[exclude]"]
    - ["system.string", "microsoft.powershell.management.activities.setcontent", "Property[pscommandname]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.newitemproperty", "Property[filter]"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.newitem", "Property[credential]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.removewmiobject", "Property[authority]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.getcontent", "Property[force]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.renameitem", "Property[force]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.checkpointcomputer", "Property[restorepointtype]"]
    - ["system.activities.inargument<system.int32[]>", "microsoft.powershell.management.activities.waitprocess", "Property[processid]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.setcontent", "Property[filter]"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.getitemproperty", "Property[credential]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.getchilditem", "Property[file]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.startprocess", "Property[redirectstandardoutput]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.neweventlog", "Method[getpowershell].ReturnValue"]
    - ["system.string", "microsoft.powershell.management.activities.clearcontent", "Property[pscommandname]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.setservice", "Property[name]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.startservice", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.addcontent", "Property[path]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.getitempropertyvalue", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.setitem", "Property[literalpath]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.removecomputer", "Property[restart]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.testconnection", "Property[source]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.clearitem", "Property[path]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.copyitem", "Property[destination]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.gethotfix", "Property[hotfixid]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.getservice", "Property[name]"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.getitempropertyvalue", "Property[credential]"]
    - ["system.activities.inargument<system.int32>", "microsoft.powershell.management.activities.waitprocess", "Property[timeout]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.geteventlog", "Property[asstring]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.suspendservice", "Property[exclude]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.getitempropertyvalue", "Property[path]"]
    - ["system.activities.inargument<system.management.managementobject>", "microsoft.powershell.management.activities.removewmiobject", "Property[inputobject]"]
    - ["system.activities.inargument<system.object[]>", "microsoft.powershell.management.activities.setcontent", "Property[value]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.getchilditem", "Property[path]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.restartservice", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.startprocess", "Property[filepath]"]
    - ["system.activities.inargument<system.management.impersonationlevel>", "microsoft.powershell.management.activities.removewmiobject", "Property[impersonation]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.geteventlog", "Property[entrytype]"]
    - ["system.activities.inargument<system.serviceprocess.servicecontroller[]>", "microsoft.powershell.management.activities.getservice", "Property[inputobject]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.renamecomputer", "Method[getpowershell].ReturnValue"]
    - ["system.string", "microsoft.powershell.management.activities.getpsprovider", "Property[pscommandname]"]
    - ["system.activities.inargument<system.diagnostics.process[]>", "microsoft.powershell.management.activities.getprocess", "Property[inputobject]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.restartcomputer", "Property[protocol]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.stopservice", "Property[servicedisplayname]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.setwmiinstance", "Property[path]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.removeitem", "Property[exclude]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.removewmiobject", "Property[asjob]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.removeeventlog", "Property[logname]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.newservice", "Property[description]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.renameitem", "Property[passthru]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.testconnection", "Property[asjob]"]
    - ["system.string", "microsoft.powershell.management.activities.splitpath", "Property[pscommandname]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.newservice", "Property[binarypathname]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.registerwmievent", "Property[class]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.startservice", "Property[name]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.getchilditem", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.newservice", "Property[credential]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.clearitem", "Property[literalpath]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.stopcomputer", "Property[asjob]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.disablecomputerrestore", "Property[drive]"]
    - ["system.string", "microsoft.powershell.management.activities.checkpointcomputer", "Property[pscommandname]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.moveitemproperty", "Method[getpowershell].ReturnValue"]
    - ["system.string", "microsoft.powershell.management.activities.limiteventlog", "Property[pscommandname]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.moveitem", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.clearitemproperty", "Property[literalpath]"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.renamecomputer", "Property[localcredential]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.neweventlog", "Property[logname]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.gethotfix", "Property[description]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.addcomputer", "Property[domainname]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.copyitemproperty", "Property[passthru]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.getcontent", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.collections.hashtable>", "microsoft.powershell.management.activities.setwmiinstance", "Property[arguments]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.addcontent", "Property[passthru]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.geteventlog", "Property[username]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.renameitem", "Property[newname]"]
    - ["system.string", "microsoft.powershell.management.activities.resetcomputermachinepassword", "Property[pscommandname]"]
    - ["system.activities.inargument<system.object>", "microsoft.powershell.management.activities.setitem", "Property[value]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.addcontent", "Property[include]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.writeeventlog", "Property[message]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.newservice", "Property[name]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.restartcomputer", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.stopcomputer", "Property[protocol]"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.splitpath", "Property[credential]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.setitemproperty", "Property[name]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.stopprocess", "Property[force]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.stopcomputer", "Property[wsmanauthentication]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.copyitemproperty", "Property[literalpath]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.getlocation", "Property[psdrive]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.getitem", "Property[force]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.newitemproperty", "Property[path]"]
    - ["system.activities.inargument<microsoft.powershell.commands.filesystemcmdletproviderencoding>", "microsoft.powershell.management.activities.getcontent", "Property[encoding]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.getservice", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.getitempropertyvalue", "Property[name]"]
    - ["system.string", "microsoft.powershell.management.activities.getpsdrive", "Property[pscommandname]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.joinpath", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.removeitem", "Property[stream]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.startprocess", "Property[wait]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.startprocess", "Property[redirectstandardinput]"]
    - ["system.activities.inargument<system.int32>", "microsoft.powershell.management.activities.restartcomputer", "Property[timeout]"]
    - ["system.activities.inargument<system.int64>", "microsoft.powershell.management.activities.limiteventlog", "Property[maximumsize]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.newitem", "Property[itemtype]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.newitemproperty", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.setcontent", "Property[include]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.setcontent", "Property[force]"]
    - ["system.string", "microsoft.powershell.management.activities.getitem", "Property[pscommandname]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.getitem", "Property[path]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.addcomputer", "Property[restart]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.splitpath", "Property[resolve]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.getcontent", "Property[raw]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.getprocess", "Property[fileversioninfo]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.restartservice", "Property[exclude]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.renameitemproperty", "Property[force]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.addcomputer", "Method[getpowershell].ReturnValue"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.copyitem", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.splitpath", "Property[isabsolute]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.renamecomputer", "Property[wsmanauthentication]"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.gethotfix", "Property[credential]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.startprocess", "Property[passthru]"]
    - ["system.string", "microsoft.powershell.management.activities.testcomputersecurechannel", "Property[pscommandname]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.getpsprovider", "Property[psprovider]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.setitemproperty", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.removeitemproperty", "Property[credential]"]
    - ["system.string", "microsoft.powershell.management.activities.newitemproperty", "Property[pscommandname]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.setcontent", "Property[path]"]
    - ["system.string", "microsoft.powershell.management.activities.newitem", "Property[pscommandname]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.testcomputersecurechannel", "Property[repair]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.renamecomputer", "Property[force]"]
    - ["system.activities.inargument<system.management.automation.flagsexpression<system.io.fileattributes>>", "microsoft.powershell.management.activities.getchilditem", "Property[attributes]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.invokeitem", "Property[exclude]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.getlocation", "Property[stackname]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.copyitem", "Property[passthru]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.restartcomputer", "Property[wait]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.moveitemproperty", "Property[name]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.renameitemproperty", "Property[path]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.renamecomputer", "Property[passthru]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.removeitemproperty", "Property[include]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.newservice", "Property[dependson]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.stopservice", "Property[exclude]"]
    - ["system.string", "microsoft.powershell.management.activities.setitemproperty", "Property[pscommandname]"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.removecomputer", "Property[localcredential]"]
    - ["system.activities.inargument<system.int16>", "microsoft.powershell.management.activities.writeeventlog", "Property[category]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.removeitemproperty", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.getpsdrive", "Property[literalname]"]
    - ["system.string", "microsoft.powershell.management.activities.copyitemproperty", "Property[pscommandname]"]
    - ["system.string", "microsoft.powershell.management.activities.restorecomputer", "Property[pscommandname]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.renameitemproperty", "Method[getpowershell].ReturnValue"]
    - ["system.string", "microsoft.powershell.management.activities.waitprocess", "Property[pscommandname]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.startservice", "Property[include]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.copyitemproperty", "Property[exclude]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.getcontent", "Property[filter]"]
    - ["system.activities.inargument<system.diagnostics.eventlogentrytype>", "microsoft.powershell.management.activities.writeeventlog", "Property[entrytype]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.checkpointcomputer", "Method[getpowershell].ReturnValue"]
    - ["system.string", "microsoft.powershell.management.activities.getcontent", "Property[pscommandname]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.removeitem", "Property[path]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.getchilditem", "Property[readonly]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.removecomputer", "Property[passthru]"]
    - ["system.string", "microsoft.powershell.management.activities.clearitemproperty", "Property[pscommandname]"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.clearcontent", "Property[credential]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.testpath", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.getitemproperty", "Property[literalpath]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.cleareventlog", "Method[getpowershell].ReturnValue"]
    - ["system.string", "microsoft.powershell.management.activities.getprocess", "Property[pscommandname]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.writeeventlog", "Property[source]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.stopservice", "Property[passthru]"]
    - ["system.string", "microsoft.powershell.management.activities.getitemproperty", "Property[pscommandname]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.getprocess", "Method[getpowershell].ReturnValue"]
    - ["system.string", "microsoft.powershell.management.activities.moveitem", "Property[pscommandname]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.clearitemproperty", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.removecomputer", "Property[force]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.getprocess", "Property[includeusername]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.getcontent", "Property[literalpath]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.renameitemproperty", "Property[exclude]"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.restartcomputer", "Property[pscredential]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.newitemproperty", "Property[name]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.registerwmievent", "Property[computername]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.getcontent", "Property[stream]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.copyitemproperty", "Property[path]"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.renamecomputer", "Property[domaincredential]"]
    - ["system.string", "microsoft.powershell.management.activities.suspendservice", "Property[pscommandname]"]
    - ["system.activities.inargument<microsoft.powershell.commands.testpathtype>", "microsoft.powershell.management.activities.testpath", "Property[pathtype]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.moveitem", "Property[literalpath]"]
    - ["system.string", "microsoft.powershell.management.activities.restartcomputer", "Property[pscommandname]"]
    - ["system.activities.inargument<system.int32>", "microsoft.powershell.management.activities.restorecomputer", "Property[restorepoint]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.restartservice", "Property[name]"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.startprocess", "Property[credential]"]
    - ["system.activities.inargument<system.diagnostics.processwindowstyle>", "microsoft.powershell.management.activities.startprocess", "Property[windowstyle]"]
    - ["system.activities.inargument<system.management.managementobject>", "microsoft.powershell.management.activities.setwmiinstance", "Property[inputobject]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.invokeitem", "Property[include]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.stopprocess", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.getitem", "Property[credential]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.resetcomputermachinepassword", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.testpath", "Property[exclude]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.clearitem", "Method[getpowershell].ReturnValue"]
    - ["system.string", "microsoft.powershell.management.activities.renameitem", "Property[pscommandname]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.renameitemproperty", "Property[literalpath]"]
    - ["system.activities.inargument<system.management.automation.psobject>", "microsoft.powershell.management.activities.setitemproperty", "Property[inputobject]"]
    - ["system.activities.inargument<system.management.automation.scriptblock>", "microsoft.powershell.management.activities.registerwmievent", "Property[action]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.removeitemproperty", "Property[literalpath]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.startprocess", "Property[verb]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.moveitem", "Property[path]"]
    - ["system.activities.inargument<system.int32>", "microsoft.powershell.management.activities.testconnection", "Property[throttlelimit]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.gethotfix", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.setservice", "Property[servicedisplayname]"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.testpath", "Property[credential]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.stopcomputer", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.clearrecyclebin", "Property[force]"]
    - ["system.string", "microsoft.powershell.management.activities.cleareventlog", "Property[pscommandname]"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.setwmiinstance", "Property[credential]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.getitem", "Property[literalpath]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.stopservice", "Property[force]"]
    - ["system.string", "microsoft.powershell.management.activities.resolvepath", "Property[pscommandname]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.getservice", "Property[exclude]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.resumeservice", "Property[name]"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.copyitem", "Property[credential]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.startservice", "Property[exclude]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.geteventlog", "Property[asbaseobject]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.resolvepath", "Property[relative]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.startprocess", "Property[workingdirectory]"]
    - ["system.boolean", "microsoft.powershell.management.activities.writeeventlog", "Property[supportscustomremoting]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.clearcontent", "Property[exclude]"]
    - ["system.activities.inargument<system.object>", "microsoft.powershell.management.activities.newitemproperty", "Property[value]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.getitemproperty", "Property[exclude]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.moveitem", "Property[exclude]"]
    - ["system.activities.inargument<system.int64[]>", "microsoft.powershell.management.activities.geteventlog", "Property[instanceid]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.copyitemproperty", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.int64>", "microsoft.powershell.management.activities.registerwmievent", "Property[timeout]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.copyitem", "Property[include]"]
    - ["system.string", "microsoft.powershell.management.activities.removeitem", "Property[pscommandname]"]
    - ["system.string", "microsoft.powershell.management.activities.addcontent", "Property[pscommandname]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.removewmiobject", "Property[computername]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.getcomputerrestorepoint", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.moveitem", "Property[force]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.setwmiinstance", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.int32>", "microsoft.powershell.management.activities.stopcomputer", "Property[throttlelimit]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.removewmiobject", "Property[enableallprivileges]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.getlocation", "Property[stack]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.removewmiobject", "Property[path]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.newwebserviceproxy", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.startservice", "Property[passthru]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.addcontent", "Property[stream]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.newservice", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.getchilditem", "Property[hidden]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.registerwmievent", "Property[forward]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.newwebserviceproxy", "Property[namespace]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.convertpath", "Method[getpowershell].ReturnValue"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.suspendservice", "Method[getpowershell].ReturnValue"]
    - ["system.boolean", "microsoft.powershell.management.activities.removecomputer", "Property[supportscustomremoting]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.stopservice", "Property[name]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.getitem", "Property[filter]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.removeitem", "Property[recurse]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.getlocation", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.copyitem", "Property[literalpath]"]
    - ["system.activities.inargument<system.serviceprocess.servicecontroller[]>", "microsoft.powershell.management.activities.restartservice", "Property[inputobject]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.setcontent", "Property[stream]"]
    - ["system.activities.inargument<system.datetime>", "microsoft.powershell.management.activities.geteventlog", "Property[after]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.restartservice", "Property[include]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.setitem", "Property[include]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.getitemproperty", "Property[path]"]
    - ["system.activities.inargument<system.management.authenticationlevel>", "microsoft.powershell.management.activities.removewmiobject", "Property[authentication]"]
    - ["system.activities.inargument<system.int32>", "microsoft.powershell.management.activities.testconnection", "Property[buffersize]"]
    - ["system.activities.inargument<system.uint32>", "microsoft.powershell.management.activities.getchilditem", "Property[depth]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.copyitemproperty", "Property[include]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.newitem", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.datetime>", "microsoft.powershell.management.activities.geteventlog", "Property[before]"]
    - ["system.string", "microsoft.powershell.management.activities.setitem", "Property[pscommandname]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.getitem", "Property[include]"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.renameitem", "Property[credential]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.splitpath", "Property[qualifier]"]
    - ["system.string", "microsoft.powershell.management.activities.resumeservice", "Property[pscommandname]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.copyitem", "Property[force]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.resumeservice", "Property[passthru]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.getcontent", "Property[include]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.stopservice", "Property[nowait]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.renamecomputer", "Property[restart]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.getitempropertyvalue", "Property[filter]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.testpath", "Property[filter]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.testconnection", "Property[protocol]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.renameitem", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.testpath", "Property[literalpath]"]
    - ["system.activities.inargument<system.int32>", "microsoft.powershell.management.activities.setwmiinstance", "Property[throttlelimit]"]
    - ["system.activities.inargument<system.serviceprocess.servicecontroller[]>", "microsoft.powershell.management.activities.resumeservice", "Property[inputobject]"]
    - ["system.activities.inargument<system.int32>", "microsoft.powershell.management.activities.removewmiobject", "Property[throttlelimit]"]
    - ["system.activities.inargument<system.management.impersonationlevel>", "microsoft.powershell.management.activities.setwmiinstance", "Property[impersonation]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.moveitem", "Property[destination]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.clearcontent", "Property[stream]"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.moveitem", "Property[credential]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.removeitemproperty", "Property[filter]"]
    - ["system.string", "microsoft.powershell.management.activities.addcomputer", "Property[pscommandname]"]
    - ["system.string", "microsoft.powershell.management.activities.newservice", "Property[pscommandname]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.restartservice", "Property[servicedisplayname]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.getservice", "Property[servicedisplayname]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.stopservice", "Property[include]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.limiteventlog", "Method[getpowershell].ReturnValue"]
    - ["system.string", "microsoft.powershell.management.activities.removeitemproperty", "Property[pscommandname]"]
    - ["system.string", "microsoft.powershell.management.activities.geteventlog", "Property[pscommandname]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.removeitem", "Property[filter]"]
    - ["system.boolean", "microsoft.powershell.management.activities.limiteventlog", "Property[supportscustomremoting]"]
    - ["system.string", "microsoft.powershell.management.activities.moveitemproperty", "Property[pscommandname]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.newitemproperty", "Property[include]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.renameitemproperty", "Property[passthru]"]
    - ["system.activities.inargument<system.uri>", "microsoft.powershell.management.activities.newwebserviceproxy", "Property[uri]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.neweventlog", "Property[parameterresourcefile]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.removeitem", "Property[force]"]
    - ["system.activities.inargument<system.object>", "microsoft.powershell.management.activities.setitemproperty", "Property[value]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.clearcontent", "Property[include]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.removeeventlog", "Property[source]"]
    - ["system.activities.inargument<system.management.authenticationlevel>", "microsoft.powershell.management.activities.stopcomputer", "Property[dcomauthentication]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.moveitemproperty", "Property[path]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.clearitemproperty", "Property[exclude]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.copyitem", "Property[path]"]
    - ["system.string", "microsoft.powershell.management.activities.stopcomputer", "Property[pscommandname]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.removewmiobject", "Property[namespace]"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.addcomputer", "Property[unjoindomaincredential]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.getitemproperty", "Property[filter]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.clearcontent", "Property[force]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.setcontent", "Property[literalpath]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.setitem", "Property[passthru]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.getcontent", "Property[path]"]
    - ["system.activities.inargument<system.int64>", "microsoft.powershell.management.activities.getcontent", "Property[totalcount]"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.copyitemproperty", "Property[credential]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.restartcomputer", "Property[pscomputername]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.copyitem", "Property[exclude]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.neweventlog", "Property[categoryresourcefile]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.convertpath", "Property[literalpath]"]
    - ["system.activities.inargument<system.diagnostics.overflowaction>", "microsoft.powershell.management.activities.limiteventlog", "Property[overflowaction]"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.newitemproperty", "Property[credential]"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.setitemproperty", "Property[credential]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.renamecomputer", "Property[newname]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.splitpath", "Property[path]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.setitemproperty", "Property[path]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.startprocess", "Property[usenewenvironment]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.getlocation", "Property[psprovider]"]
    - ["system.string", "microsoft.powershell.management.activities.writeeventlog", "Property[pscommandname]"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.renameitemproperty", "Property[credential]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.getchilditem", "Property[recurse]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.getservice", "Property[dependentservices]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.testconnection", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.setitemproperty", "Property[exclude]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.stopservice", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.testpath", "Property[include]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.splitpath", "Property[leaf]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.clearitemproperty", "Property[path]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.invokeitem", "Property[filter]"]
    - ["system.activities.inargument<system.int64>", "microsoft.powershell.management.activities.getcontent", "Property[readcount]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.clearcontent", "Property[literalpath]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.limiteventlog", "Property[logname]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.removecomputer", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.geteventlog", "Property[logname]"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.clearitem", "Property[credential]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.renamecomputer", "Property[protocol]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.geteventlog", "Method[getpowershell].ReturnValue"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.enablecomputerrestore", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.addcomputer", "Property[workgroupname]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.removeitem", "Property[literalpath]"]
    - ["system.string", "microsoft.powershell.management.activities.renamecomputer", "Property[pscommandname]"]
    - ["system.activities.inargument<microsoft.powershell.commands.filesystemcmdletproviderencoding>", "microsoft.powershell.management.activities.setcontent", "Property[encoding]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.newitemproperty", "Property[force]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.getchilditem", "Property[directory]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.removewmiobject", "Property[class]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.newitem", "Property[path]"]
    - ["system.activities.inargument<system.nullable<system.datetime>>", "microsoft.powershell.management.activities.testpath", "Property[newerthan]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.copyitemproperty", "Property[destination]"]
    - ["system.activities.inargument<system.management.impersonationlevel>", "microsoft.powershell.management.activities.stopcomputer", "Property[impersonation]"]
    - ["system.activities.inargument<system.int32>", "microsoft.powershell.management.activities.limiteventlog", "Property[retentiondays]"]
    - ["system.activities.inargument<system.byte[]>", "microsoft.powershell.management.activities.writeeventlog", "Property[rawdata]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.newservice", "Property[servicedisplayname]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.clearitemproperty", "Property[include]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.getpsprovider", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.removeitem", "Property[include]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.removeitemproperty", "Property[exclude]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.getpsdrive", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.setwmiinstance", "Property[locale]"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.registerwmievent", "Property[credential]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.getchilditem", "Property[filter]"]
    - ["system.string", "microsoft.powershell.management.activities.getchilditem", "Property[pscommandname]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.testconnection", "Property[computername]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.restartservice", "Property[force]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.removeitemproperty", "Property[path]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.newitem", "Property[force]"]
    - ["system.activities.inargument<system.nullable<system.datetime>>", "microsoft.powershell.management.activities.testpath", "Property[olderthan]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.setcontent", "Property[exclude]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.testpath", "Property[isvalid]"]
    - ["system.boolean", "microsoft.powershell.management.activities.stopcomputer", "Property[supportscustomremoting]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.setitem", "Property[path]"]
    - ["system.activities.inargument<system.object[]>", "microsoft.powershell.management.activities.addcontent", "Property[value]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.newitemproperty", "Property[literalpath]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.checkpointcomputer", "Property[description]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.setcontent", "Method[getpowershell].ReturnValue"]
    - ["system.boolean", "microsoft.powershell.management.activities.cleareventlog", "Property[supportscustomremoting]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.addcontent", "Property[literalpath]"]
    - ["system.string", "microsoft.powershell.management.activities.stopservice", "Property[pscommandname]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.registerwmievent", "Property[query]"]
    - ["system.activities.inargument<system.int32>", "microsoft.powershell.management.activities.testconnection", "Property[timetolive]"]
    - ["system.string", "microsoft.powershell.management.activities.startprocess", "Property[pscommandname]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.getitem", "Method[getpowershell].ReturnValue"]
    - ["system.string", "microsoft.powershell.management.activities.getservice", "Property[pscommandname]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.getitemproperty", "Property[include]"]
    - ["system.string", "microsoft.powershell.management.activities.setwmiinstance", "Property[pscommandname]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.setwmiinstance", "Property[enableallprivileges]"]
    - ["system.string", "microsoft.powershell.management.activities.getcomputerrestorepoint", "Property[pscommandname]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.clearitemproperty", "Property[force]"]
    - ["system.string", "microsoft.powershell.management.activities.getitempropertyvalue", "Property[pscommandname]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.waitprocess", "Property[name]"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.getcontent", "Property[credential]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.setitemproperty", "Property[filter]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.resumeservice", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.management.authenticationlevel>", "microsoft.powershell.management.activities.restartcomputer", "Property[dcomauthentication]"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.removewmiobject", "Property[credential]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.testcomputersecurechannel", "Property[server]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.geteventlog", "Property[list]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.renameitemproperty", "Property[newname]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.renameitem", "Property[literalpath]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.getchilditem", "Property[include]"]
    - ["system.string", "microsoft.powershell.management.activities.invokeitem", "Property[pscommandname]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.resolvepath", "Property[literalpath]"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.addcontent", "Property[credential]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.testconnection", "Property[wsmanauthentication]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.renameitemproperty", "Property[include]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.moveitemproperty", "Property[filter]"]
    - ["system.string", "microsoft.powershell.management.activities.testconnection", "Property[pscommandname]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.clearitemproperty", "Property[passthru]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.enablecomputerrestore", "Property[drive]"]
    - ["system.activities.inargument<system.serviceprocess.servicecontroller>", "microsoft.powershell.management.activities.setservice", "Property[inputobject]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.getchilditem", "Property[force]"]
    - ["system.activities.inargument<microsoft.powershell.commands.filesystemcmdletproviderencoding>", "microsoft.powershell.management.activities.addcontent", "Property[encoding]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.addcomputer", "Property[passthru]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.addcontent", "Property[filter]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.moveitemproperty", "Property[passthru]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.renameitemproperty", "Property[name]"]
    - ["system.activities.inargument<system.diagnostics.process[]>", "microsoft.powershell.management.activities.waitprocess", "Property[inputobject]"]
    - ["system.string", "microsoft.powershell.management.activities.testpath", "Property[pscommandname]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.registerwmievent", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.int32>", "microsoft.powershell.management.activities.getcontent", "Property[tail]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.getitempropertyvalue", "Property[literalpath]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.getitem", "Property[stream]"]
    - ["system.activities.inargument<system.management.authenticationlevel>", "microsoft.powershell.management.activities.setwmiinstance", "Property[authentication]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.geteventlog", "Property[source]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.newwebserviceproxy", "Property[usedefaultcredential]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.setitem", "Property[force]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.getchilditem", "Property[system]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.getcontent", "Property[delimiter]"]
    - ["system.string", "microsoft.powershell.management.activities.removeeventlog", "Property[pscommandname]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.setitem", "Method[getpowershell].ReturnValue"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.invokeitem", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.joinpath", "Property[credential]"]
    - ["system.string", "microsoft.powershell.management.activities.getlocation", "Property[pscommandname]"]
    - ["system.activities.inargument<microsoft.powershell.commands.waitforservicetypes>", "microsoft.powershell.management.activities.restartcomputer", "Property[for]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.addcomputer", "Property[newname]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.copyitemproperty", "Property[name]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.moveitemproperty", "Property[include]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.copyitemproperty", "Property[force]"]
    - ["system.activities.inargument<system.serviceprocess.servicecontroller[]>", "microsoft.powershell.management.activities.stopservice", "Property[inputobject]"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.resetcomputermachinepassword", "Property[credential]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.startprocess", "Method[getpowershell].ReturnValue"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.splitpath", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.joinpath", "Property[childpath]"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.clearitemproperty", "Property[credential]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.restorecomputer", "Method[getpowershell].ReturnValue"]
    - ["system.string", "microsoft.powershell.management.activities.startservice", "Property[pscommandname]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.clearitem", "Property[include]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.copyitem", "Property[container]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.newitemproperty", "Property[propertytype]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.getprocess", "Property[name]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.restartcomputer", "Property[wsmanauthentication]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.setcontent", "Property[passthru]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.testpath", "Property[path]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.splitpath", "Property[parent]"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.invokeitem", "Property[credential]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.setservice", "Property[status]"]
    - ["system.boolean", "microsoft.powershell.management.activities.restartcomputer!", "Property[disableselfrestart]"]
    - ["system.activities.inargument<system.management.impersonationlevel>", "microsoft.powershell.management.activities.testconnection", "Property[impersonation]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.setwmiinstance", "Property[class]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.clearitem", "Property[filter]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.startprocess", "Property[nonewwindow]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.moveitemproperty", "Property[force]"]
    - ["system.activities.inargument<system.management.automation.runspaces.pssession>", "microsoft.powershell.management.activities.copyitem", "Property[tosession]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.testconnection", "Property[quiet]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.testcomputersecurechannel", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.suspendservice", "Property[servicedisplayname]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.joinpath", "Property[resolve]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.clearitem", "Property[exclude]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.copyitem", "Property[recurse]"]
    - ["system.boolean", "microsoft.powershell.management.activities.removeeventlog", "Property[supportscustomremoting]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.getpsdrive", "Property[psprovider]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.getpsdrive", "Property[name]"]
    - ["system.activities.inargument<system.management.puttype>", "microsoft.powershell.management.activities.setwmiinstance", "Property[puttype]"]
    - ["system.activities.inargument<microsoft.powershell.commands.joinoptions>", "microsoft.powershell.management.activities.addcomputer", "Property[options]"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.addcomputer", "Property[credential]"]
    - ["system.string", "microsoft.powershell.management.activities.joinpath", "Property[pscommandname]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.getchilditem", "Property[exclude]"]
    - ["system.activities.inargument<system.int32>", "microsoft.powershell.management.activities.testconnection", "Property[delay]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.clearcontent", "Property[path]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.addcontent", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.resumeservice", "Property[include]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.neweventlog", "Property[messageresourcefile]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.clearitemproperty", "Property[filter]"]
    - ["system.boolean", "microsoft.powershell.management.activities.neweventlog", "Property[supportscustomremoting]"]
    - ["system.string", "microsoft.powershell.management.activities.gethotfix", "Property[pscommandname]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.renameitemproperty", "Property[filter]"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.newwebserviceproxy", "Property[credential]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.clearcontent", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.setitem", "Property[credential]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.setitem", "Property[filter]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.stopprocess", "Property[passthru]"]
    - ["system.activities.inargument<system.serviceprocess.servicecontroller[]>", "microsoft.powershell.management.activities.startservice", "Property[inputobject]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.addcomputer", "Property[server]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.removeeventlog", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.setwmiinstance", "Property[asjob]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.moveitemproperty", "Property[literalpath]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.getcontent", "Property[exclude]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.waitprocess", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.resolvepath", "Property[path]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.renameitem", "Property[path]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.getitemproperty", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.addcomputer", "Property[oupath]"]
    - ["system.boolean", "microsoft.powershell.management.activities.addcomputer", "Property[supportscustomremoting]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.moveitemproperty", "Property[destination]"]
