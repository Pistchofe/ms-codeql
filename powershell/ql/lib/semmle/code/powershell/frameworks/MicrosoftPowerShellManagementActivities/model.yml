extensions:
  - addsTo:
      pack: microsoft/powershell-all
      extensible: typeModel
    data:
    - ["system.string", "microsoft.powershell.management.activities.restartservice", "Member[pscommandname]"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.resolvepath", "Member[credential]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.stopprocess", "Member[name]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.removeitemproperty", "Member[name]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.addcomputer", "Member[unsecure]"]
    - ["system.boolean", "microsoft.powershell.management.activities.getservice", "Member[supportscustomremoting]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.removeitem", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.setwmiinstance", "Member[computername]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.setitemproperty", "Member[literalpath]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.getcontent", "Member[wait]"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.removecomputer", "Member[unjoindomaincredential]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.getcomputerrestorepoint", "Member[laststatus]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.startprocess", "Member[argumentlist]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.splitpath", "Member[noqualifier]"]
    - ["system.string", "microsoft.powershell.management.activities.clearitem", "Member[pscommandname]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.setitemproperty", "Member[passthru]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.cleareventlog", "Member[logname]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.addcontent", "Member[nonewline]"]
    - ["system.string", "microsoft.powershell.management.activities.setservice", "Member[pscommandname]"]
    - ["system.boolean", "microsoft.powershell.management.activities.setservice", "Member[supportscustomremoting]"]
    - ["system.activities.inargument<system.management.automation.runspaces.pssession>", "microsoft.powershell.management.activities.copyitem", "Member[fromsession]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.copyitemproperty", "Member[filter]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.getitempropertyvalue", "Member[exclude]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.setservice", "Member[description]"]
    - ["system.activities.inargument<system.int32>", "microsoft.powershell.management.activities.testconnection", "Member[count]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.newitem", "Member[name]"]
    - ["system.string", "microsoft.powershell.management.activities.copyitem", "Member[pscommandname]"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.testcomputersecurechannel", "Member[credential]"]
    - ["system.activities.inargument<system.serviceprocess.servicestartmode>", "microsoft.powershell.management.activities.setservice", "Member[startuptype]"]
    - ["system.boolean", "microsoft.powershell.management.activities.geteventlog", "Member[supportscustomremoting]"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.setcontent", "Member[credential]"]
    - ["system.string", "microsoft.powershell.management.activities.neweventlog", "Member[pscommandname]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.suspendservice", "Member[passthru]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.addcomputer", "Member[force]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.setcontent", "Member[nonewline]"]
    - ["system.activities.inargument<system.int32[]>", "microsoft.powershell.management.activities.geteventlog", "Member[index]"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.moveitemproperty", "Member[credential]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.stopcomputer", "Member[force]"]
    - ["system.string", "microsoft.powershell.management.activities.removewmiobject", "Member[pscommandname]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.clearrecyclebin", "Member[driveletter]"]
    - ["system.activities.inargument<system.int32>", "microsoft.powershell.management.activities.registerwmievent", "Member[maxtriggercount]"]
    - ["system.activities.inargument<system.int32[]>", "microsoft.powershell.management.activities.stopprocess", "Member[processid]"]
    - ["system.boolean", "microsoft.powershell.management.activities.gethotfix", "Member[supportscustomremoting]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.setservice", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.getchilditem", "Member[name]"]
    - ["system.activities.inargument<system.serviceprocess.servicecontroller[]>", "microsoft.powershell.management.activities.suspendservice", "Member[inputobject]"]
    - ["system.string", "microsoft.powershell.management.activities.removecomputer", "Member[pscommandname]"]
    - ["system.activities.inargument<system.int32[]>", "microsoft.powershell.management.activities.getprocess", "Member[processid]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.getitemproperty", "Member[name]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.moveitem", "Member[passthru]"]
    - ["system.activities.inargument<system.management.impersonationlevel>", "microsoft.powershell.management.activities.restartcomputer", "Member[impersonation]"]
    - ["system.activities.inargument<system.management.automation.psobject>", "microsoft.powershell.management.activities.registerwmievent", "Member[messagedata]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.getpsdrive", "Member[scope]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.writeeventlog", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.removewmiobject", "Member[locale]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.getservice", "Member[include]"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.removeitem", "Member[credential]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.copyitem", "Member[filter]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.clearrecyclebin", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.registerwmievent", "Member[namespace]"]
    - ["system.string", "microsoft.powershell.management.activities.registerwmievent", "Member[pscommandname]"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.stopcomputer", "Member[credential]"]
    - ["system.string", "microsoft.powershell.management.activities.disablecomputerrestore", "Member[pscommandname]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.disablecomputerrestore", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.suspendservice", "Member[name]"]
    - ["system.string", "microsoft.powershell.management.activities.stopprocess", "Member[pscommandname]"]
    - ["system.activities.inargument<system.int32>", "microsoft.powershell.management.activities.writeeventlog", "Member[eventid]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.clearcontent", "Member[filter]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.getitem", "Member[exclude]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.clearitem", "Member[force]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.restartcomputer", "Member[force]"]
    - ["system.activities.inargument<system.object>", "microsoft.powershell.management.activities.newitem", "Member[value]"]
    - ["system.activities.inargument<system.diagnostics.process[]>", "microsoft.powershell.management.activities.stopprocess", "Member[inputobject]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.resumeservice", "Member[servicedisplayname]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.moveitem", "Member[include]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.invokeitem", "Member[path]"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.testconnection", "Member[credential]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.getprocess", "Member[module]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.resolvepath", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.int32[]>", "microsoft.powershell.management.activities.getcomputerrestorepoint", "Member[restorepoint]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.setitem", "Member[exclude]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.moveitem", "Member[filter]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.removecomputer", "Member[workgroupname]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.startservice", "Member[servicedisplayname]"]
    - ["system.string", "microsoft.powershell.management.activities.convertpath", "Member[pscommandname]"]
    - ["system.string", "microsoft.powershell.management.activities.renameitemproperty", "Member[pscommandname]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.addcontent", "Member[force]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.registerwmievent", "Member[sourceidentifier]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.setservice", "Member[passthru]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.removeitemproperty", "Member[force]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.neweventlog", "Member[source]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.addcontent", "Member[exclude]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.setitemproperty", "Member[include]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.writeeventlog", "Member[logname]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.startprocess", "Member[redirectstandarderror]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.invokeitem", "Member[literalpath]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.setwmiinstance", "Member[authority]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.joinpath", "Member[path]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.getservice", "Member[requiredservices]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.newwebserviceproxy", "Member[class]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.startprocess", "Member[loaduserprofile]"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.addcomputer", "Member[localcredential]"]
    - ["system.boolean", "microsoft.powershell.management.activities.getprocess", "Member[supportscustomremoting]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.splitpath", "Member[literalpath]"]
    - ["system.string", "microsoft.powershell.management.activities.enablecomputerrestore", "Member[pscommandname]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.restartservice", "Member[passthru]"]
    - ["system.boolean", "microsoft.powershell.management.activities.renamecomputer", "Member[supportscustomremoting]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.registerwmievent", "Member[supportevent]"]
    - ["system.string", "microsoft.powershell.management.activities.clearrecyclebin", "Member[pscommandname]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.clearitemproperty", "Member[name]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.removewmiobject", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.geteventlog", "Member[message]"]
    - ["system.activities.inargument<system.int32>", "microsoft.powershell.management.activities.geteventlog", "Member[newest]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.suspendservice", "Member[include]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.resumeservice", "Member[exclude]"]
    - ["system.activities.inargument<system.management.authenticationlevel>", "microsoft.powershell.management.activities.testconnection", "Member[dcomauthentication]"]
    - ["system.activities.inargument<system.serviceprocess.servicestartmode>", "microsoft.powershell.management.activities.newservice", "Member[startuptype]"]
    - ["system.activities.inargument<system.int32>", "microsoft.powershell.management.activities.restartcomputer", "Member[throttlelimit]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.getitempropertyvalue", "Member[include]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.getchilditem", "Member[literalpath]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.resetcomputermachinepassword", "Member[server]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.setwmiinstance", "Member[namespace]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.setitemproperty", "Member[force]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.moveitemproperty", "Member[exclude]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.convertpath", "Member[path]"]
    - ["system.activities.inargument<system.int16>", "microsoft.powershell.management.activities.restartcomputer", "Member[delay]"]
    - ["system.string", "microsoft.powershell.management.activities.newwebserviceproxy", "Member[pscommandname]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.newitemproperty", "Member[exclude]"]
    - ["system.string", "microsoft.powershell.management.activities.setcontent", "Member[pscommandname]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.newitemproperty", "Member[filter]"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.newitem", "Member[credential]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.removewmiobject", "Member[authority]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.getcontent", "Member[force]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.renameitem", "Member[force]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.checkpointcomputer", "Member[restorepointtype]"]
    - ["system.activities.inargument<system.int32[]>", "microsoft.powershell.management.activities.waitprocess", "Member[processid]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.setcontent", "Member[filter]"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.getitemproperty", "Member[credential]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.getchilditem", "Member[file]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.startprocess", "Member[redirectstandardoutput]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.neweventlog", "Method[getpowershell].ReturnValue"]
    - ["system.string", "microsoft.powershell.management.activities.clearcontent", "Member[pscommandname]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.setservice", "Member[name]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.startservice", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.addcontent", "Member[path]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.getitempropertyvalue", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.setitem", "Member[literalpath]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.removecomputer", "Member[restart]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.testconnection", "Member[source]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.clearitem", "Member[path]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.copyitem", "Member[destination]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.gethotfix", "Member[hotfixid]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.getservice", "Member[name]"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.getitempropertyvalue", "Member[credential]"]
    - ["system.activities.inargument<system.int32>", "microsoft.powershell.management.activities.waitprocess", "Member[timeout]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.geteventlog", "Member[asstring]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.suspendservice", "Member[exclude]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.getitempropertyvalue", "Member[path]"]
    - ["system.activities.inargument<system.management.managementobject>", "microsoft.powershell.management.activities.removewmiobject", "Member[inputobject]"]
    - ["system.activities.inargument<system.object[]>", "microsoft.powershell.management.activities.setcontent", "Member[value]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.getchilditem", "Member[path]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.restartservice", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.startprocess", "Member[filepath]"]
    - ["system.activities.inargument<system.management.impersonationlevel>", "microsoft.powershell.management.activities.removewmiobject", "Member[impersonation]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.geteventlog", "Member[entrytype]"]
    - ["system.activities.inargument<system.serviceprocess.servicecontroller[]>", "microsoft.powershell.management.activities.getservice", "Member[inputobject]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.renamecomputer", "Method[getpowershell].ReturnValue"]
    - ["system.string", "microsoft.powershell.management.activities.getpsprovider", "Member[pscommandname]"]
    - ["system.activities.inargument<system.diagnostics.process[]>", "microsoft.powershell.management.activities.getprocess", "Member[inputobject]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.restartcomputer", "Member[protocol]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.stopservice", "Member[servicedisplayname]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.setwmiinstance", "Member[path]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.removeitem", "Member[exclude]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.removewmiobject", "Member[asjob]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.removeeventlog", "Member[logname]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.newservice", "Member[description]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.renameitem", "Member[passthru]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.testconnection", "Member[asjob]"]
    - ["system.string", "microsoft.powershell.management.activities.splitpath", "Member[pscommandname]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.newservice", "Member[binarypathname]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.registerwmievent", "Member[class]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.startservice", "Member[name]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.getchilditem", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.newservice", "Member[credential]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.clearitem", "Member[literalpath]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.stopcomputer", "Member[asjob]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.disablecomputerrestore", "Member[drive]"]
    - ["system.string", "microsoft.powershell.management.activities.checkpointcomputer", "Member[pscommandname]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.moveitemproperty", "Method[getpowershell].ReturnValue"]
    - ["system.string", "microsoft.powershell.management.activities.limiteventlog", "Member[pscommandname]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.moveitem", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.clearitemproperty", "Member[literalpath]"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.renamecomputer", "Member[localcredential]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.neweventlog", "Member[logname]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.gethotfix", "Member[description]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.addcomputer", "Member[domainname]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.copyitemproperty", "Member[passthru]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.getcontent", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.collections.hashtable>", "microsoft.powershell.management.activities.setwmiinstance", "Member[arguments]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.addcontent", "Member[passthru]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.geteventlog", "Member[username]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.renameitem", "Member[newname]"]
    - ["system.string", "microsoft.powershell.management.activities.resetcomputermachinepassword", "Member[pscommandname]"]
    - ["system.activities.inargument<system.object>", "microsoft.powershell.management.activities.setitem", "Member[value]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.addcontent", "Member[include]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.writeeventlog", "Member[message]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.newservice", "Member[name]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.restartcomputer", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.stopcomputer", "Member[protocol]"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.splitpath", "Member[credential]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.setitemproperty", "Member[name]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.stopprocess", "Member[force]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.stopcomputer", "Member[wsmanauthentication]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.copyitemproperty", "Member[literalpath]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.getlocation", "Member[psdrive]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.getitem", "Member[force]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.newitemproperty", "Member[path]"]
    - ["system.activities.inargument<microsoft.powershell.commands.filesystemcmdletproviderencoding>", "microsoft.powershell.management.activities.getcontent", "Member[encoding]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.getservice", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.getitempropertyvalue", "Member[name]"]
    - ["system.string", "microsoft.powershell.management.activities.getpsdrive", "Member[pscommandname]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.joinpath", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.removeitem", "Member[stream]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.startprocess", "Member[wait]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.startprocess", "Member[redirectstandardinput]"]
    - ["system.activities.inargument<system.int32>", "microsoft.powershell.management.activities.restartcomputer", "Member[timeout]"]
    - ["system.activities.inargument<system.int64>", "microsoft.powershell.management.activities.limiteventlog", "Member[maximumsize]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.newitem", "Member[itemtype]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.newitemproperty", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.setcontent", "Member[include]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.setcontent", "Member[force]"]
    - ["system.string", "microsoft.powershell.management.activities.getitem", "Member[pscommandname]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.getitem", "Member[path]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.addcomputer", "Member[restart]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.splitpath", "Member[resolve]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.getcontent", "Member[raw]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.getprocess", "Member[fileversioninfo]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.restartservice", "Member[exclude]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.renameitemproperty", "Member[force]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.addcomputer", "Method[getpowershell].ReturnValue"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.copyitem", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.splitpath", "Member[isabsolute]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.renamecomputer", "Member[wsmanauthentication]"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.gethotfix", "Member[credential]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.startprocess", "Member[passthru]"]
    - ["system.string", "microsoft.powershell.management.activities.testcomputersecurechannel", "Member[pscommandname]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.getpsprovider", "Member[psprovider]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.setitemproperty", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.removeitemproperty", "Member[credential]"]
    - ["system.string", "microsoft.powershell.management.activities.newitemproperty", "Member[pscommandname]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.setcontent", "Member[path]"]
    - ["system.string", "microsoft.powershell.management.activities.newitem", "Member[pscommandname]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.testcomputersecurechannel", "Member[repair]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.renamecomputer", "Member[force]"]
    - ["system.activities.inargument<system.management.automation.flagsexpression<system.io.fileattributes>>", "microsoft.powershell.management.activities.getchilditem", "Member[attributes]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.invokeitem", "Member[exclude]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.getlocation", "Member[stackname]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.copyitem", "Member[passthru]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.restartcomputer", "Member[wait]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.moveitemproperty", "Member[name]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.renameitemproperty", "Member[path]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.renamecomputer", "Member[passthru]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.removeitemproperty", "Member[include]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.newservice", "Member[dependson]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.stopservice", "Member[exclude]"]
    - ["system.string", "microsoft.powershell.management.activities.setitemproperty", "Member[pscommandname]"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.removecomputer", "Member[localcredential]"]
    - ["system.activities.inargument<system.int16>", "microsoft.powershell.management.activities.writeeventlog", "Member[category]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.removeitemproperty", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.getpsdrive", "Member[literalname]"]
    - ["system.string", "microsoft.powershell.management.activities.copyitemproperty", "Member[pscommandname]"]
    - ["system.string", "microsoft.powershell.management.activities.restorecomputer", "Member[pscommandname]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.renameitemproperty", "Method[getpowershell].ReturnValue"]
    - ["system.string", "microsoft.powershell.management.activities.waitprocess", "Member[pscommandname]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.startservice", "Member[include]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.copyitemproperty", "Member[exclude]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.getcontent", "Member[filter]"]
    - ["system.activities.inargument<system.diagnostics.eventlogentrytype>", "microsoft.powershell.management.activities.writeeventlog", "Member[entrytype]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.checkpointcomputer", "Method[getpowershell].ReturnValue"]
    - ["system.string", "microsoft.powershell.management.activities.getcontent", "Member[pscommandname]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.removeitem", "Member[path]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.getchilditem", "Member[readonly]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.removecomputer", "Member[passthru]"]
    - ["system.string", "microsoft.powershell.management.activities.clearitemproperty", "Member[pscommandname]"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.clearcontent", "Member[credential]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.testpath", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.getitemproperty", "Member[literalpath]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.cleareventlog", "Method[getpowershell].ReturnValue"]
    - ["system.string", "microsoft.powershell.management.activities.getprocess", "Member[pscommandname]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.writeeventlog", "Member[source]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.stopservice", "Member[passthru]"]
    - ["system.string", "microsoft.powershell.management.activities.getitemproperty", "Member[pscommandname]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.getprocess", "Method[getpowershell].ReturnValue"]
    - ["system.string", "microsoft.powershell.management.activities.moveitem", "Member[pscommandname]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.clearitemproperty", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.removecomputer", "Member[force]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.getprocess", "Member[includeusername]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.getcontent", "Member[literalpath]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.renameitemproperty", "Member[exclude]"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.restartcomputer", "Member[pscredential]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.newitemproperty", "Member[name]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.registerwmievent", "Member[computername]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.getcontent", "Member[stream]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.copyitemproperty", "Member[path]"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.renamecomputer", "Member[domaincredential]"]
    - ["system.string", "microsoft.powershell.management.activities.suspendservice", "Member[pscommandname]"]
    - ["system.activities.inargument<microsoft.powershell.commands.testpathtype>", "microsoft.powershell.management.activities.testpath", "Member[pathtype]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.moveitem", "Member[literalpath]"]
    - ["system.string", "microsoft.powershell.management.activities.restartcomputer", "Member[pscommandname]"]
    - ["system.activities.inargument<system.int32>", "microsoft.powershell.management.activities.restorecomputer", "Member[restorepoint]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.restartservice", "Member[name]"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.startprocess", "Member[credential]"]
    - ["system.activities.inargument<system.diagnostics.processwindowstyle>", "microsoft.powershell.management.activities.startprocess", "Member[windowstyle]"]
    - ["system.activities.inargument<system.management.managementobject>", "microsoft.powershell.management.activities.setwmiinstance", "Member[inputobject]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.invokeitem", "Member[include]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.stopprocess", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.getitem", "Member[credential]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.resetcomputermachinepassword", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.testpath", "Member[exclude]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.clearitem", "Method[getpowershell].ReturnValue"]
    - ["system.string", "microsoft.powershell.management.activities.renameitem", "Member[pscommandname]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.renameitemproperty", "Member[literalpath]"]
    - ["system.activities.inargument<system.management.automation.psobject>", "microsoft.powershell.management.activities.setitemproperty", "Member[inputobject]"]
    - ["system.activities.inargument<system.management.automation.scriptblock>", "microsoft.powershell.management.activities.registerwmievent", "Member[action]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.removeitemproperty", "Member[literalpath]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.startprocess", "Member[verb]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.moveitem", "Member[path]"]
    - ["system.activities.inargument<system.int32>", "microsoft.powershell.management.activities.testconnection", "Member[throttlelimit]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.gethotfix", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.setservice", "Member[servicedisplayname]"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.testpath", "Member[credential]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.stopcomputer", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.clearrecyclebin", "Member[force]"]
    - ["system.string", "microsoft.powershell.management.activities.cleareventlog", "Member[pscommandname]"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.setwmiinstance", "Member[credential]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.getitem", "Member[literalpath]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.stopservice", "Member[force]"]
    - ["system.string", "microsoft.powershell.management.activities.resolvepath", "Member[pscommandname]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.getservice", "Member[exclude]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.resumeservice", "Member[name]"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.copyitem", "Member[credential]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.startservice", "Member[exclude]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.geteventlog", "Member[asbaseobject]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.resolvepath", "Member[relative]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.startprocess", "Member[workingdirectory]"]
    - ["system.boolean", "microsoft.powershell.management.activities.writeeventlog", "Member[supportscustomremoting]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.clearcontent", "Member[exclude]"]
    - ["system.activities.inargument<system.object>", "microsoft.powershell.management.activities.newitemproperty", "Member[value]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.getitemproperty", "Member[exclude]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.moveitem", "Member[exclude]"]
    - ["system.activities.inargument<system.int64[]>", "microsoft.powershell.management.activities.geteventlog", "Member[instanceid]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.copyitemproperty", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.int64>", "microsoft.powershell.management.activities.registerwmievent", "Member[timeout]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.copyitem", "Member[include]"]
    - ["system.string", "microsoft.powershell.management.activities.removeitem", "Member[pscommandname]"]
    - ["system.string", "microsoft.powershell.management.activities.addcontent", "Member[pscommandname]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.removewmiobject", "Member[computername]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.getcomputerrestorepoint", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.moveitem", "Member[force]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.setwmiinstance", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.int32>", "microsoft.powershell.management.activities.stopcomputer", "Member[throttlelimit]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.removewmiobject", "Member[enableallprivileges]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.getlocation", "Member[stack]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.removewmiobject", "Member[path]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.newwebserviceproxy", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.startservice", "Member[passthru]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.addcontent", "Member[stream]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.newservice", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.getchilditem", "Member[hidden]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.registerwmievent", "Member[forward]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.newwebserviceproxy", "Member[namespace]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.convertpath", "Method[getpowershell].ReturnValue"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.suspendservice", "Method[getpowershell].ReturnValue"]
    - ["system.boolean", "microsoft.powershell.management.activities.removecomputer", "Member[supportscustomremoting]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.stopservice", "Member[name]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.getitem", "Member[filter]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.removeitem", "Member[recurse]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.getlocation", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.copyitem", "Member[literalpath]"]
    - ["system.activities.inargument<system.serviceprocess.servicecontroller[]>", "microsoft.powershell.management.activities.restartservice", "Member[inputobject]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.setcontent", "Member[stream]"]
    - ["system.activities.inargument<system.datetime>", "microsoft.powershell.management.activities.geteventlog", "Member[after]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.restartservice", "Member[include]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.setitem", "Member[include]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.getitemproperty", "Member[path]"]
    - ["system.activities.inargument<system.management.authenticationlevel>", "microsoft.powershell.management.activities.removewmiobject", "Member[authentication]"]
    - ["system.activities.inargument<system.int32>", "microsoft.powershell.management.activities.testconnection", "Member[buffersize]"]
    - ["system.activities.inargument<system.uint32>", "microsoft.powershell.management.activities.getchilditem", "Member[depth]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.copyitemproperty", "Member[include]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.newitem", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.datetime>", "microsoft.powershell.management.activities.geteventlog", "Member[before]"]
    - ["system.string", "microsoft.powershell.management.activities.setitem", "Member[pscommandname]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.getitem", "Member[include]"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.renameitem", "Member[credential]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.splitpath", "Member[qualifier]"]
    - ["system.string", "microsoft.powershell.management.activities.resumeservice", "Member[pscommandname]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.copyitem", "Member[force]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.resumeservice", "Member[passthru]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.getcontent", "Member[include]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.stopservice", "Member[nowait]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.renamecomputer", "Member[restart]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.getitempropertyvalue", "Member[filter]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.testpath", "Member[filter]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.testconnection", "Member[protocol]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.renameitem", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.testpath", "Member[literalpath]"]
    - ["system.activities.inargument<system.int32>", "microsoft.powershell.management.activities.setwmiinstance", "Member[throttlelimit]"]
    - ["system.activities.inargument<system.serviceprocess.servicecontroller[]>", "microsoft.powershell.management.activities.resumeservice", "Member[inputobject]"]
    - ["system.activities.inargument<system.int32>", "microsoft.powershell.management.activities.removewmiobject", "Member[throttlelimit]"]
    - ["system.activities.inargument<system.management.impersonationlevel>", "microsoft.powershell.management.activities.setwmiinstance", "Member[impersonation]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.moveitem", "Member[destination]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.clearcontent", "Member[stream]"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.moveitem", "Member[credential]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.removeitemproperty", "Member[filter]"]
    - ["system.string", "microsoft.powershell.management.activities.addcomputer", "Member[pscommandname]"]
    - ["system.string", "microsoft.powershell.management.activities.newservice", "Member[pscommandname]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.restartservice", "Member[servicedisplayname]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.getservice", "Member[servicedisplayname]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.stopservice", "Member[include]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.limiteventlog", "Method[getpowershell].ReturnValue"]
    - ["system.string", "microsoft.powershell.management.activities.removeitemproperty", "Member[pscommandname]"]
    - ["system.string", "microsoft.powershell.management.activities.geteventlog", "Member[pscommandname]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.removeitem", "Member[filter]"]
    - ["system.boolean", "microsoft.powershell.management.activities.limiteventlog", "Member[supportscustomremoting]"]
    - ["system.string", "microsoft.powershell.management.activities.moveitemproperty", "Member[pscommandname]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.newitemproperty", "Member[include]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.renameitemproperty", "Member[passthru]"]
    - ["system.activities.inargument<system.uri>", "microsoft.powershell.management.activities.newwebserviceproxy", "Member[uri]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.neweventlog", "Member[parameterresourcefile]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.removeitem", "Member[force]"]
    - ["system.activities.inargument<system.object>", "microsoft.powershell.management.activities.setitemproperty", "Member[value]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.clearcontent", "Member[include]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.removeeventlog", "Member[source]"]
    - ["system.activities.inargument<system.management.authenticationlevel>", "microsoft.powershell.management.activities.stopcomputer", "Member[dcomauthentication]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.moveitemproperty", "Member[path]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.clearitemproperty", "Member[exclude]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.copyitem", "Member[path]"]
    - ["system.string", "microsoft.powershell.management.activities.stopcomputer", "Member[pscommandname]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.removewmiobject", "Member[namespace]"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.addcomputer", "Member[unjoindomaincredential]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.getitemproperty", "Member[filter]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.clearcontent", "Member[force]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.setcontent", "Member[literalpath]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.setitem", "Member[passthru]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.getcontent", "Member[path]"]
    - ["system.activities.inargument<system.int64>", "microsoft.powershell.management.activities.getcontent", "Member[totalcount]"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.copyitemproperty", "Member[credential]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.restartcomputer", "Member[pscomputername]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.copyitem", "Member[exclude]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.neweventlog", "Member[categoryresourcefile]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.convertpath", "Member[literalpath]"]
    - ["system.activities.inargument<system.diagnostics.overflowaction>", "microsoft.powershell.management.activities.limiteventlog", "Member[overflowaction]"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.newitemproperty", "Member[credential]"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.setitemproperty", "Member[credential]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.renamecomputer", "Member[newname]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.splitpath", "Member[path]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.setitemproperty", "Member[path]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.startprocess", "Member[usenewenvironment]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.getlocation", "Member[psprovider]"]
    - ["system.string", "microsoft.powershell.management.activities.writeeventlog", "Member[pscommandname]"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.renameitemproperty", "Member[credential]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.getchilditem", "Member[recurse]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.getservice", "Member[dependentservices]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.testconnection", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.setitemproperty", "Member[exclude]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.stopservice", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.testpath", "Member[include]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.splitpath", "Member[leaf]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.clearitemproperty", "Member[path]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.invokeitem", "Member[filter]"]
    - ["system.activities.inargument<system.int64>", "microsoft.powershell.management.activities.getcontent", "Member[readcount]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.clearcontent", "Member[literalpath]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.limiteventlog", "Member[logname]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.removecomputer", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.geteventlog", "Member[logname]"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.clearitem", "Member[credential]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.renamecomputer", "Member[protocol]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.geteventlog", "Method[getpowershell].ReturnValue"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.enablecomputerrestore", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.addcomputer", "Member[workgroupname]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.removeitem", "Member[literalpath]"]
    - ["system.string", "microsoft.powershell.management.activities.renamecomputer", "Member[pscommandname]"]
    - ["system.activities.inargument<microsoft.powershell.commands.filesystemcmdletproviderencoding>", "microsoft.powershell.management.activities.setcontent", "Member[encoding]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.newitemproperty", "Member[force]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.getchilditem", "Member[directory]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.removewmiobject", "Member[class]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.newitem", "Member[path]"]
    - ["system.activities.inargument<system.nullable<system.datetime>>", "microsoft.powershell.management.activities.testpath", "Member[newerthan]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.copyitemproperty", "Member[destination]"]
    - ["system.activities.inargument<system.management.impersonationlevel>", "microsoft.powershell.management.activities.stopcomputer", "Member[impersonation]"]
    - ["system.activities.inargument<system.int32>", "microsoft.powershell.management.activities.limiteventlog", "Member[retentiondays]"]
    - ["system.activities.inargument<system.byte[]>", "microsoft.powershell.management.activities.writeeventlog", "Member[rawdata]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.newservice", "Member[servicedisplayname]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.clearitemproperty", "Member[include]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.getpsprovider", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.removeitem", "Member[include]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.removeitemproperty", "Member[exclude]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.getpsdrive", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.setwmiinstance", "Member[locale]"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.registerwmievent", "Member[credential]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.getchilditem", "Member[filter]"]
    - ["system.string", "microsoft.powershell.management.activities.getchilditem", "Member[pscommandname]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.testconnection", "Member[computername]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.restartservice", "Member[force]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.removeitemproperty", "Member[path]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.newitem", "Member[force]"]
    - ["system.activities.inargument<system.nullable<system.datetime>>", "microsoft.powershell.management.activities.testpath", "Member[olderthan]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.setcontent", "Member[exclude]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.testpath", "Member[isvalid]"]
    - ["system.boolean", "microsoft.powershell.management.activities.stopcomputer", "Member[supportscustomremoting]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.setitem", "Member[path]"]
    - ["system.activities.inargument<system.object[]>", "microsoft.powershell.management.activities.addcontent", "Member[value]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.newitemproperty", "Member[literalpath]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.checkpointcomputer", "Member[description]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.setcontent", "Method[getpowershell].ReturnValue"]
    - ["system.boolean", "microsoft.powershell.management.activities.cleareventlog", "Member[supportscustomremoting]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.addcontent", "Member[literalpath]"]
    - ["system.string", "microsoft.powershell.management.activities.stopservice", "Member[pscommandname]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.registerwmievent", "Member[query]"]
    - ["system.activities.inargument<system.int32>", "microsoft.powershell.management.activities.testconnection", "Member[timetolive]"]
    - ["system.string", "microsoft.powershell.management.activities.startprocess", "Member[pscommandname]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.getitem", "Method[getpowershell].ReturnValue"]
    - ["system.string", "microsoft.powershell.management.activities.getservice", "Member[pscommandname]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.getitemproperty", "Member[include]"]
    - ["system.string", "microsoft.powershell.management.activities.setwmiinstance", "Member[pscommandname]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.setwmiinstance", "Member[enableallprivileges]"]
    - ["system.string", "microsoft.powershell.management.activities.getcomputerrestorepoint", "Member[pscommandname]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.clearitemproperty", "Member[force]"]
    - ["system.string", "microsoft.powershell.management.activities.getitempropertyvalue", "Member[pscommandname]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.waitprocess", "Member[name]"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.getcontent", "Member[credential]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.setitemproperty", "Member[filter]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.resumeservice", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.management.authenticationlevel>", "microsoft.powershell.management.activities.restartcomputer", "Member[dcomauthentication]"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.removewmiobject", "Member[credential]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.testcomputersecurechannel", "Member[server]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.geteventlog", "Member[list]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.renameitemproperty", "Member[newname]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.renameitem", "Member[literalpath]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.getchilditem", "Member[include]"]
    - ["system.string", "microsoft.powershell.management.activities.invokeitem", "Member[pscommandname]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.resolvepath", "Member[literalpath]"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.addcontent", "Member[credential]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.testconnection", "Member[wsmanauthentication]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.renameitemproperty", "Member[include]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.moveitemproperty", "Member[filter]"]
    - ["system.string", "microsoft.powershell.management.activities.testconnection", "Member[pscommandname]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.clearitemproperty", "Member[passthru]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.enablecomputerrestore", "Member[drive]"]
    - ["system.activities.inargument<system.serviceprocess.servicecontroller>", "microsoft.powershell.management.activities.setservice", "Member[inputobject]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.getchilditem", "Member[force]"]
    - ["system.activities.inargument<microsoft.powershell.commands.filesystemcmdletproviderencoding>", "microsoft.powershell.management.activities.addcontent", "Member[encoding]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.addcomputer", "Member[passthru]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.addcontent", "Member[filter]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.moveitemproperty", "Member[passthru]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.renameitemproperty", "Member[name]"]
    - ["system.activities.inargument<system.diagnostics.process[]>", "microsoft.powershell.management.activities.waitprocess", "Member[inputobject]"]
    - ["system.string", "microsoft.powershell.management.activities.testpath", "Member[pscommandname]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.registerwmievent", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.int32>", "microsoft.powershell.management.activities.getcontent", "Member[tail]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.getitempropertyvalue", "Member[literalpath]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.getitem", "Member[stream]"]
    - ["system.activities.inargument<system.management.authenticationlevel>", "microsoft.powershell.management.activities.setwmiinstance", "Member[authentication]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.geteventlog", "Member[source]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.newwebserviceproxy", "Member[usedefaultcredential]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.setitem", "Member[force]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.getchilditem", "Member[system]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.getcontent", "Member[delimiter]"]
    - ["system.string", "microsoft.powershell.management.activities.removeeventlog", "Member[pscommandname]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.setitem", "Method[getpowershell].ReturnValue"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.invokeitem", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.joinpath", "Member[credential]"]
    - ["system.string", "microsoft.powershell.management.activities.getlocation", "Member[pscommandname]"]
    - ["system.activities.inargument<microsoft.powershell.commands.waitforservicetypes>", "microsoft.powershell.management.activities.restartcomputer", "Member[for]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.addcomputer", "Member[newname]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.copyitemproperty", "Member[name]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.moveitemproperty", "Member[include]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.copyitemproperty", "Member[force]"]
    - ["system.activities.inargument<system.serviceprocess.servicecontroller[]>", "microsoft.powershell.management.activities.stopservice", "Member[inputobject]"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.resetcomputermachinepassword", "Member[credential]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.startprocess", "Method[getpowershell].ReturnValue"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.splitpath", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.joinpath", "Member[childpath]"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.clearitemproperty", "Member[credential]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.restorecomputer", "Method[getpowershell].ReturnValue"]
    - ["system.string", "microsoft.powershell.management.activities.startservice", "Member[pscommandname]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.clearitem", "Member[include]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.copyitem", "Member[container]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.newitemproperty", "Member[propertytype]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.getprocess", "Member[name]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.restartcomputer", "Member[wsmanauthentication]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.setcontent", "Member[passthru]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.testpath", "Member[path]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.splitpath", "Member[parent]"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.invokeitem", "Member[credential]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.setservice", "Member[status]"]
    - ["system.boolean", "microsoft.powershell.management.activities.restartcomputer!", "Member[disableselfrestart]"]
    - ["system.activities.inargument<system.management.impersonationlevel>", "microsoft.powershell.management.activities.testconnection", "Member[impersonation]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.setwmiinstance", "Member[class]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.clearitem", "Member[filter]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.startprocess", "Member[nonewwindow]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.moveitemproperty", "Member[force]"]
    - ["system.activities.inargument<system.management.automation.runspaces.pssession>", "microsoft.powershell.management.activities.copyitem", "Member[tosession]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.testconnection", "Member[quiet]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.testcomputersecurechannel", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.suspendservice", "Member[servicedisplayname]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.joinpath", "Member[resolve]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.clearitem", "Member[exclude]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.copyitem", "Member[recurse]"]
    - ["system.boolean", "microsoft.powershell.management.activities.removeeventlog", "Member[supportscustomremoting]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.getpsdrive", "Member[psprovider]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.getpsdrive", "Member[name]"]
    - ["system.activities.inargument<system.management.puttype>", "microsoft.powershell.management.activities.setwmiinstance", "Member[puttype]"]
    - ["system.activities.inargument<microsoft.powershell.commands.joinoptions>", "microsoft.powershell.management.activities.addcomputer", "Member[options]"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.addcomputer", "Member[credential]"]
    - ["system.string", "microsoft.powershell.management.activities.joinpath", "Member[pscommandname]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.getchilditem", "Member[exclude]"]
    - ["system.activities.inargument<system.int32>", "microsoft.powershell.management.activities.testconnection", "Member[delay]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.clearcontent", "Member[path]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.addcontent", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.resumeservice", "Member[include]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.neweventlog", "Member[messageresourcefile]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.clearitemproperty", "Member[filter]"]
    - ["system.boolean", "microsoft.powershell.management.activities.neweventlog", "Member[supportscustomremoting]"]
    - ["system.string", "microsoft.powershell.management.activities.gethotfix", "Member[pscommandname]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.renameitemproperty", "Member[filter]"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.newwebserviceproxy", "Member[credential]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.clearcontent", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.management.activities.setitem", "Member[credential]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.setitem", "Member[filter]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.stopprocess", "Member[passthru]"]
    - ["system.activities.inargument<system.serviceprocess.servicecontroller[]>", "microsoft.powershell.management.activities.startservice", "Member[inputobject]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.addcomputer", "Member[server]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.removeeventlog", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.management.activities.setwmiinstance", "Member[asjob]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.moveitemproperty", "Member[literalpath]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.getcontent", "Member[exclude]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.waitprocess", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.management.activities.resolvepath", "Member[path]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.renameitem", "Member[path]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.management.activities.getitemproperty", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.addcomputer", "Member[oupath]"]
    - ["system.boolean", "microsoft.powershell.management.activities.addcomputer", "Member[supportscustomremoting]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.management.activities.moveitemproperty", "Member[destination]"]
