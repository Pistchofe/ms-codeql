extensions:
  - addsTo:
      pack: microsoft/powershell-all
      extensible: typeModel
    data:
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.diagnostics.activities.getwinevent", "Method[getpowershell].ReturnValue"]
    - ["system.string", "microsoft.powershell.diagnostics.activities.exportcounter", "Member[pscommandname]"]
    - ["system.activities.inargument<system.int64>", "microsoft.powershell.diagnostics.activities.getwinevent", "Member[maxevents]"]
    - ["system.activities.inargument<system.int64>", "microsoft.powershell.diagnostics.activities.importcounter", "Member[maxsamples]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.diagnostics.activities.importcounter", "Member[listset]"]
    - ["system.activities.inargument<microsoft.powershell.commands.getcounter.performancecountersampleset[]>", "microsoft.powershell.diagnostics.activities.exportcounter", "Member[inputobject]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.diagnostics.activities.getwinevent", "Member[listlog]"]
    - ["system.activities.inargument<system.int32>", "microsoft.powershell.diagnostics.activities.getcounter", "Member[sampleinterval]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.diagnostics.activities.getwinevent", "Member[oldest]"]
    - ["system.activities.inargument<system.xml.xmldocument>", "microsoft.powershell.diagnostics.activities.getwinevent", "Member[filterxml]"]
    - ["system.activities.inargument<system.datetime>", "microsoft.powershell.diagnostics.activities.importcounter", "Member[starttime]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.diagnostics.activities.exportcounter", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.diagnostics.activities.getwinevent", "Member[providername]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.diagnostics.activities.getwinevent", "Member[force]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.diagnostics.activities.newwinevent", "Member[providername]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.diagnostics.activities.exportcounter", "Member[circular]"]
    - ["system.activities.inargument<system.int64>", "microsoft.powershell.diagnostics.activities.getcounter", "Member[maxsamples]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.diagnostics.activities.newwinevent", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.diagnostics.activities.exportcounter", "Member[path]"]
    - ["system.activities.inargument<system.management.automation.pscredential>", "microsoft.powershell.diagnostics.activities.getwinevent", "Member[credential]"]
    - ["system.string", "microsoft.powershell.diagnostics.activities.getcounter", "Member[pscommandname]"]
    - ["system.string", "microsoft.powershell.diagnostics.activities.importcounter", "Member[pscommandname]"]
    - ["system.string", "microsoft.powershell.diagnostics.activities.getwinevent", "Member[pscommandname]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.diagnostics.activities.exportcounter", "Member[fileformat]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.diagnostics.activities.importcounter", "Member[summary]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.diagnostics.activities.importcounter", "Member[counter]"]
    - ["system.activities.inargument<system.datetime>", "microsoft.powershell.diagnostics.activities.importcounter", "Member[endtime]"]
    - ["system.activities.inargument<system.byte>", "microsoft.powershell.diagnostics.activities.newwinevent", "Member[version]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.diagnostics.activities.getcounter", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.diagnostics.activities.importcounter", "Member[path]"]
    - ["system.activities.inargument<system.uint32>", "microsoft.powershell.diagnostics.activities.exportcounter", "Member[maxsize]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.diagnostics.activities.getwinevent", "Member[listprovider]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.diagnostics.activities.getcounter", "Member[continuous]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.diagnostics.activities.getcounter", "Member[counter]"]
    - ["system.boolean", "microsoft.powershell.diagnostics.activities.getcounter", "Member[supportscustomremoting]"]
    - ["system.activities.inargument<system.string>", "microsoft.powershell.diagnostics.activities.getwinevent", "Member[filterxpath]"]
    - ["microsoft.powershell.activities.activityimplementationcontext", "microsoft.powershell.diagnostics.activities.importcounter", "Method[getpowershell].ReturnValue"]
    - ["system.activities.inargument<system.object[]>", "microsoft.powershell.diagnostics.activities.newwinevent", "Member[payload]"]
    - ["system.string", "microsoft.powershell.diagnostics.activities.newwinevent", "Member[pscommandname]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.diagnostics.activities.getwinevent", "Member[logname]"]
    - ["system.activities.inargument<system.int32>", "microsoft.powershell.diagnostics.activities.newwinevent", "Member[wineventid]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.diagnostics.activities.getwinevent", "Member[path]"]
    - ["system.boolean", "microsoft.powershell.diagnostics.activities.getwinevent", "Member[supportscustomremoting]"]
    - ["system.activities.inargument<system.string[]>", "microsoft.powershell.diagnostics.activities.getcounter", "Member[listset]"]
    - ["system.activities.inargument<system.collections.hashtable[]>", "microsoft.powershell.diagnostics.activities.getwinevent", "Member[filterhashtable]"]
    - ["system.activities.inargument<system.management.automation.switchparameter>", "microsoft.powershell.diagnostics.activities.exportcounter", "Member[force]"]
