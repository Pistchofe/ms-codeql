extensions:
  - addsTo:
      pack: microsoft/powershell-all
      extensible: typeModel
    data:
    - ["system.exception", "system.componentmodel.composition.compositionerror", "Member[exception]"]
    - ["system.componentmodel.composition.creationpolicy", "system.componentmodel.composition.importmanyattribute", "Member[requiredcreationpolicy]"]
    - ["system.reflection.reflectioncontext", "system.componentmodel.composition.catalogreflectioncontextattribute", "Method[createreflectioncontext].ReturnValue"]
    - ["system.boolean", "system.componentmodel.composition.attributedmodelservices!", "Method[imports].ReturnValue"]
    - ["system.object", "system.componentmodel.composition.partmetadataattribute", "Member[value]"]
    - ["system.string", "system.componentmodel.composition.adaptationconstants!", "Member[adaptercontractname]"]
    - ["system.componentmodel.composition.creationpolicy", "system.componentmodel.composition.creationpolicy!", "Member[any]"]
    - ["system.string", "system.componentmodel.composition.changerejectedexception", "Member[message]"]
    - ["system.string", "system.componentmodel.composition.adaptationconstants!", "Member[adapterfromcontractmetadataname]"]
    - ["system.componentmodel.composition.creationpolicy", "system.componentmodel.composition.creationpolicy!", "Member[nonshared]"]
    - ["system.componentmodel.composition.importsource", "system.componentmodel.composition.importsource!", "Member[local]"]
    - ["system.string", "system.componentmodel.composition.compositionexception", "Member[message]"]
    - ["system.boolean", "system.componentmodel.composition.exportmetadataattribute", "Member[ismultiple]"]
    - ["system.type", "system.componentmodel.composition.importattribute", "Member[contracttype]"]
    - ["system.string", "system.componentmodel.composition.adaptationconstants!", "Member[adaptertocontractmetadataname]"]
    - ["system.componentmodel.composition.importsource", "system.componentmodel.composition.importattribute", "Member[source]"]
    - ["system.string", "system.componentmodel.composition.compositionerror", "Method[tostring].ReturnValue"]
    - ["system.type", "system.componentmodel.composition.metadataviewimplementationattribute", "Member[implementationtype]"]
    - ["system.string", "system.componentmodel.composition.importmanyattribute", "Member[contractname]"]
    - ["system.componentmodel.composition.importsource", "system.componentmodel.composition.importmanyattribute", "Member[source]"]
    - ["system.componentmodel.composition.creationpolicy", "system.componentmodel.composition.partcreationpolicyattribute", "Member[creationpolicy]"]
    - ["system.string", "system.componentmodel.composition.exportmetadataattribute", "Member[name]"]
    - ["system.componentmodel.composition.primitives.composablepart", "system.componentmodel.composition.attributedmodelservices!", "Method[addexportedvalue<t>].ReturnValue"]
    - ["system.string", "system.componentmodel.composition.importattribute", "Member[contractname]"]
    - ["system.componentmodel.composition.primitives.composablepartdefinition", "system.componentmodel.composition.attributedmodelservices!", "Method[createpartdefinition].ReturnValue"]
    - ["system.string", "system.componentmodel.composition.compositionerror", "Member[description]"]
    - ["system.componentmodel.composition.primitives.composablepart", "system.componentmodel.composition.attributedmodelservices!", "Method[createpart].ReturnValue"]
    - ["system.componentmodel.composition.primitives.icompositionelement", "system.componentmodel.composition.compositionerror", "Member[element]"]
    - ["system.boolean", "system.componentmodel.composition.attributedmodelservices!", "Method[imports<t>].ReturnValue"]
    - ["system.boolean", "system.componentmodel.composition.importattribute", "Member[allowrecomposition]"]
    - ["system.string", "system.componentmodel.composition.attributedmodelservices!", "Method[gettypeidentity].ReturnValue"]
    - ["system.boolean", "system.componentmodel.composition.importmanyattribute", "Member[allowrecomposition]"]
    - ["system.componentmodel.composition.creationpolicy", "system.componentmodel.composition.importattribute", "Member[requiredcreationpolicy]"]
    - ["system.componentmodel.composition.creationpolicy", "system.componentmodel.composition.creationpolicy!", "Member[shared]"]
    - ["system.boolean", "system.componentmodel.composition.attributedmodelservices!", "Method[exports].ReturnValue"]
    - ["system.componentmodel.composition.importsource", "system.componentmodel.composition.importsource!", "Member[any]"]
    - ["system.string", "system.componentmodel.composition.attributedmodelservices!", "Method[getcontractname].ReturnValue"]
    - ["system.type", "system.componentmodel.composition.exportattribute", "Member[contracttype]"]
    - ["system.componentmodel.composition.importsource", "system.componentmodel.composition.importsource!", "Member[nonlocal]"]
    - ["system.componentmodel.composition.primitives.composablepart", "system.componentmodel.composition.attributedmodelservices!", "Method[addpart].ReturnValue"]
    - ["system.boolean", "system.componentmodel.composition.attributedmodelservices!", "Method[exports<t>].ReturnValue"]
    - ["system.string", "system.componentmodel.composition.partmetadataattribute", "Member[name]"]
    - ["system.string", "system.componentmodel.composition.exportattribute", "Member[contractname]"]
    - ["tmetadataview", "system.componentmodel.composition.attributedmodelservices!", "Method[getmetadataview<tmetadataview>].ReturnValue"]
    - ["system.componentmodel.composition.primitives.composablepart", "system.componentmodel.composition.attributedmodelservices!", "Method[satisfyimportsonce].ReturnValue"]
    - ["system.type", "system.componentmodel.composition.importmanyattribute", "Member[contracttype]"]
    - ["system.boolean", "system.componentmodel.composition.importattribute", "Member[allowdefault]"]
    - ["system.collections.objectmodel.readonlycollection<system.componentmodel.composition.compositionerror>", "system.componentmodel.composition.compositionexception", "Member[errors]"]
    - ["system.collections.objectmodel.readonlycollection<system.exception>", "system.componentmodel.composition.compositionexception", "Member[rootcauses]"]
    - ["system.object", "system.componentmodel.composition.exportmetadataattribute", "Member[value]"]
