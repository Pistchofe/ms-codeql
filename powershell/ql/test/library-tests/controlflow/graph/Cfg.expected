functions.ps1:
#    1| Add-Numbers-Arguments
#-----|  -> foo

#    1| {...}
#-----|  -> Add-Numbers-Arguments

#    1| enter functions.ps1
#-----|  -> functions.ps1

#    1| exit functions.ps1

#    1| exit functions.ps1 (normal)
#-----|  -> exit functions.ps1

#    1| functions.ps1
#-----|  -> {...}

#    1| enter {...}
#-----|  -> {...}

#    1| exit {...}

#    1| exit {...} (normal)
#-----|  -> exit {...}

#    1| {...}
#-----|  -> param(...)

#    3| param(...)
#-----|  -> {...}

#    3| {...}
#-----|  -> ...+...

#    8| number1
#-----|  -> number2

#    8| ...+...
#-----|  -> number1

#    8| ...+...
#-----|  -> exit {...} (normal)

#    8| ...+...
#-----|  -> ...+...

#    8| number2
#-----|  -> ...+...

#   11| foo
#-----|  -> Default-Arguments

#   11| enter {...}
#-----|  -> {...}

#   11| exit {...}

#   11| exit {...} (normal)
#-----|  -> exit {...}

#   11| {...}
#-----|  -> param(...)

#   11| param(...)
#-----|  -> {...}

#   11| {...}
#-----|  -> exit {...} (normal)

#   13| Default-Arguments
#-----|  -> Add-Numbers-From-Array

#   13| enter {...}
#-----|  -> {...}

#   13| exit {...}

#   13| exit {...} (normal)
#-----|  -> exit {...}

#   13| {...}
#-----|  -> 0

#   14| param(...)
#-----|  -> {...}

#   14| {...}
#-----|  -> ...+...

#   16| 0
#-----|  -> name1

#   17| name1
#-----|  -> 1

#   17| ...+...
#-----|  -> param(...)

#   17| 1
#-----|  -> ...+...

#   19| name
#-----|  -> name2

#   19| ...+...
#-----|  -> name

#   19| ...+...
#-----|  -> exit {...} (normal)

#   19| ...+...
#-----|  -> ...+...

#   19| name2
#-----|  -> ...+...

#   22| Add-Numbers-From-Array
#-----|  -> Add-Numbers-From-Pipeline

#   22| enter {...}
#-----|  -> {...}

#   22| exit {...}

#   22| exit {...} (normal)
#-----|  -> exit {...}

#   22| {...}
#-----|  -> param(...)

#   24| param(...)
#-----|  -> {...}

#   24| {...}
#-----|  -> ...=...

#   28| sum
#-----|  -> 0

#   28| ...=...
#-----|  -> sum

#   28| 0
#-----|  -> numbers

#   28| 0
#-----|  -> 0

#   29| forach(... in ...)
#-----|  -> number
#-----|  -> sum

#   29| number
#-----|  -> {...}

#   29| numbers
#-----|  -> numbers

#   29| numbers
#-----|  -> forach(... in ...)

#   29| numbers
#-----|  -> numbers

#   29| {...}
#-----|  -> ...=...

#   31| sum
#-----|  -> number

#   31| ...=...
#-----|  -> sum

#   31| number
#-----|  -> forach(... in ...)

#   31| number
#-----|  -> number

#   33| sum
#-----|  -> sum

#   33| sum
#-----|  -> exit {...} (normal)

#   33| sum
#-----|  -> sum

#   36| Add-Numbers-From-Pipeline
#-----|  -> exit functions.ps1 (normal)

#   36| enter {...}
#-----|  -> {...}

#   36| exit {...}

#   36| exit {...} (normal)
#-----|  -> exit {...}

#   36| {...}
#-----|  -> param(...)

#   38| param(...)
#-----|  -> {...}

#   41| {...}
#-----|  -> ...=...

#   42| sum
#-----|  -> 0

#   42| ...=...
#-----|  -> sum

#   42| 0
#-----|  -> {...}

#   42| 0
#-----|  -> 0

#   44| {...}
#-----|  -> ...=...

#   46| sum
#-----|  -> _

#   46| ...=...
#-----|  -> sum

#   46| _
#-----|  -> {...}
#-----|  -> {...}

#   46| _
#-----|  -> _

#   48| {...}
#-----|  -> sum

#   50| sum
#-----|  -> sum

#   50| sum
#-----|  -> exit {...} (normal)

#   50| sum
#-----|  -> sum

global.ps1:
#    1| {...}
#-----|  -> ...=...

#    1| enter global.ps1
#-----|  -> global.ps1

#    1| exit global.ps1

#    1| exit global.ps1 (normal)
#-----|  -> exit global.ps1

#    1| global.ps1
#-----|  -> {...}

#    2| a
#-----|  -> 1

#    2| ...=...
#-----|  -> a

#    2| 1
#-----|  -> ...=...

#    2| 1
#-----|  -> 1

#    3| b
#-----|  -> 2

#    3| ...=...
#-----|  -> b

#    3| 2
#-----|  -> {...}

#    3| 2
#-----|  -> 2

#    5| {...}
#-----|  -> ...=...

#    6| c
#-----|  -> ...+...

#    6| ...=...
#-----|  -> c

#    6| a
#-----|  -> b

#    6| ...+...
#-----|  -> exit global.ps1 (normal)

#    6| ...+...
#-----|  -> a

#    6| b
#-----|  -> ...+...

loops.ps1:
#    1| Test-While
#-----|  -> Test-Break

#    1| enter loops.ps1
#-----|  -> loops.ps1

#    1| exit loops.ps1

#    1| exit loops.ps1 (normal)
#-----|  -> exit loops.ps1

#    1| loops.ps1
#-----|  -> {...}

#    1| {...}
#-----|  -> Test-While

#    1| enter {...}
#-----|  -> {...}

#    1| exit {...}

#    1| exit {...} (normal)
#-----|  -> exit {...}

#    1| {...}
#-----|  -> {...}

#    2| a
#-----|  -> 0

#    2| ...=...
#-----|  -> a

#    2| {...}
#-----|  -> ...=...

#    2| 0
#-----|  -> while(...) {...}

#    2| 0
#-----|  -> 0

#    4| while(...) {...}
#-----|  -> ... -le ...

#    4| a
#-----|  -> 10

#    4| ... -le ...
#-----|  -> a

#    4| ... -le ...
#-----| false -> exit {...} (normal)
#-----| true -> {...}

#    4| ... -le ...
#-----|  -> ... -le ...

#    4| 10
#-----|  -> ... -le ...

#    4| {...}
#-----|  -> ...=...

#    5| a
#-----|  -> ...+...

#    5| ...=...
#-----|  -> a

#    5| a
#-----|  -> 1

#    5| ...+...
#-----|  -> ... -le ...

#    5| ...+...
#-----|  -> a

#    5| 1
#-----|  -> ...+...

#    9| Test-Break
#-----|  -> Test-Continue

#    9| enter {...}
#-----|  -> {...}

#    9| exit {...}

#    9| exit {...} (normal)
#-----|  -> exit {...}

#    9| {...}
#-----|  -> {...}

#   10| a
#-----|  -> 0

#   10| ...=...
#-----|  -> a

#   10| {...}
#-----|  -> ...=...

#   10| 0
#-----|  -> while(...) {...}

#   10| 0
#-----|  -> 0

#   11| while(...) {...}
#-----|  -> ... -le ...

#   11| a
#-----|  -> 10

#   11| ... -le ...
#-----|  -> a

#   11| ... -le ...
#-----| false -> exit {...} (normal)
#-----| true -> {...}

#   11| ... -le ...
#-----|  -> ... -le ...

#   11| 10
#-----|  -> ... -le ...

#   11| {...}
#-----|  -> break

#   12| break
#-----| break -> exit {...} (normal)

#   17| Test-Continue
#-----|  -> Test-DoWhile

#   17| enter {...}
#-----|  -> {...}

#   17| exit {...}

#   17| exit {...} (normal)
#-----|  -> exit {...}

#   17| {...}
#-----|  -> {...}

#   18| a
#-----|  -> 0

#   18| ...=...
#-----|  -> a

#   18| {...}
#-----|  -> ...=...

#   18| 0
#-----|  -> while(...) {...}

#   18| 0
#-----|  -> 0

#   19| while(...) {...}
#-----|  -> ... -le ...

#   19| a
#-----|  -> 10

#   19| ... -le ...
#-----|  -> a

#   19| ... -le ...
#-----| false -> exit {...} (normal)
#-----| true -> {...}

#   19| ... -le ...
#-----|  -> ... -le ...

#   19| 10
#-----|  -> ... -le ...

#   19| {...}
#-----|  -> continue

#   20| continue
#-----| continue -> ... -le ...

#   25| Test-DoWhile
#-----|  -> Test-DoUntil

#   25| enter {...}
#-----|  -> {...}

#   25| exit {...}

#   25| exit {...} (normal)
#-----|  -> exit {...}

#   25| {...}
#-----|  -> {...}

#   26| a
#-----|  -> 0

#   26| ...=...
#-----|  -> a

#   26| {...}
#-----|  -> ...=...

#   26| 0
#-----|  -> DoWhile

#   26| 0
#-----|  -> 0

#   28| DoWhile
#-----|  -> {...}

#   28| {...}
#-----|  -> ...=...

#   29| a
#-----|  -> ...+...

#   29| ...=...
#-----|  -> a

#   29| a
#-----|  -> 1

#   29| ...+...
#-----|  -> ... -le ...

#   29| ...+...
#-----|  -> a

#   29| 1
#-----|  -> ...+...

#   30| a
#-----|  -> 10

#   30| ... -le ...
#-----|  -> a

#   30| ... -le ...
#-----| false -> exit {...} (normal)
#-----| true -> {...}

#   30| ... -le ...
#-----|  -> ... -le ...

#   30| 10
#-----|  -> ... -le ...

#   33| Test-DoUntil
#-----|  -> Tet-For

#   33| enter {...}
#-----|  -> {...}

#   33| exit {...}

#   33| exit {...} (normal)
#-----|  -> exit {...}

#   33| {...}
#-----|  -> {...}

#   34| a
#-----|  -> 0

#   34| ...=...
#-----|  -> a

#   34| {...}
#-----|  -> ...=...

#   34| 0
#-----|  -> DoUntil

#   34| 0
#-----|  -> 0

#   36| DoUntil
#-----|  -> {...}

#   36| {...}
#-----|  -> ...=...

#   37| a
#-----|  -> ...+...

#   37| ...=...
#-----|  -> a

#   37| a
#-----|  -> 1

#   37| ...+...
#-----|  -> ... -ge ...

#   37| ...+...
#-----|  -> a

#   37| 1
#-----|  -> ...+...

#   38| a
#-----|  -> 10

#   38| ... -ge ...
#-----|  -> a

#   38| ... -ge ...
#-----| true -> exit {...} (normal)
#-----| false -> {...}

#   38| ... -ge ...
#-----|  -> ... -ge ...

#   38| 10
#-----|  -> ... -ge ...

#   41| Tet-For
#-----|  -> Test-ForEach

#   41| enter {...}
#-----|  -> {...}

#   41| exit {...}

#   41| exit {...} (normal)
#-----|  -> exit {...}

#   41| {...}
#-----|  -> {...}

#   42| a
#-----|  -> 0

#   42| ...=...
#-----|  -> a

#   42| {...}
#-----|  -> ...=...

#   42| 0
#-----|  -> for(...;...;...)

#   42| 0
#-----|  -> 0

#   44| for(...;...;...)
#-----|  -> ...=...

#   44| i
#-----|  -> 0

#   44| ...=...
#-----|  -> i

#   44| 0
#-----|  -> ... -le ...

#   44| 0
#-----|  -> 0

#   44| i
#-----|  -> 10

#   44| ... -le ...
#-----|  -> i

#   44| ... -le ...
#-----| false -> exit {...} (normal)
#-----| true -> {...}

#   44| ... -le ...
#-----|  -> ... -le ...

#   44| 10
#-----|  -> ... -le ...

#   44| i
#-----|  -> ...+...

#   44| ...=...
#-----|  -> i

#   44| i
#-----|  -> 1

#   44| ...+...

#   44| ...+...
#-----|  -> i

#   44| 1
#-----|  -> ...+...

#   44| {...}
#-----|  -> ...=...

#   45| a
#-----|  -> ...+...

#   45| ...=...
#-----|  -> a

#   45| a
#-----|  -> 1

#   45| ...+...
#-----|  -> ...=...

#   45| ...+...
#-----|  -> a

#   45| 1
#-----|  -> ...+...

#   49| Test-ForEach
#-----|  -> exit loops.ps1 (normal)

#   49| enter {...}
#-----|  -> {...}

#   49| {...}
#-----|  -> {...}

#   50| letterArray
#-----|  -> ...,...

#   50| ...=...
#-----|  -> letterArray

#   50| {...}
#-----|  -> ...=...

#   50| ...,...
